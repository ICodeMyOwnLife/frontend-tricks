{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["useFormControl","useContext","FormControlContext","createContext","createSvgIcon","path","displayName","Component","memo","forwardRef","props","ref","createElement","muiName","Button","children","classes","classNameProp","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","variant","other","text","outlined","contained","primary","secondary","root","textPrimary","textSecondary","outlinedPrimary","outlinedSecondary","containedPrimary","containedSecondary","concat","inherit","colorInherit","focusRipple","focusVisible","label","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","transition","transitions","create","duration","short","textDecoration","backgroundColor","action","hoverOpacity","width","display","alignItems","justifyContent","main","border","getContrastText","grey","boxShadow","shadows","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge","name","FormControlLabel","checked","control","disabledProp","inputRef","_props$labelPlacement","labelPlacement","onChange","value","muiFormControl","controlProps","forEach","key","cloneElement","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","isControlled","useRef","current","_React$useState","useState","Boolean","checkedState","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","target","withStyles","position","opacity","height","top","left","margin","zIndex","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","colorPrimary","colorSecondary"],"mappings":"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","file":"static/js/39.545e0cfc.chunk.js","sourcesContent":["import React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var text = variant === 'text';\n  var outlined = variant === 'outlined';\n  var contained = variant === 'contained';\n  var primary = color === 'primary';\n  var secondary = color === 'secondary';\n  var className = clsx(classes.root, classNameProp, text && [classes.text, primary && classes.textPrimary, secondary && classes.textSecondary], outlined && [classes.outlined, primary && classes.outlinedPrimary, secondary && classes.outlinedSecondary], contained && [classes.contained, primary && classes.containedPrimary, secondary && classes.containedSecondary], size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, {\n    inherit: classes.colorInherit\n  }[color]);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      classNameProp = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, classNameProp, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, classNameProp, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}