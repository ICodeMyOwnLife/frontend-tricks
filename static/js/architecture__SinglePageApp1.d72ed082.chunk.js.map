{"version":3,"sources":["components/References/index.tsx","components/Todos/index.tsx","components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/PageLayout/styles.ts","components/PageLayout/index.tsx","../node_modules/@material-ui/core/esm/styles/createStyles.js","pages/architecture/SinglePageApp1/questions.tsx","pages/architecture/SinglePageApp1/index.tsx"],"names":["References","memo","className","references","variant","map","name","url","key","href","target","rel","displayName","Todos","todos","Box","Typography","todo","useStyles","makeStyles","theme","Question","fontWeight","HiddenContent","marginBottom","spacing","Answer","marginTop","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","BottomBox","paddingBottom","borderBottom","BottomBoxTitle","QuestionItem","index","question","answer","classes","useToggle","open","toggleOpen","hasReferences","length","hasTodos","showBottomBox","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","createStyles","root","questions","fontFamily","color","classNamePrefix","QuestionPage","children","props","PageLayout","List","questionInfo","content","title","clsx","styles","SinglePageApp1Component","SinglePageApp1"],"mappings":"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","file":"static/js/architecture__SinglePageApp1.d72ed082.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const ReferencesComponent: FC<ReferencesProps> = ({\n  className,\n  references,\n}) => (\n  <Box className={className}>\n    <Typography variant=\"h5\">References</Typography>\n    <ol>\n      {references!.map(({ name, url }) => (\n        <li key={url}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst References = memo(ReferencesComponent);\nReferences.displayName = 'References';\nexport default References;\n\nexport interface ReferencesProps {\n  className?: string;\n  references: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const TodosComponent: FC<TodosProps> = ({ className, todos }) => (\n  <Box>\n    <Typography className={className} variant=\"h5\">\n      Todos\n    </Typography>\n    <ol>\n      {todos!.map(todo => (\n        <li key={todo}>{todo}</li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst Todos = memo(TodosComponent);\nTodos.displayName = 'Todos';\nexport default Todos;\n\nexport interface TodosProps {\n  className?: string;\n  todos: string[];\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  HiddenContent: {\n    marginBottom: theme.spacing(2),\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  BottomBox: {\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${grey[400]}`,\n\n    '& ol,ul': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  BottomBoxTitle: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { ListItem, ListItemText, Collapse, Box } from '@material-ui/core';\nimport { useToggle } from 'cb-hooks';\nimport References from 'components/References';\nimport Todos from 'components/Todos';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n  todos,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const hasReferences = !!(references && references.length);\n  const hasTodos = !!(todos && todos.length);\n  const showBottomBox = hasReferences || hasTodos;\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.HiddenContent}>\n          <Box className={classes.Answer}>{answer}</Box>\n\n          {showBottomBox && (\n            <Box className={classes.BottomBox}>\n              {hasReferences && (\n                <References\n                  className={classes.BottomBoxTitle}\n                  references={references!}\n                />\n              )}\n\n              {hasTodos && (\n                <Todos className={classes.BottomBoxTitle} todos={todos!} />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    questions: {\n      marginTop: spacing(4),\n      '& code': {\n        fontFamily: `'Courier New', Courier, monospace`,\n        fontSize: 14,\n        fontWeight: 600,\n        color: `rgb(219, 104, 27)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'QuestionPage' });\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport PageLayout from 'components/PageLayout';\nimport useStyles from './styles';\n\nexport const QuestionPageComponent: FC<QuestionPageProps> = ({\n  questions,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PageLayout {...props}>\n      {children}\n      <Box className={classes.questions}>\n        <Typography variant=\"h4\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageComponent);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  className?: string;\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      marginTop: spacing(4),\n    },\n    content: {\n      marginTop: spacing(2.5),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'PageLayout' });\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const PageLayoutComponent: FC<PageLayoutProps> = ({\n  className,\n  title,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box className={classes.content}>{children}</Box>\n    </Box>\n  );\n};\n\nconst PageLayout = memo(PageLayoutComponent);\nPageLayout.displayName = 'PageLayout';\nexport default PageLayout;\n\nexport interface PageLayoutProps {\n  className?: string;\n  title: string;\n  children: ReactNode;\n}\n","import { createStyles as createStylesOriginal } from '@material-ui/styles'; // let warnOnce = false;\n// To remove in v5\n\nexport default function createStyles(styles) {\n  // warning(\n  //   warnOnce,\n  //   [\n  //     'Material-UI: createStyles from @material-ui/core/styles is deprecated.',\n  //     'Please use @material-ui/styles/createStyles',\n  //   ].join('\\n'),\n  // );\n  // warnOnce = true;\n  return createStylesOriginal(styles);\n}","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `What is a Single Page Application?`,\n    answer: (\n      <div>\n        <p>\n          A <b>single-page application (SPA)</b> is a web application or web\n          site that interacts with the user by dynamically rewriting the current\n          page rather than loading entire new pages from a server.\n        </p>\n        <p>\n          <b>Examples:</b> Gmail, Google Maps, Facebook or GitHub\n        </p>\n        <p>\n          <b>Frameworks:</b> Angular, Ember.js, ExtJS, Meteor.js, Knockout.js,\n          React, Vue.js\n        </p>\n        <p>\n          <b>Technologies used:</b>\n        </p>\n        <ul>\n          <li>\n            <b>Location hash</b> or <b>HTML5 History API</b> is used to provide\n            the perception and navigability of separate logical pages in the\n            application.\n          </li>\n          <li>\n            <b>Ajax</b>, <b>WebSockets</b> or <b>Server-send events (SSEs)</b>{' '}\n            is used to communicate with servers.\n          </li>\n        </ul>\n        <p>\n          <b>Props:</b>\n        </p>\n        <ul>\n          <li>\n            <b>SPA is fast</b>: Most resources (HTML + CSS + JS) are only loaded\n            once, only data is transmitted back and forth.\n          </li>\n          <li>\n            <b>The development is sComponentified and streamlined</b>: The\n            client and server are totally independent of one another. The same\n            backend code can be reused for web application or mobile application\n            or any of other client applications.\n          </li>\n          <li>SPAs are easy to debug with Chrome</li>\n          <li>\n            <b>SPAs can cached any local storage effectively</b>: An app can\n            send only one request, store all data, then it can use this data and\n            works event offline.\n          </li>\n          <li>SPAs are very easy to deploy.</li>\n        </ul>\n        <p>\n          <b>Cons:</b>\n        </p>\n        <ul>\n          <li>\n            <b>Search engine optimization (SEO)</b>: Since there is no HTML\n            markup except the initial <code>index.html</code>, search engines\n            cannot index the content because their crawlers cannot execute the\n            JavaScript used to generate the HTML. However, Google has stated\n            that their search engine is now able to crawl Ajax call.\n          </li>\n          <li>\n            SPAs have a slower first page load than server-based applications\n            because heavy client frameworks are required to be loaded to the\n            client.\n          </li>\n          <li>It is required JavaScript to be present and enabled.</li>\n          <li>\n            <b>SPAs are less secure</b>: Due to cross-site scripting (XSS), it\n            enables attackers to inject client-side scripts into web application\n            by other users.\n          </li>\n          <li>\n            <b>Analytics</b>: Analytics tools such as Google Analytics rely\n            heavily upon entire new pages loading in the browser, initiated by a\n            new page load. SPAs do not work this way.\n          </li>\n        </ul>\n        <p>\n          <b>When should we consider using a SPA?</b>\n        </p>\n        <ol>\n          <li>\n            There is a rich interaction between the user and our application.\n          </li>\n          <li>If we want to provide real-time updates on the page.</li>\n        </ol>\n        <p>\n          <b>Examples:</b> SaaS platforms, social networks and closed\n          communities.\n        </p>\n        <p>\n          <b>When should we avoid using a SPA?</b>\n        </p>\n        <ol>\n          <li>The content is purely static.</li>\n          <li>\n            We need to provide accessibility for users with older browsers or\n            slower internet connections.\n          </li>\n        </ol>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Medium] Single-page application vs. multiple-page application`,\n        url: `https://medium.com/@NeotericEU/single-page-application-vs-multiple-page-application-2591588efe58`,\n      },\n      {\n        name: `[Wikipedia] Single-page application`,\n        url: `https://en.m.wikipedia.org/wiki/Single-page_application`,\n      },\n      {\n        name: `What Is a Single-Page Application?`,\n        url: `https://dzone.com/articles/what-is-a-single-page-application`,\n      },\n      {\n        name: `How Single Page Web Applications Actually Work`,\n        url: `https://dzone.com/articles/how-single-page-web-applications-actually-work`,\n      },\n    ],\n  },\n  {\n    question: `What is a Multiple-Page Application?`,\n    answer: (\n      <div>\n        <p>\n          <b>Multi page applications</b> are the traditional web applications\n          that reload the entire page and displays the new one when a user\n          interacts with the web app.\n        </p>\n        <p>\n          <b>Pros:</b>\n        </p>\n        <ul>\n          <li>Performs well on the search engine</li>\n          <li>Provides a visual map of the web app to the user</li>\n          <li>\n            Provides lots of analytics with valuable information on how a\n            website is performing: which features are working an which are not.\n          </li>\n        </ul>\n        <p>\n          <b>Cons:</b>\n        </p>\n        <ul>\n          <li>Slow speed and performance</li>\n          <li>Comparatively complex development</li>\n          <li>Coupled backend and frontend</li>\n        </ul>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Medium] Single Page Applications vs Multiple Page Applications — Do You Really Need an SPA?`,\n        url: `https://medium.com/@goldybenedict/single-page-applications-vs-multiple-page-applications-do-you-really-need-an-spa-cf60825232a3`,\n      },\n      {\n        name: `[Medium] Single-page application vs. multiple-page application`,\n        url: `https://medium.com/@NeotericEU/single-page-application-vs-multiple-page-application-2591588efe58`,\n      },\n      {\n        name: `What’s the Difference Between Single-Page and Multi-Page Apps`,\n        url: `https://rubygarage.org/blog/single-page-app-vs-multi-page-app`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport questions from './questions';\n\nexport const SinglePageApp1Component: FC = () => (\n  <QuestionPage title=\"Single Page App\" questions={questions} />\n);\n\nconst SinglePageApp1 = memo(SinglePageApp1Component);\nSinglePageApp1.displayName = 'SinglePageApp1';\nexport default SinglePageApp1;\n"],"sourceRoot":""}