{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","questions/css/Clipping1/styles.module.scss","questions/css/Clipping1/1.jpg","questions/css/Clipping1/Section.tsx","questions/css/Clipping1/questions.tsx","questions/css/Clipping1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","Section","float","imageClassName","SectionImage","src","imgSrc","alt","SectionText","Clipping1Impl","none","inset1","inset2","circle1","circle2","ellipse1","ellipse2","polygon1","polygon2","url1","transition","animation","width","height","id","cx","cy","r","Clipping1"],"mappings":"mNA0CeA,EAvCGC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,SAAU,CACRC,WAAY,KAEdC,OAAQ,CACNC,UAAWJ,EAAMK,QAAQ,KACzBC,QAAS,EACTC,SAAU,GACVC,gBAAiBC,IAAK,IACtBC,OAAO,aAAD,OAAeD,IAAK,MAC1BE,aAAc,EAEd,MAAO,CACLL,QAASN,EAAMK,QAAQ,EAAG,MAG5B,UAAW,CACTO,OAAQZ,EAAMK,QAAQ,IAAK,IAG7B,QAAS,CACPQ,SAAU,SAGdC,WAAY,CACVF,OAAQZ,EAAMK,QAAQ,EAAG,EAAG,GAE5B,OAAQ,CACND,UAAWJ,EAAMK,QAAQ,IAG3B,OAAQ,CACNE,SAAU,GACVL,WAAY,IACZa,aAAcf,EAAMK,QAAQ,SCY5BW,EAAeC,gBArCuC,SAAC,GAKtD,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,WAEMC,EAAUxB,IADZ,EAEuByB,aAAU,GAFjC,mBAEGC,EAFH,KAESC,EAFT,KAIJ,OACE,oCACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAASH,GACxB,kBAACI,EAAA,EAAD,CAAcP,QAAS,CAAEQ,QAASR,EAAQrB,WACvCiB,EADH,KACYC,IAGd,kBAACY,EAAA,EAAD,CAAUC,GAAIR,EAAMS,QAAQ,QAC1B,kBAACC,EAAA,EAAD,CAAKC,UAAWb,EAAQnB,QAASiB,KAC9BC,GAAcA,EAAWe,QAC1B,kBAACF,EAAA,EAAD,CAAKC,UAAWb,EAAQR,YACtB,kBAACuB,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACA,4BACGjB,EAAWkB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACd,wBAAIC,IAAKD,GACP,uBAAGE,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAC/BL,cAarBxB,EAAa8B,YAAc,eACZ9B,QC9BAlB,EAnBGC,aAAW,SAACC,GAAD,MAAmB,CAC9C+C,UAAW,CACT3C,UAAWJ,EAAMK,QAAQ,IAE3B2C,QAAS,CACP5C,UAAWJ,EAAMK,QAAQ,MAE3B4C,UAAW,CACT7C,UAAWJ,EAAMK,QAAQ,GAEzB,SAAU,CACR6C,WAAW,oCACX3C,SAAU,GACVL,WAAY,IACZiD,MAAM,0BCiBNC,EAAenC,gBAzBkC,SAAC,GAIjD,IAHLoC,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEMjC,EAAUxB,IAEhB,OACE,kBAACoC,EAAA,EAAD,CAAKC,UAAWb,EAAQyB,WACtB,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAAMe,GAC1B,kBAACnB,EAAA,EAAD,CAAKC,UAAWb,EAAQ0B,SAAUO,GAClC,kBAACrB,EAAA,EAAD,CAAKC,UAAWb,EAAQ2B,WACtB,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,MAApB,aACA,kBAACJ,EAAA,EAAD,KACE,kBAACsB,EAAA,EAAD,KACGF,EAAUf,KAAI,SAACkB,EAAcvC,GAAf,OACb,kBAAC,EAAD,eAAcwB,IAAKxB,EAAOA,MAAOA,EAAQ,GAAOuC,cAU9DL,EAAaN,YAAc,eACZM,O,iCCnCf,0EAmBMM,EAAOzC,gBAb0B,SAAC,GAAD,IACrCkB,EADqC,EACrCA,UACAoB,EAFqC,EAErCA,SAFqC,IAGrCI,aAHqC,MAG7BC,IAH6B,EAIrCC,EAJqC,EAIrCA,SAJqC,OAMrC,yBAAK1B,UAAW2B,IAAWxC,IAAQoC,KAAMvB,IACvC,kBAAC,IAAD,CAAmB0B,SAAUA,EAAUF,MAAOA,GAC3CJ,OAMPG,EAAKZ,YAAc,OACJY,O,oBCpBfK,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,aAAe,6BAA6B,YAAc,4BAA4B,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,OAAS,uBAAuB,OAAS,uBAAuB,QAAU,wBAAwB,QAAU,wBAAwB,SAAW,yBAAyB,SAAW,yBAAyB,SAAW,yBAAyB,SAAW,yBAAyB,KAAO,qBAAqB,WAAa,2BAA2B,UAAY,0BAA0B,KAAO,uB,oBCD3oBD,EAAOC,QAAU,IAA0B,+B,2HCoCrCC,EAAUhD,gBA/B6B,SAAC,GAAD,QAC3CiD,aAD2C,MACnC,OADmC,EAE3CC,EAF2C,EAE3CA,eAF2C,OAI3C,yBAAKhC,UAAWb,IAAQ2C,SACtB,yBACE9B,UAAW2B,IACTxC,IAAQ8C,aACR9C,IAAQ4C,GACRC,GAEFE,IAAKC,IACLC,IAAI,SAEN,uBAAGpC,UAAWb,IAAQkD,aAAtB,+0BAkBJP,EAAQnB,YAAc,UACPmB,Q,SC6GAX,EA/ImB,CAChC,CACEnC,SAAS,+CACTC,OACE,6BACE,kCACM,2CADN,wBAGA,mFACwD,IACtD,uCAFF,kBAEmC,gDAEnC,kBAACsC,EAAA,EAAD,CAAMG,SAAS,QAAf,q9CAkFJxC,WAAY,CACV,CACEmB,KAAK,kBACLC,IAAI,8DAEN,CACED,KAAK,sBACLC,IAAI,kEAEN,CACED,KAAK,yBACLC,IAAI,0DAEN,CACED,KAAK,6BACLC,IAAI,8DAEN,CACED,KAAK,2CACLC,IAAI,gDAEN,CACED,KAAK,kDACLC,IAAI,yDAEN,CACED,KAAK,sBACLC,IAAI,yDAEN,CACED,KAAK,0BACLC,IAAI,6DAEN,CACED,KAAK,wBACLC,IAAI,2DAEN,CACED,KAAK,sBACLC,IAAI,oCAEN,CACED,KAAK,yDACLC,IAAI,+DC7IZ,8CAMO,IAAMgC,EAAoB,kBAC/B,kBAACrB,EAAA,EAAD,CAAcC,MAAM,aAAaC,UAAWA,GAC1C,yBAAKnB,UAAWb,IAAQyB,WACtB,kBAAC,EAAD,CAASoB,eAAgB7C,IAAQoD,KAAMR,MAAM,UAC7C,kBAAC,EAAD,CAASC,eAAgB7C,IAAQqD,SACjC,kBAAC,EAAD,CAASR,eAAgB7C,IAAQsD,OAAQV,MAAM,UAC/C,kBAAC,EAAD,CAASC,eAAgB7C,IAAQuD,UACjC,kBAAC,EAAD,CAASV,eAAgB7C,IAAQwD,QAASZ,MAAM,UAChD,kBAAC,EAAD,CAASC,eAAgB7C,IAAQyD,WACjC,kBAAC,EAAD,CAASZ,eAAgB7C,IAAQ0D,SAAUd,MAAM,UACjD,kBAAC,EAAD,CAASC,eAAgB7C,IAAQ2D,WACjC,kBAAC,EAAD,CAASd,eAAgB7C,IAAQ4D,SAAUhB,MAAM,UACjD,kBAAC,EAAD,CAASC,eAAgB7C,IAAQ6D,OACjC,kBAAC,EAAD,CAAShB,eAAgB7C,IAAQ8D,WAAYlB,MAAM,UACnD,kBAAC,EAAD,CAASC,eAAgB7C,IAAQ+D,aAEnC,yBAAKC,MAAM,IAAIC,OAAO,KACpB,8BACE,8BAAUC,GAAG,UACX,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,YAOhCC,EAAY3E,eAAKwD,GACvBmB,EAAU9C,YAAc,YACT8C","file":"static/js/css__Clipping1.ba4869d8.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__2cXDA\",\"Section\":\"styles_Section__1L53-\",\"SectionImage\":\"styles_SectionImage__1Htcd\",\"SectionText\":\"styles_SectionText__1rbCd\",\"left\":\"styles_left__3gPLK\",\"right\":\"styles_right__3DAtU\",\"none\":\"styles_none__1Rnu5\",\"inset1\":\"styles_inset1__2rEkb\",\"inset2\":\"styles_inset2__K8jpJ\",\"circle1\":\"styles_circle1__1IeUW\",\"circle2\":\"styles_circle2__1HKpF\",\"ellipse1\":\"styles_ellipse1__yyo2p\",\"ellipse2\":\"styles_ellipse2__sGasd\",\"polygon1\":\"styles_polygon1__3pu8D\",\"polygon2\":\"styles_polygon2__2MtA3\",\"url1\":\"styles_url1__1fxJF\",\"transition\":\"styles_transition__3pCSJ\",\"animation\":\"styles_animation__3wIUD\",\"clip\":\"styles_clip__1c9ax\"};","module.exports = __webpack_public_path__ + \"static/media/1.2836dba6.jpg\";","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport imgSrc from './1.jpg';\nimport classes from './styles.module.scss';\n\nexport const SectionImpl: FC<SectionProps> = ({\n  float = 'left',\n  imageClassName,\n}) => (\n  <div className={classes.Section}>\n    <img\n      className={classnames(\n        classes.SectionImage,\n        classes[float],\n        imageClassName,\n      )}\n      src={imgSrc}\n      alt=\"wild\"\n    />\n    <p className={classes.SectionText}>\n      Maecenas aliquet orci eu leo consectetur, ut tincidunt sem imperdiet.\n      Nulla sed leo non augue mollis ultricies in a dolor. Lorem ipsum dolor sit\n      amet, consectetur adipiscing elit. Nullam erat magna, semper eu massa sit\n      amet, pulvinar rutrum nunc. Praesent sit amet nisl vel mi condimentum\n      facilisis. Aliquam ut lacus tempor, iaculis arcu eu, faucibus diam. Nam at\n      nibh euismod, finibus nulla sit amet, consectetur arcu. Donec venenatis\n      lobortis elit, ut dictum metus suscipit ut. Sed vehicula, dui eu euismod\n      condimentum, dui ex tincidunt metus, et condimentum dui leo ac eros. Sed\n      feugiat fermentum iaculis. Maecenas id ipsum quis justo ultrices\n      facilisis. Praesent lorem magna, aliquam vel eleifend eget, sagittis ac\n      neque. Curabitur urna erat, consequat quis sollicitudin non, commodo et\n      nisl. Ut scelerisque porttitor quam vel sodales.\n    </p>\n  </div>\n);\n\nconst Section = memo(SectionImpl);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  float?: 'left' | 'right';\n  imageClassName?: string;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to clip an element into a defined shape?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>clip-path</code> to clip an element.\n        </p>\n        <p>\n          If we want texts wrap around the clipped element, use{' '}\n          <code>float</code> combined with <code>shape-outside</code>\n        </p>\n        <Code language=\"scss\">\n          {`.left {\n  float: left;\n  margin-right: 20px;\n}\n\n.right {\n  float: right;\n  margin-left: 20px;\n}\n\n.none {\n  shape-outside: none;\n  clip-path: none;\n}\n\n.inset1 {\n  $inset1: inset(40px 60px 0 0);\n  shape-outside: $inset1;\n  clip-path: $inset1;\n}\n\n.inset2 {\n  $inset2: inset(40px 0 0 60px round 24px 6px 80px 48px);\n  shape-outside: $inset2;\n  clip-path: $inset2;\n}\n\n.circle1 {\n  $circle1: circle(140px);\n  shape-outside: $circle1;\n  clip-path: $circle1;\n}\n\n.circle2 {\n  shape-outside: circle(162px at 180px 40px);\n  clip-path: circle(152px at 160px 28px);\n}\n\n.ellipse1 {\n  $ellipse1: ellipse(140px 90px);\n  shape-outside: $ellipse1;\n  clip-path: $ellipse1;\n}\n\n.ellipse2 {\n  shape-outside: ellipse(192px 124px at 200px 56px);\n  clip-path: ellipse(180px 120px at 180px 44px);\n}\n\n.polygon1 {\n  $polygon1: polygon(50% 0%, 98% 35%, 79% 91%, 21% 91%, 2% 35%);\n  shape-outside: $polygon1;\n  clip-path: $polygon1;\n}\n\n.polygon2 {\n  $polygon2: polygon(evenodd, 50% 0%, 79% 91%, 2% 35%, 98% 35%, 21% 91%);\n  shape-outside: $polygon2;\n  clip-path: $polygon2;\n}\n\n.url1 {\n  shape-outside: url(./2.png);\n  clip-path: url(#myClip);\n}\n\n.transition {\n  $polygon-normal: polygon(50% 0, 100% 100%, 0 100%);\n  shape-outside: $polygon-normal;\n  clip-path: $polygon-normal;\n  transition: 1s ease all;\n\n  &:hover {\n    $polygon-hover: polygon(100% 0, 50% 100%, 0 0);\n    shape-outside: $polygon-hover;\n    clip-path: $polygon-hover;\n  }\n}`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] clip-path`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path`,\n      },\n      {\n        name: `[MDN] shape-outside`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/shape-outside`,\n      },\n      {\n        name: `[CSS-TRICKS] clip-path`,\n        url: `https://css-tricks.com/almanac/properties/c/clip-path/`,\n      },\n      {\n        name: `[CSS-TRICKS] shape-outside`,\n        url: `https://css-tricks.com/almanac/properties/s/shape-outside/`,\n      },\n      {\n        name: `[CSS-TRICKS] Clipping and Masking in CSS`,\n        url: `https://css-tricks.com/clipping-masking-css/`,\n      },\n      {\n        name: `[CSS-TRICKS] Sketchy Avatars with CSS clip-path`,\n        url: `https://css-tricks.com/sketchy-avatars-css-clip-path/`,\n      },\n      {\n        name: `[codrops] clip-path`,\n        url: `https://tympanus.net/codrops/css_reference/clip-path/`,\n      },\n      {\n        name: `[codrops] shape-outside`,\n        url: `https://tympanus.net/codrops/css_reference/shape-outside/`,\n      },\n      {\n        name: `[codrops] basic-shape`,\n        url: `https://tympanus.net/codrops/css_reference/basic-shape/`,\n      },\n      {\n        name: `CSS clip-path maker`,\n        url: `https://bennettfeely.com/clippy/`,\n      },\n      {\n        name: `[w3c] Winding rule: the ‘fill-rule’ property`,\n        url: `https://www.w3.org/TR/SVG/painting.html#FillRuleProperty`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport Section from './Section';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Clipping1Impl: FC = () => (\n  <QuestionPage title=\"Clipping 1\" questions={questions}>\n    <div className={classes.Container}>\n      <Section imageClassName={classes.none} float=\"right\" />\n      <Section imageClassName={classes.inset1} />\n      <Section imageClassName={classes.inset2} float=\"right\" />\n      <Section imageClassName={classes.circle1} />\n      <Section imageClassName={classes.circle2} float=\"right\" />\n      <Section imageClassName={classes.ellipse1} />\n      <Section imageClassName={classes.ellipse2} float=\"right\" />\n      <Section imageClassName={classes.polygon1} />\n      <Section imageClassName={classes.polygon2} float=\"right\" />\n      <Section imageClassName={classes.url1} />\n      <Section imageClassName={classes.transition} float=\"right\" />\n      <Section imageClassName={classes.animation} />\n    </div>\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"myClip\">\n          <circle cx=\"60\" cy=\"60\" r=\"60\" />\n          <circle cx=\"160\" cy=\"100\" r=\"84\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </QuestionPage>\n);\n\nconst Clipping1 = memo(Clipping1Impl);\nClipping1.displayName = 'Clipping1';\nexport default Clipping1;\n"],"sourceRoot":""}