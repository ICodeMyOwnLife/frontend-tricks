{"version":3,"sources":["questions/performance/Memory1/styles.module.scss","services/backendService.ts","questions/performance/Memory1/questions.tsx","questions/performance/Memory1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss","components/Button/index.tsx","components/Button/styles.module.scss","components/Input/index.tsx","components/NumberInput/index.tsx","components/Input/styles.module.scss"],"names":["module","exports","backendService","Axios","create","baseURL","process","questions","question","answer","Code","language","references","name","url","Performance1Component","useState","length","setLength","browserMemory","setBrowserMemory","serverMemory","setServerMemory","getBrowserMemory","useCallback","undefined","setTimeout","Array","from","reverse","performance","memory","totalJSHeapSize","jsHeapSizeLimit","usedJSHeapSize","getServerMemory","a","get","params","memoryUsage","data","Question","title","NumberInput","label","value","onChange","className","classes","MemoryTable","Button","onClick","Result","JSON","stringify","Performance1","memo","displayName","children","Container","Title","Content","Questions","map","index","key","Index","Answer","References","href","target","rel","style","okaidia","classnames","id","download","type","Input","labelClassName","inputClassName","props","InputGroup","Label","htmlFor","handleChange","e","Number"],"mappings":"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","file":"static/js/8.da86b072.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MemoryTable\":\"styles_MemoryTable__2fkTy\",\"Result\":\"styles_Result__1d7vr\"};","import Axios from 'axios';\n\nconst backendService = Axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n});\n\nexport default backendService;\n","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to get memory usage on browser?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>window.performance.memory</code>. Currently, only Chrome\n          supports\n        </p>\n\n        <Code language=\"tsx\">\n          {`const { totalJSHeapSize, jsHeapSizeLimit, usedJSHeapSize } = performance.memory;`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[stackoverflow] jQuery or javascript to find memory usage of page`,\n        url: `https://stackoverflow.com/questions/2530228/jquery-or-javascript-to-find-memory-usage-of-page`,\n      },\n      {\n        name: `[WebPlatform] performance.memory`,\n        url: `https://webplatform.github.io/docs/apis/timing/properties/memory/`,\n      },\n    ],\n  },\n  {\n    question: `How to get memory usage in NodeJS app?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>process.memoryUsage()</code>\n        </p>\n\n        <Code language=\"typescript\">{`const { external, heapTotal, heapUsed, rss } = process.memoryUsage();`}</Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[stackoverflow] How to monitor the memory usage of Node.js?`,\n        url: `https://stackoverflow.com/questions/20018588/how-to-monitor-the-memory-usage-of-node-js`,\n      },\n      {\n        name: `[Node.js] Process`,\n        url: `https://nodejs.org/api/process.html#process_process_memoryusage`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport Question from 'components/Question';\nimport NumberInput from 'components/NumberInput';\nimport Button from 'components/Button';\nimport backendService from 'services/backendService';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Performance1Component: FC = () => {\n  const [length, setLength] = useState(1000000);\n  const [browserMemory, setBrowserMemory] = useState<MemoryInfo>();\n  const [serverMemory, setServerMemory] = useState<NodeJS.MemoryUsage>();\n\n  const getBrowserMemory = useCallback(() => {\n    setBrowserMemory(undefined);\n\n    setTimeout(() => {\n      const array = Array.from({ length }, () => length);\n      array.reverse();\n      const {\n        totalJSHeapSize,\n        jsHeapSizeLimit,\n        usedJSHeapSize,\n      } = performance.memory;\n\n      setBrowserMemory({ totalJSHeapSize, jsHeapSizeLimit, usedJSHeapSize });\n    }, 0);\n  }, [length]);\n\n  const getServerMemory = useCallback(async () => {\n    setServerMemory(undefined);\n\n    const {\n      data: { memoryUsage },\n    } = await backendService.get<{\n      memoryUsage: NodeJS.MemoryUsage;\n    }>('memory-usage', { params: { length } });\n\n    setServerMemory(memoryUsage);\n  }, [length]);\n\n  return (\n    <Question title=\"Performance 1\" questions={questions}>\n      <div>\n        <NumberInput label=\"Length:\" value={length} onChange={setLength} />\n      </div>\n\n      <table className={classes.MemoryTable}>\n        <tbody>\n          <tr>\n            <td>\n              <Button className=\"mr-2\" onClick={getBrowserMemory}>\n                Get Browser Memory Usage\n              </Button>\n            </td>\n            <td>\n              <Button className=\"mr-2\" onClick={getServerMemory}>\n                Get Server Memory Usage\n              </Button>\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <div className={classes.Result}>\n                {browserMemory && (\n                  <pre>{JSON.stringify(browserMemory, null, 2)}</pre>\n                )}\n              </div>\n            </td>\n\n            <td>\n              <div className={classes.Result}>\n                {serverMemory && (\n                  <pre>{JSON.stringify(serverMemory, null, 2)}</pre>\n                )}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </Question>\n  );\n};\n\nconst Performance1 = memo(Performance1Component);\nPerformance1.displayName = 'Performance1';\nexport default Performance1;\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import React, {\n  FC,\n  memo,\n  ReactNode,\n  ButtonHTMLAttributes,\n  SyntheticEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const ButtonImpl: FC<ButtonProps> = ({\n  className,\n  id,\n  href,\n  target,\n  rel,\n  download,\n  type = 'button',\n  onClick,\n  children,\n}) =>\n  href ? (\n    <a\n      className={classnames(classes.Button, className)}\n      id={id}\n      href={href}\n      target={target}\n      rel={rel}\n      download={download}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  ) : (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      className={classnames(classes.Button, className)}\n      id={id}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n\nconst Button = memo(ButtonImpl);\nButton.displayName = 'Button';\nexport default Button;\n\nexport interface ButtonProps {\n  className?: string;\n  id?: string;\n  href?: string;\n  target?: string;\n  rel?: string;\n  download?: string;\n  type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  onClick?: (e: SyntheticEvent) => void;\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonBase\":\"styles_ButtonBase__3uhxr\",\"Button\":\"styles_Button__1Ekk8\"};","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, InputHTMLAttributes, ReactNode } from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const InputImpl: FC<InputProps> = ({\n  className,\n  labelClassName,\n  inputClassName,\n  id,\n  label,\n  ...props\n}) => (\n  <div className={classnames(classes.InputGroup, className)}>\n    <label className={classnames(classes.Label, labelClassName)} htmlFor={id}>\n      {label}\n    </label>\n    <input\n      className={classnames(classes.Input, inputClassName)}\n      id={id}\n      {...props}\n    />\n  </div>\n);\n\nconst Input = memo(InputImpl);\nInput.displayName = 'Input';\nexport default Input;\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  labelClassName?: string;\n  inputClassName?: string;\n  label: ReactNode;\n}\n","import React, { FC, memo, ChangeEvent, useCallback } from 'react';\nimport Input, { InputProps } from 'components/Input';\n\nexport const NumberInputImpl: FC<NumberInputProps> = ({\n  type = 'number',\n  onChange,\n  ...props\n}) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) =>\n      onChange && onChange(Number(e.target.value)),\n    [onChange],\n  );\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Input type={type} onChange={handleChange} {...props} />;\n};\n\nconst NumberInput = memo(NumberInputImpl);\nNumberInput.displayName = 'NumberInput';\nexport default NumberInput;\n\nexport interface NumberInputProps\n  extends Omit<InputProps, 'onChange' | 'type'> {\n  type?: 'number' | 'range';\n  onChange?: (value: number) => void;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroupBase\":\"styles_InputGroupBase__18W83\",\"InputGroup\":\"styles_InputGroup__1uLeo\",\"LabelBase\":\"styles_LabelBase__2_6Yt\",\"Label\":\"styles_Label__1XhjA\",\"InputBase\":\"styles_InputBase__2S20X\",\"Input\":\"styles_Input__18MvC\"};"],"sourceRoot":""}