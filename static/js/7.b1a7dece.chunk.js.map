{"version":3,"sources":["questions/js/Array1/styles.module.scss","components/Question/index.tsx","components/TextInput/index.tsx","questions/js/Array1/questions.tsx","questions/js/Array1/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Input/index.tsx","components/NumberInput/index.tsx","components/Input/styles.module.scss"],"names":["module","exports","Question","memo","title","questions","children","className","classes","Container","Title","Content","Questions","map","index","question","answer","references","key","Index","Answer","length","References","name","url","href","target","rel","displayName","TextInput","onChange","props","handleChange","useCallback","e","value","Input","Code","language","Array1Impl","useState","text","setText","characters","useMemo","Array","from","setLength","fillValue","setFillValue","fillArray","fill","rangeEnd","setRangeEnd","range","_","idx","itemsString","setItemsString","uniqueArray","items","split","filter","Boolean","Number","Set","Section","label","JSON","stringify","NumberInput","Array1","style","okaidia","classnames","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","labelClassName","inputClassName","id","InputGroup","Label","htmlFor","type"],"mappings":"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","file":"static/js/7.b1a7dece.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"styles_Section__3KRs2\"};","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo, ChangeEvent, useCallback } from 'react';\nimport Input, { InputProps } from 'components/Input';\n\nexport const TextInputImpl: FC<TextInputProps> = ({ onChange, ...props }) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => onChange && onChange(e.target.value),\n    [onChange],\n  );\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Input onChange={handleChange} {...props} />;\n};\n\nconst TextInput = memo(TextInputImpl);\nTextInput.displayName = 'TextInput';\nexport default TextInput;\n\nexport interface TextInputProps extends Omit<InputProps, 'onChange'> {\n  onChange?: (value: string) => void;\n}\n","import { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\nimport React from 'react';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to convert a string to an array of character?`,\n    answer: <Code language=\"tsx\">Array.from(text)</Code>,\n  },\n  {\n    question: `How to fill an array with values?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>Array.fill()</code> instance method\n        </p>\n        <Code language=\"tsx\">Array(length).fill(fillValue)</Code>\n\n        <p>\n          Use <code>Array.from()</code>\n        </p>\n        <Code language=\"tsx\">{`Array.from({ length }, () => fillValue)`}</Code>\n      </div>\n    ),\n  },\n  {\n    question: `How to generate range of numbers?`,\n    answer: (\n      <Code language=\"tsx\">{`Array.from({ length: rangeEnd }, (_, idx) => idx)`}</Code>\n    ),\n  },\n  {\n    question: `How to create an array of unique values?`,\n    answer: (\n      <Code language=\"tsx\">{`Array.from({ length: rangeEnd }, (_, idx) => idx)`}</Code>\n    ),\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState, useMemo } from 'react';\nimport Question from 'components/Question';\nimport TextInput from 'components/TextInput';\nimport NumberInput from 'components/NumberInput';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Array1Impl: FC = () => {\n  const [text, setText] = useState('abc');\n  const characters = useMemo(() => Array.from(text), [text]);\n\n  const [length, setLength] = useState(5);\n  const [fillValue, setFillValue] = useState(0);\n  const fillArray = useMemo(() => Array(length).fill(fillValue), [\n    length,\n    fillValue,\n  ]);\n\n  const [rangeEnd, setRangeEnd] = useState(5);\n  const range = useMemo(\n    () => Array.from({ length: rangeEnd }, (_, idx) => idx),\n    [rangeEnd],\n  );\n\n  const [itemsString, setItemsString] = useState('1 1 2 3 3');\n  const uniqueArray = useMemo(() => {\n    const items = itemsString\n      .split(' ')\n      .filter(Boolean)\n      .map(Number);\n    return Array.from(new Set(items));\n  }, [itemsString]);\n\n  return (\n    <Question title=\"Array 1\" questions={questions}>\n      <div className={classes.Section}>\n        <h4>Convert text to array of character</h4>\n        <TextInput label=\"Text\" value={text} onChange={setText} />\n        <pre>{JSON.stringify(characters)}</pre>\n      </div>\n\n      <div className={classes.Section}>\n        <h4>Fill an array with values</h4>\n        <NumberInput label=\"Length\" value={length} onChange={setLength} />\n        <NumberInput\n          label=\"Fill Value\"\n          value={fillValue}\n          onChange={setFillValue}\n        />\n        <pre>{JSON.stringify(fillArray)}</pre>\n      </div>\n\n      <div className={classes.Section}>\n        <h4>Generate range of numbers</h4>\n        <NumberInput\n          label=\"Range End\"\n          value={rangeEnd}\n          onChange={setRangeEnd}\n        />\n        <pre>{JSON.stringify(range)}</pre>\n      </div>\n\n      <div className={classes.Section}>\n        <h4>Create array of unique items</h4>\n        <TextInput\n          label=\"Items\"\n          value={itemsString}\n          onChange={setItemsString}\n        />\n      </div>\n      <pre>{JSON.stringify(uniqueArray)}</pre>\n    </Question>\n  );\n};\n\nconst Array1 = memo(Array1Impl);\nArray1.displayName = 'Array1';\nexport default Array1;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, InputHTMLAttributes, ReactNode } from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const InputImpl: FC<InputProps> = ({\n  className,\n  labelClassName,\n  inputClassName,\n  id,\n  label,\n  ...props\n}) => (\n  <div className={classnames(classes.InputGroup, className)}>\n    <label className={classnames(classes.Label, labelClassName)} htmlFor={id}>\n      {label}\n    </label>\n    <input\n      className={classnames(classes.Input, inputClassName)}\n      id={id}\n      {...props}\n    />\n  </div>\n);\n\nconst Input = memo(InputImpl);\nInput.displayName = 'Input';\nexport default Input;\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  labelClassName?: string;\n  inputClassName?: string;\n  label: ReactNode;\n}\n","import React, { FC, memo, ChangeEvent, useCallback } from 'react';\nimport Input, { InputProps } from 'components/Input';\n\nexport const NumberInputImpl: FC<NumberInputProps> = ({\n  type = 'number',\n  onChange,\n  ...props\n}) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) =>\n      onChange && onChange(Number(e.target.value)),\n    [onChange],\n  );\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Input type={type} onChange={handleChange} {...props} />;\n};\n\nconst NumberInput = memo(NumberInputImpl);\nNumberInput.displayName = 'NumberInput';\nexport default NumberInput;\n\nexport interface NumberInputProps\n  extends Omit<InputProps, 'onChange' | 'type'> {\n  type?: 'number' | 'range';\n  onChange?: (value: number) => void;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroupBase\":\"styles_InputGroupBase__18W83\",\"InputGroup\":\"styles_InputGroup__1uLeo\",\"LabelBase\":\"styles_LabelBase__2_6Yt\",\"Label\":\"styles_Label__1XhjA\",\"InputBase\":\"styles_InputBase__2S20X\",\"Input\":\"styles_Input__18MvC\"};"],"sourceRoot":""}