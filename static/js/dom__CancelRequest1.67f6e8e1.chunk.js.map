{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","components/Button/index.tsx","components/Button/styles.module.scss","questions/dom/CancelRequest1/styles.module.scss","questions/dom/CancelRequest1/Request.tsx","questions/dom/CancelRequest1/questions.tsx","questions/dom/CancelRequest1/hooks.ts","questions/dom/CancelRequest1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","Button","id","download","type","Request","initialize","send","cancel","result","JSON","stringify","process","params","URLSearchParams","set","getXMLHttpResult","loading","status","statusText","readyState","response","responseText","body","parse","getFetchResult","a","clone","json","text","CancelRequest1Impl","xmlHttpRequest","useState","setResult","requestRef","useRef","abortableRef","useCallback","request","XMLHttpRequest","onload","onerror","onabort","current","undefined","abort","useXMLHttpRequest","fetchRequest","abortControllerRef","abortController","AbortController","method","signal","fetch","error","message","code","useFetch","axiosRequest","instanceRef","cancelTokenSourceRef","cancelTokenSource","Axios","CancelToken","source","instance","create","cancelToken","token","data","isCancel","useAxios","CancelRequest1"],"mappings":"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","file":"static/js/dom__CancelRequest1.67f6e8e1.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import React, {\n  FC,\n  memo,\n  ReactNode,\n  ButtonHTMLAttributes,\n  SyntheticEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const ButtonImpl: FC<ButtonProps> = ({\n  className,\n  id,\n  href,\n  target,\n  rel,\n  download,\n  type = 'button',\n  onClick,\n  children,\n}) =>\n  href ? (\n    <a\n      className={classnames(classes.Button, className)}\n      id={id}\n      href={href}\n      target={target}\n      rel={rel}\n      download={download}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  ) : (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      className={classnames(classes.Button, className)}\n      id={id}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n\nconst Button = memo(ButtonImpl);\nButton.displayName = 'Button';\nexport default Button;\n\nexport interface ButtonProps {\n  className?: string;\n  id?: string;\n  href?: string;\n  target?: string;\n  rel?: string;\n  download?: string;\n  type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  onClick?: (e: SyntheticEvent) => void;\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonBase\":\"styles_ButtonBase__3uhxr\",\"Button\":\"styles_Button__1Ekk8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Request\":\"styles_Request__28ARP\"};","import React, { FC, memo } from 'react';\nimport Button from 'components/Button';\nimport classes from './styles.module.scss';\n\nexport const RequestImpl: FC<RequestProps> = ({\n  name,\n  initialize,\n  send,\n  cancel,\n  result,\n}) => (\n  <div className={classes.Request}>\n    <h4>{name}</h4>\n\n    <div>\n      <Button className=\"mr-4\" onClick={initialize}>\n        Initialize\n      </Button>\n\n      <Button className=\"mr-4\" onClick={send}>\n        Send\n      </Button>\n\n      <Button className=\"mr-4\" onClick={cancel}>\n        Cancel\n      </Button>\n    </div>\n\n    <h6>Result:</h6>\n    <pre>{JSON.stringify(result, null, 2)}</pre>\n  </div>\n);\n\nconst Request = memo(RequestImpl);\nRequest.displayName = 'Request';\nexport default Request;\n\nexport interface RequestProps {\n  name: string;\n  initialize: VoidFunction;\n  send: VoidFunction;\n  cancel: VoidFunction;\n  result: any;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: (\n      <span>\n        How to cancel an <code>XMLHttpRequest</code>?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Call <code>XMLHttpRequest.abort()</code>\n        </p>\n        <Code language=\"tsx\">\n          {`const request = new XMLHttpRequest();\nrequest.open('GET', url);\nrequest.send(params);\n\nif (SHOULD_CANCEL_REQUEST) request.abort();`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] XMLHttpRequest`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest`,\n      },\n      {\n        name: `[MDN] XMLHttpRequest.readyState`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState`,\n      },\n      {\n        name: `[MDN] XMLHttpRequest.abort()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort`,\n      },\n      {\n        name: `[MDN] Using XMLHttpRequest`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest`,\n      },\n    ],\n  },\n  {\n    question: (\n      <span>\n        How to cancel a <code>fetch</code> request?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Specify an <code>AbortSignal</code> when calling <code>fetch()</code>{' '}\n          and call <code>AbortController.abort()</code> when needed\n        </p>\n        <Code language=\"tsx\">\n          {`const request = new Request(url);\nconst abortController = new AbortController();\nconst response = await fetch(request, {\n  method: 'GET',\n  signal: abortController.signal,\n  body: params,\n});\n\nif (SHOULD_CANCEL_REQUEST) abortController.abort();`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Fetch API`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API`,\n      },\n      {\n        name: `[MDN] WindowOrWorkerGlobalScope.fetch()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch`,\n      },\n      {\n        name: `[MDN] AbortSignal`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal`,\n      },\n      {\n        name: `[MDN] AbortController`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/AbortController`,\n      },\n    ],\n  },\n  {\n    question: (\n      <span>\n        How to cancel an <code>axios</code> request?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Specify a <code>CancelToken</code> when calling{' '}\n          <code>Axios.request()</code> and call{' '}\n          <code>CancelTokenSource.cancel()</code> when needed\n        </p>\n        <Code language=\"tsx\">\n          {`  const cancelTokenSource = Axios.CancelToken.source();\nconst response = await Axios.request({\n  url,\n  method: 'GET',\n  params,\n  cancelToken: cancelTokenSource.token,\n});\n\nif (SHOULD_CANCEL_REQUEST) cancelTokenSource.cancel();`}\n        </Code>\n      </div>\n    ),\n  },\n];\n\nexport default questions;\n","import { useCallback, useRef, useState } from 'react';\nimport Axios, { CancelTokenSource, AxiosResponse, AxiosInstance } from 'axios';\n\nconst url = `${process.env.REACT_APP_BASE_URL}/long`;\nconst params = new URLSearchParams();\nparams.set('duration', '5000');\n\nconst getXMLHttpResult = (\n  { status, statusText, readyState, response, responseText }: XMLHttpRequest,\n  loading: boolean,\n): XMLHttpResult => ({\n  loading,\n  status,\n  statusText,\n  readyState,\n  body: response && JSON.parse(response),\n  responseText,\n});\n\nconst getFetchResult = async (\n  response: Response,\n  loading: boolean,\n): Promise<FetchResult> => {\n  const { status, statusText } = response;\n\n  return {\n    loading,\n    status,\n    statusText,\n    body: await response.clone().json(),\n    responseText: await response.clone().text(),\n  };\n};\n\nconst getFetchError = ({ message, code, name }: DOMException): FetchError => ({\n  message,\n  code,\n  name,\n});\n\nconst getAxiosResult = (\n  { data, status, statusText }: AxiosResponse,\n  loading: boolean,\n): AxiosResult => ({ loading, data, status, statusText });\n\nconst getAxiosError = (error: any) => ({\n  message: Axios.isCancel(error) ? 'Cancelled' : error.message,\n});\n\nexport const useXMLHttpRequest = () => {\n  const [result, setResult] = useState<XMLHttpResult>({ loading: false });\n  const requestRef = useRef<XMLHttpRequest>();\n  const abortableRef = useRef<XMLHttpRequest>();\n\n  const initialize = useCallback(() => {\n    const request = new XMLHttpRequest();\n    request.open('POST', url);\n    request.onload = () => setResult(getXMLHttpResult(request, false));\n    request.onerror = () => setResult(getXMLHttpResult(request, false));\n    request.onabort = () => setResult(getXMLHttpResult(request, false));\n    requestRef.current = request;\n    abortableRef.current = request;\n  }, []);\n\n  const send = useCallback(() => {\n    const request = requestRef.current;\n\n    if (request) {\n      setResult(getXMLHttpResult(request, true));\n      request.send(params);\n      requestRef.current = undefined;\n    }\n  }, []);\n\n  const cancel = useCallback(() => {\n    if (abortableRef.current) abortableRef.current.abort();\n  }, []);\n\n  return { initialize, send, cancel, result };\n};\n\nexport const useFetch = () => {\n  const [result, setResult] = useState<FetchResult>({ loading: false });\n  const requestRef = useRef<Request>();\n  const abortControllerRef = useRef<AbortController>();\n\n  const initialize = useCallback(() => {\n    const abortController = new AbortController();\n    const request = new Request(url, {\n      method: 'POST',\n      body: params,\n      signal: abortController.signal,\n    });\n    abortControllerRef.current = abortController;\n    requestRef.current = request;\n  }, []);\n\n  const send = useCallback(async () => {\n    const request = requestRef.current;\n\n    if (!request) return;\n\n    setResult({ loading: true });\n\n    try {\n      const response = await fetch(request);\n      setResult(await getFetchResult(response, false));\n      requestRef.current = undefined;\n    } catch (error) {\n      setResult({ loading: false, error: getFetchError(error) });\n    }\n  }, []);\n\n  const cancel = useCallback(() => {\n    if (abortControllerRef.current) abortControllerRef.current.abort();\n  }, []);\n\n  return { initialize, send, cancel, result };\n};\n\nexport const useAxios = () => {\n  const [result, setResult] = useState<AxiosResult>({ loading: false });\n  const instanceRef = useRef<AxiosInstance>();\n  const cancelTokenSourceRef = useRef<CancelTokenSource>();\n\n  const initialize = useCallback(() => {\n    const cancelTokenSource = Axios.CancelToken.source();\n    cancelTokenSourceRef.current = cancelTokenSource;\n    const instance = Axios.create({\n      cancelToken: cancelTokenSource.token,\n    });\n    instanceRef.current = instance;\n  }, []);\n\n  const send = useCallback(async () => {\n    const instance = instanceRef.current;\n\n    if (!instance) return;\n\n    setResult({ loading: true });\n\n    try {\n      const response = await instance.request({\n        url,\n        method: 'POST',\n        params,\n      });\n      setResult(getAxiosResult(response, false));\n      instanceRef.current = undefined;\n    } catch (error) {\n      setResult({ loading: false, error: getAxiosError(error) });\n    }\n  }, []);\n\n  const cancel = useCallback(() => {\n    if (cancelTokenSourceRef.current) cancelTokenSourceRef.current.cancel();\n  }, []);\n\n  return { initialize, send, cancel, result };\n};\n\nconst SHOULD_CANCEL_REQUEST = true;\n\nexport function test1() {\n  const request = new XMLHttpRequest();\n  request.open('GET', url);\n  request.send(params);\n\n  if (SHOULD_CANCEL_REQUEST) request.abort();\n}\n\nexport async function test2() {\n  const request = new Request(url);\n  const abortController = new AbortController();\n  const response = await fetch(request, {\n    method: 'GET',\n    signal: abortController.signal,\n    body: params,\n  });\n\n  if (SHOULD_CANCEL_REQUEST) abortController.abort();\n  console.log(response);\n}\n\nexport async function test3() {\n  const cancelTokenSource = Axios.CancelToken.source();\n  const response = await Axios.request({\n    url,\n    method: 'GET',\n    params,\n    cancelToken: cancelTokenSource.token,\n  });\n\n  if (SHOULD_CANCEL_REQUEST) cancelTokenSource.cancel();\n  console.log(response);\n}\n\nexport interface XMLHttpResult\n  extends Partial<\n    Pick<\n      XMLHttpRequest,\n      'status' | 'statusText' | 'readyState' | 'responseText'\n    >\n  > {\n  loading: boolean;\n  body?: any;\n}\n\nexport interface FetchResult\n  extends Partial<Pick<Response, 'status' | 'statusText'>> {\n  loading: boolean;\n  body?: any;\n  responseText?: any;\n  error?: FetchError;\n}\n\nexport type FetchError = Pick<DOMException, 'message' | 'code' | 'name'>;\n\nexport interface AxiosResult\n  extends Partial<Pick<AxiosResponse, 'data' | 'status' | 'statusText'>> {\n  loading: boolean;\n  error?: AxiosError;\n}\n\nexport interface AxiosError {\n  message: string;\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport Request from './Request';\nimport questions from './questions';\nimport { useXMLHttpRequest, useFetch, useAxios } from './hooks';\n\nexport const CancelRequest1Impl: FC = () => {\n  const xmlHttpRequest = useXMLHttpRequest();\n  const fetchRequest = useFetch();\n  const axiosRequest = useAxios();\n\n  return (\n    <QuestionPage title=\"Cancel Request 1\" questions={questions}>\n      <Request name=\"XMLHttpRequest\" {...xmlHttpRequest} />\n      <Request name=\"Fetch\" {...fetchRequest} />\n      <Request name=\"Axios\" {...axiosRequest} />\n    </QuestionPage>\n  );\n};\n\nconst CancelRequest1 = memo(CancelRequest1Impl);\nCancelRequest1.displayName = 'CancelRequest1';\nexport default CancelRequest1;\n"],"sourceRoot":""}