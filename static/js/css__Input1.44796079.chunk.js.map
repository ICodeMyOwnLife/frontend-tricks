{"version":3,"sources":["components/References/index.tsx","components/Todos/index.tsx","components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/PageLayout/styles.ts","components/PageLayout/index.tsx","components/Section/styles.ts","components/Section/index.tsx","../node_modules/@material-ui/core/esm/styles/createStyles.js","pages/css/Input1/styles.ts","pages/css/Input1/Checkbox.tsx","pages/css/Input1/Radio.tsx","pages/css/Input1/questions.tsx","pages/css/Input1/index.tsx"],"names":["References","memo","className","references","variant","map","name","url","key","href","target","rel","displayName","Todos","todos","Box","Typography","todo","useStyles","makeStyles","theme","Question","fontWeight","HiddenContent","marginBottom","spacing","Answer","marginTop","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","BottomBox","paddingBottom","borderBottom","BottomBoxTitle","QuestionItem","index","question","answer","classes","useToggle","open","toggleOpen","hasReferences","length","hasTodos","showBottomBox","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","createStyles","root","questions","fontFamily","color","classNamePrefix","QuestionPage","children","props","PageLayout","List","questionInfo","content","title","clsx","Section","Title","titleVariant","titleClassName","Paper","elevation","styles","checkInputs","display","gridTemplateColumns","gridGap","checkInputWrapper","alignItems","checkInput","marginRight","transition","outline","boxShadow","WebkitAppearance","MozAppearance","box","position","width","height","borderColor","opacity","green","checkbox","top","left","borderTop","borderRight","transform","radio","Checkbox","id","label","type","htmlFor","Radio","Input1Component","Input1"],"mappings":"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","file":"static/js/css__Input1.44796079.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const ReferencesComponent: FC<ReferencesProps> = ({\n  className,\n  references,\n}) => (\n  <Box className={className}>\n    <Typography variant=\"h5\">References</Typography>\n    <ol>\n      {references!.map(({ name, url }) => (\n        <li key={url}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst References = memo(ReferencesComponent);\nReferences.displayName = 'References';\nexport default References;\n\nexport interface ReferencesProps {\n  className?: string;\n  references: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const TodosComponent: FC<TodosProps> = ({ className, todos }) => (\n  <Box>\n    <Typography className={className} variant=\"h5\">\n      Todos\n    </Typography>\n    <ol>\n      {todos!.map(todo => (\n        <li key={todo}>{todo}</li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst Todos = memo(TodosComponent);\nTodos.displayName = 'Todos';\nexport default Todos;\n\nexport interface TodosProps {\n  className?: string;\n  todos: string[];\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  HiddenContent: {\n    marginBottom: theme.spacing(2),\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  BottomBox: {\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${grey[400]}`,\n\n    '& ol,ul': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  BottomBoxTitle: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { ListItem, ListItemText, Collapse, Box } from '@material-ui/core';\nimport { useToggle } from 'cb-hooks';\nimport References from 'components/References';\nimport Todos from 'components/Todos';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n  todos,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const hasReferences = !!(references && references.length);\n  const hasTodos = !!(todos && todos.length);\n  const showBottomBox = hasReferences || hasTodos;\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.HiddenContent}>\n          <Box className={classes.Answer}>{answer}</Box>\n\n          {showBottomBox && (\n            <Box className={classes.BottomBox}>\n              {hasReferences && (\n                <References\n                  className={classes.BottomBoxTitle}\n                  references={references!}\n                />\n              )}\n\n              {hasTodos && (\n                <Todos className={classes.BottomBoxTitle} todos={todos!} />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    questions: {\n      marginTop: spacing(4),\n      '& code': {\n        fontFamily: `'Courier New', Courier, monospace`,\n        fontSize: 14,\n        fontWeight: 600,\n        color: `rgb(219, 104, 27)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'QuestionPage' });\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport PageLayout from 'components/PageLayout';\nimport useStyles from './styles';\n\nexport const QuestionPageComponent: FC<QuestionPageProps> = ({\n  questions,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PageLayout {...props}>\n      {children}\n      <Box className={classes.questions}>\n        <Typography variant=\"h4\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageComponent);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  className?: string;\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      marginTop: spacing(4),\n    },\n    content: {\n      marginTop: spacing(2.5),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'PageLayout' });\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const PageLayoutComponent: FC<PageLayoutProps> = ({\n  className,\n  title,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box className={classes.content}>{children}</Box>\n    </Box>\n  );\n};\n\nconst PageLayout = memo(PageLayoutComponent);\nPageLayout.displayName = 'PageLayout';\nexport default PageLayout;\n\nexport interface PageLayoutProps {\n  className?: string;\n  title: string;\n  children: ReactNode;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Section: {\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(3),\n  },\n  Title: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport { Paper, Typography } from '@material-ui/core';\nimport { TypographyProps } from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nexport const SectionComponent: FC<SectionProps> = ({\n  className,\n  title,\n  titleVariant = 'h6',\n  titleClassName,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={clsx(classes.Section, className)} elevation={0}>\n      <Typography\n        className={clsx(classes.Title, titleClassName)}\n        variant={titleVariant}\n      >\n        {title}\n      </Typography>\n      {children}\n    </Paper>\n  );\n};\n\nconst Section = memo(SectionComponent);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  className?: string;\n  title: string;\n  titleVariant?: TypographyProps['variant'];\n  titleClassName?: string;\n  children?: ReactNode;\n}\n","import { createStyles as createStylesOriginal } from '@material-ui/styles'; // let warnOnce = false;\n// To remove in v5\n\nexport default function createStyles(styles) {\n  // warning(\n  //   warnOnce,\n  //   [\n  //     'Material-UI: createStyles from @material-ui/core/styles is deprecated.',\n  //     'Please use @material-ui/styles/createStyles',\n  //   ].join('\\n'),\n  // );\n  // warnOnce = true;\n  return createStylesOriginal(styles);\n}","import { makeStyles, createStyles, Theme } from '@material-ui/core';\nimport { grey, green } from '@material-ui/core/colors';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    checkInputs: {\n      display: 'grid',\n      gridTemplateColumns: `repeat(auto-fit, minmax(360px, 1fr))`,\n      gridGap: spacing(2, 4),\n    },\n    checkInputWrapper: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: spacing(1, 0),\n    },\n    checkInput: {\n      marginRight: spacing(1.5),\n      transition: '200ms ease',\n\n      '&:focus, &:active': {\n        outline: 'none',\n        boxShadow: 'none',\n      },\n    },\n    '@supports (-webkit-appearance:none) or (-moz-appearance:none)': {\n      checkInput: {\n        WebkitAppearance: 'none',\n        MozAppearance: 'none',\n      },\n    },\n    box: {\n      position: 'relative',\n      width: 32,\n      height: 32,\n      border: `2px solid`,\n      borderColor: grey[600],\n\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        opacity: 0,\n        transition: '200ms ease',\n      },\n\n      '&:checked': {\n        backgroundColor: green[600],\n        borderColor: green[100],\n\n        '&::after': {\n          opacity: 1,\n        },\n      },\n    },\n    checkbox: {\n      borderRadius: 4,\n\n      '&::after': {\n        width: 20,\n        height: 12,\n        top: 5,\n        left: 5,\n        border: `4px solid`,\n        borderColor: green[100],\n        borderTop: 0,\n        borderRight: 0,\n        transform: `rotate(-50deg)`,\n      },\n    },\n    radio: {\n      borderRadius: '100%',\n\n      '&::after': {\n        width: 12,\n        height: 12,\n        top: '50%',\n        left: '50%',\n        backgroundColor: green[100],\n        borderRadius: '100%',\n        transform: `translate(-50%, -50%)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'Input1' });\n\nexport default useStyles;\n","import React, { FC, memo, InputHTMLAttributes } from 'react';\nimport { Box } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const CheckboxComponent: FC<CheckboxProps> = ({\n  className,\n  id,\n  label,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.checkInputWrapper}>\n      <input\n        {...props}\n        className={clsx(\n          className,\n          classes.checkInput,\n          classes.box,\n          classes.checkbox,\n        )}\n        id={id}\n        type=\"checkbox\"\n      />\n      <label htmlFor={id}>{label}</label>\n    </Box>\n  );\n};\n\nconst Checkbox = memo(CheckboxComponent);\nCheckbox.displayName = 'Checkbox';\nexport default Checkbox;\n\nexport interface CheckboxProps\n  extends OmitFrom<InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  id: string;\n  label: string;\n}\n","import React, { FC, memo, InputHTMLAttributes } from 'react';\nimport { Box } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const RadioComponent: FC<RadioProps> = ({\n  className,\n  id,\n  label,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.checkInputWrapper}>\n      <input\n        {...props}\n        className={clsx(\n          className,\n          classes.checkInput,\n          classes.box,\n          classes.radio,\n        )}\n        id={id}\n        type=\"radio\"\n      />\n      <label htmlFor={id}>{label}</label>\n    </Box>\n  );\n};\n\nconst Radio = memo(RadioComponent);\nRadio.displayName = 'Radio';\nexport default Radio;\n\nexport interface RadioProps\n  extends OmitFrom<InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  id: string;\n  label: string;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to give checkboxes and radio buttons custom styles without using extra elements?`,\n    answer: (\n      <div>\n        <p>\n          Style <code>::before</code> and/or <code>::after</code>{' '}\n          pseudo-elements of inputs\n        </p>\n      </div>\n    ),\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport { Box } from '@material-ui/core';\nimport QuestionPage from 'components/QuestionPage';\nimport Section from 'components/Section';\nimport Checkbox from './Checkbox';\nimport Radio from './Radio';\nimport questions from './questions';\nimport useStyles from './styles';\n\nexport const Input1Component: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <QuestionPage\n      className={classes.root}\n      questions={questions}\n      title=\"Input 1\"\n    >\n      <Section title=\"Check Inputs\">\n        <Box className={classes.checkInputs}>\n          <Box>\n            <Checkbox id=\"checkbox1\" label=\"Checkbox 1\" />\n            <Checkbox id=\"checkbox2\" label=\"Checkbox 2\" />\n          </Box>\n          <Box>\n            <Radio id=\"radio1\" label=\"Radio 1\" name=\"radio\" />\n            <Radio id=\"radio2\" label=\"Radio 2\" name=\"radio\" />\n          </Box>\n        </Box>\n      </Section>\n    </QuestionPage>\n  );\n};\n\nconst Input1 = memo(Input1Component);\nInput1.displayName = 'Input1';\nexport default Input1;\n"],"sourceRoot":""}