(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[64],{134:function(e,n,t){"use strict";var a=t(0),o=t.n(a),l=t(130),c=t(34),r=Object(a.memo)((function(e){var n=e.className,t=e.references;return o.a.createElement(l.a,{className:n},o.a.createElement(c.a,{variant:"h5"},"References"),o.a.createElement("ol",null,t.map((function(e){var n=e.name,t=e.url;return o.a.createElement("li",{key:t},o.a.createElement("a",{href:t,target:"_blank",rel:"noopener noreferrer"},n))}))))}));r.displayName="References",n.a=r},135:function(e,n,t){"use strict";var a=t(54),o=t(0),l=t.n(o),c=t(130),r=t(34),s=t(124),i=t(35),m=t(121),p=t(122),u=t(123),d=t(36),g=t(134),b=Object(o.memo)((function(e){var n=e.className,t=e.todos;return l.a.createElement(c.a,null,l.a.createElement(r.a,{className:n,variant:"h5"},"Todos"),l.a.createElement("ol",null,t.map((function(e){return l.a.createElement("li",{key:e},e)}))))}));b.displayName="Todos";var f=b,E=t(64),h=t(43),v=Object(E.a)((function(e){return{Question:{fontWeight:500},HiddenContent:{marginBottom:e.spacing(2)},Answer:{marginTop:e.spacing(1.5),padding:0,fontSize:14,backgroundColor:h.a[50],border:"1px solid ".concat(h.a[400]),borderRadius:6,"& p":{padding:e.spacing(0,2.5)},"& ol,ul":{margin:e.spacing(1.5,0)},"& img":{maxWidth:"100%"}},BottomBox:{paddingBottom:e.spacing(2),borderBottom:"1px solid ".concat(h.a[400]),"& ol,ul":{marginTop:e.spacing(1)},"& li":{fontSize:14,fontWeight:500,marginBottom:e.spacing(1)}},BottomBoxTitle:{margin:e.spacing(3,0,0)}}})),w=Object(o.memo)((function(e){var n=e.index,t=e.question,a=e.answer,o=e.references,r=e.todos,s=v(),b=Object(d.g)(!1),E=Object(i.a)(b,2),h=E[0],w=E[1],k=!(!o||!o.length),y=!(!r||!r.length),j=k||y;return l.a.createElement(l.a.Fragment,null,l.a.createElement(m.a,{button:!0,onClick:w},l.a.createElement(p.a,{classes:{primary:s.Question}},n,". ",t)),l.a.createElement(u.a,{in:h,timeout:"auto"},l.a.createElement(c.a,{className:s.HiddenContent},l.a.createElement(c.a,{className:s.Answer},a),j&&l.a.createElement(c.a,{className:s.BottomBox},k&&l.a.createElement(g.a,{className:s.BottomBoxTitle,references:o}),y&&l.a.createElement(f,{className:s.BottomBoxTitle,todos:r})))))}));w.displayName="QuestionItem";var k=w,y=t(136),j=t(166),T=Object(E.a)((function(e){var n=e.spacing;return Object(j.a)({root:{},questions:{marginTop:n(4),"& code":{fontFamily:"'Courier New', Courier, monospace",fontSize:14,fontWeight:600,color:"rgb(219, 104, 27)"}}})}),{classNamePrefix:"QuestionPage"}),O=Object(o.memo)((function(e){var n=e.questions,t=e.children,o=Object(a.a)(e,["questions","children"]),i=T();return l.a.createElement(y.a,o,t,l.a.createElement(c.a,{className:i.questions},l.a.createElement(r.a,{variant:"h4"},"Questions"),l.a.createElement(c.a,null,l.a.createElement(s.a,null,n.map((function(e,n){return l.a.createElement(k,Object.assign({key:n,index:n+1},e))}))))))}));O.displayName="QuestionPage";n.a=O},136:function(e,n,t){"use strict";var a=t(0),o=t.n(a),l=t(130),c=t(34),r=t(3),s=t(166),i=t(64),m=Object(i.a)((function(e){var n=e.spacing;return Object(s.a)({root:{marginTop:n(4)},content:{marginTop:n(2.5)}})}),{classNamePrefix:"PageLayout"}),p=Object(a.memo)((function(e){var n=e.className,t=e.title,a=e.children,s=m();return o.a.createElement(l.a,{className:Object(r.a)(s.root,n)},o.a.createElement(c.a,{variant:"h3"},t),o.a.createElement(l.a,{className:s.content},a))}));p.displayName="PageLayout";n.a=p},137:function(e,n,t){"use strict";var a=t(0),o=t.n(a),l=t(3),c=t(887),r=t(865),s=t(64),i=Object(s.a)((function(e){return{CodeViewer:{"& pre":{margin:"0 !important",borderRadius:6},"&~$CodeViewer":{marginTop:e.spacing(2)}}}})),m=Object(a.memo)((function(e){var n=e.className,t=e.children,a=e.style,s=void 0===a?r.a:a,m=e.language,p=i();return o.a.createElement("div",{className:Object(l.a)(p.CodeViewer,n)},o.a.createElement(c.a,{language:m,style:s},t))}));m.displayName="CodeViewer";n.a=m},928:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),l=t(135),c=t(137),r=[{question:"How to use webpack with TypeScript (application and config code in TypeScript, plus tree-shaking)?",answer:o.a.createElement("div",null,o.a.createElement("p",null,"Install dependencies.")," ",o.a.createElement("p",null,o.a.createElement("b",null,"Notice:")," We install ",o.a.createElement("code",null,"@babel/core")," and"," ",o.a.createElement("code",null,"@babel/preset-env")," instead of the old version"," ",o.a.createElement("code",null,"babel-core")," and ",o.a.createElement("code",null,"babel-preset-env")," packages"),o.a.createElement(c.a,{language:"bash"},"yarn add typescript ts-loader babel-loader @babel/core @babel/preset-env ts-node cross-env tsconfig-paths tsconfig-paths-webpack-plugin @types/webpack @types/webpack-dev-server @types/webpack-merge @types/html-webpack-plugin"),o.a.createElement("p",null,o.a.createElement("b",null,"Write webpack configs in TypeScript:")),o.a.createElement("p",null,"Create file ",o.a.createElement("code",null,"config/tsconfig.json")," used for webpack configs"),o.a.createElement(c.a,{language:"json"},'{\n  "compilerOptions": {\n    "module": "commonjs",\n    "target": "es5",\n    "esModuleInterop": true\n  }\n}'),o.a.createElement("p",null,"Create common webpack config file:"," ",o.a.createElement("code",null,"config/webpack.config.common.ts")),o.a.createElement(c.a,{language:"typescript"},"import { resolve } from 'path';\nimport { realpathSync } from 'fs';\nimport { Configuration } from 'webpack';\nimport TsconfigPathsPlugin from 'tsconfig-paths-webpack-plugin';\nimport HtmlPlugin from 'html-webpack-plugin';\n\nconst DIR_ROOT = realpathSync(process.cwd());\nexport const resolvePath = (relativePath: string) =>\n  resolve(DIR_ROOT, relativePath);\n\n// Add this to fix \"Failed to load tsconfig.json: Missing baseUrl in compilerOptions #32\". See https://github.com/dividab/tsconfig-paths-webpack-plugin/issues/32#issuecomment-478042178\ndelete process.env.TS_NODE_PROJECT;\n\n// This resolve plugin makes use of paths and baseUrl of tsconfig.json to load modules so that we can use absolute imports and aliases\nconst tsconfigPathsPlugin = new TsconfigPathsPlugin();\n\nconst htmlPlugin = new HtmlPlugin({\n  template: resolvePath('public/index.html'),\n});\n\nconst config: Configuration = {\n  entry: resolvePath('src/index.ts'),\n  output: { path: resolvePath('dist') },\n  resolve: {\n    // Must have .js\n    extensions: ['.ts', '.js'],\n    plugins: [tsconfigPathsPlugin],\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.ts$/,\n        use: ['babel-loader', 'ts-loader'],\n        include: resolvePath('src'),\n      },\n      {\n        test: /\\.css$/,\n        use: ['style-loader', 'css-loader'],\n        // Flagging it as side effect tells webpack to not consider css file as dead code\n        sideEffects: true,\n      },\n    ],\n  },\n  plugins: [htmlPlugin],\n};\n\nexport default config;"),o.a.createElement("p",null,"Create webpack config file for development environment:"," ",o.a.createElement("code",null,"config/webpack.config.dev.ts")),o.a.createElement(c.a,{language:"typescript"},"import merge from 'webpack-merge';\nimport common from './webpack.config.common';\n\nconst config = merge(common, {\n  mode: 'development',\n  devtool: 'cheap-module-eval-source-map',\n  devServer: {\n    hot: true,\n    open: true,\n    port: 5000,\n  },\n});\n\nexport default config;"),o.a.createElement("p",null,"Create webpack config file for production environment:"," ",o.a.createElement("code",null,"config/webpack.config.prod.ts")),o.a.createElement(c.a,{language:"typescript"},"import merge from 'webpack-merge';\nimport { CleanWebpackPlugin } from 'clean-webpack-plugin';\nimport common from './webpack.config.common';\n\nconst cleanPlugin = new CleanWebpackPlugin({ verbose: true });\n\nconst config = merge(common, {\n  mode: 'production',\n  plugins: [cleanPlugin],\n});\n\nexport default config;"),o.a.createElement("p",null,"Create ",o.a.createElement("code",null,".babelrc")," in root project directory."),o.a.createElement("p",null,o.a.createElement("b",null,"Notice:")," Use ",o.a.createElement("code",null,"@babel/preset-env")," instead of"," ",o.a.createElement("code",null,"env")),o.a.createElement(c.a,{language:"json"},'{\n  "presets": [\n    [\n      "@babel/preset-env",\n      {\n        "modules": false\n      }\n    ]\n  ]\n}'),o.a.createElement("p",null,"Add ",o.a.createElement("code",null,"start")," and ",o.a.createElement("code",null,"build")," scripts to"," ",o.a.createElement("code",null,"package.json"),". These scripts make use of"," ",o.a.createElement("code",null,"ts-node")," to run TypeScript files on the fly,"," ",o.a.createElement("code",null,"tsconfig-paths")," to use the configs in"," ",o.a.createElement("code",null,"config/tsconfig.json")," file, and ",o.a.createElement("code",null,"cross-env")," to set the environment variable."),o.a.createElement(c.a,{language:"json"},'{\n  "scripts": {\n    "start": "cross-env TS_NODE_PROJECT=\\"config/tsconfig.json\\" webpack-dev-server --config config/webpack.config.dev.ts",\n    "build": "cross-env TS_NODE_PROJECT=\\"config/tsconfig.json\\" webpack --config config/webpack.config.prod.ts",\n    "build:staging": "cross-env TS_NODE_PROJECT=\\"config/tsconfig.json\\" webpack --config config/webpack.config.staging.ts"\n  }\n}'),o.a.createElement("p",null,o.a.createElement("b",null,"Write project code in TypeScript:")),o.a.createElement("p",null,"Create ",o.a.createElement("code",null,"tsconfig.js")," in project root directory."),o.a.createElement("p",null,o.a.createElement("b",null,"Notice:")," In order to enable tree-shaking we have to set"," ",o.a.createElement("code",null,"target")," and ",o.a.createElement("code",null,"module")," to ",o.a.createElement("code",null,"es2015")),o.a.createElement(c.a,{language:"json"},'{\n  "compilerOptions": {\n    "target": "es2015",\n    "module": "es2015",\n    "lib": ["esnext", "dom"],\n    "sourceMap": true,\n    "outDir": "./dist",\n    "downlevelIteration": true,\n    "strict": true,\n    "noUnusedLocals": true,\n    "moduleResolution": "node",\n    "baseUrl": "./src",\n    "esModuleInterop": true,\n    "allowSyntheticDefaultImports": true,\n    "skipLibCheck": true,\n    "skipDefaultLibCheck": true\n  }\n}'),o.a.createElement("p",null,o.a.createElement("b",null,"Add some code to test:")),o.a.createElement("p",null,o.a.createElement("code",null,"public/index.html")),o.a.createElement(c.a,{language:"markup"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="X-UA-Compatible" content="ie=edge" />\n    <title>Webpack with TypeScript</title>\n  </head>\n  <body>\n    <h1>Test</h1>\n    <p>Open console to view logs</p>\n    <div class="container"></div>\n  </body>\n</html>'),o.a.createElement("p",null,o.a.createElement("code",null,"styles/index.css")),o.a.createElement(c.a,{language:"css"},".container {\n  max-width: 400px;\n  height: 240px;\n  margin: 40px auto;\n  background-color: rgb(196, 255, 221);\n  border: 1px solid rgb(89, 173, 124);\n  border-radius: 4px;\n}"),o.a.createElement("p",null,o.a.createElement("code",null,"src/services/testServices.ts")),o.a.createElement(c.a,{language:"typescript"},"console.log('testServices side effect');\n\nexport const test1 = () => console.log('Test1');\n\nexport const test2 = () => console.log('Test2');\n\nexport const test3 = () => console.log('Test3');"),o.a.createElement("p",null,o.a.createElement("code",null,"src/index.ts")),o.a.createElement(c.a,{language:"typescript"},"// test1, test2 will be included in the bundle but test3 will not\nimport { test1, test2 } from 'services/testServices';\n\n// css files are marked as side effect, so it will always be included in the bundle\nimport 'styles/index.css';\n\ntest1();\n\ntest2();"),o.a.createElement("p",null,"Run ",o.a.createElement("code",null,"yarn start")," or ",o.a.createElement("code",null,"yarn build")," and inspect the bundle")),references:[{name:"[GitHub] learn-webpack/typescript",url:"https://github.com/ICodeMyOwnLife/learn-webpack/tree/master/typescript"},{name:"[GitHub] Failed to load tsconfig.json: Missing baseUrl in compilerOptions #32",url:"https://github.com/dividab/tsconfig-paths-webpack-plugin/issues/32#issuecomment-478042178"},{name:"[GitHub] webpack.js.org/content/guides/webpack-and-typescript.md",url:"https://github.com/webpack/webpack.js.org/blob/de7e5ffb2938a1edcc9a0e9fe3b370d7b97f7d6a/content/guides/webpack-and-typescript.md"},{name:"[GitHub] tsconfig-paths-webpack-plugin",url:"https://github.com/dividab/tsconfig-paths-webpack-plugin"},{name:"[GitHub] tsconfig-paths",url:"https://github.com/dividab/tsconfig-paths"},{name:"[webpack] TypeScript",url:"https://webpack.js.org/guides/typescript/"},{name:"[webpack] Configuration Languages",url:"https://webpack.js.org/configuration/configuration-languages/#typescript"}]}];t.d(n,"TypeScript1Component",(function(){return s}));var s=function(){return o.a.createElement(l.a,{title:"TypeScript 1",questions:r})},i=Object(a.memo)(s);i.displayName="TypeScript1";n.default=i}}]);
//# sourceMappingURL=webpack__TypeScript1.c688d847.chunk.js.map