{"version":3,"sources":["questions/dom/index.tsx","components/QuestionGroup/index.tsx","components/QuestionGroup/styles.module.scss"],"names":["routes","name","path","component","lazy","DomTricksImpl","url","match","title","baseUrl","DomTricks","memo","displayName","QuestionGroup","children","className","classes","Container","Title","renderRoutes","module","exports"],"mappings":"2GAAA,+EAKMA,EAAsB,CAC1B,CACEC,KAAM,iBACNC,KAAM,iBACNC,UAAWC,eAAK,kBAAM,wDAExB,CACEH,KAAM,WACNC,KAAM,WACNC,UAAWC,eAAK,kBAAM,8DAExB,CACEH,KAAM,aACNC,KAAM,aACNC,UAAWC,eAAK,kBAAM,uDAExB,CACEH,KAAM,YACNC,KAAM,YACNC,UAAWC,eAAK,kBAAM,wDAExB,CACEH,KAAM,YACNC,KAAM,YACNC,UAAWC,eAAK,kBAAM,uDAExB,CACEH,KAAM,iBACNC,KAAM,iBACNC,UAAWC,eAAK,kBAAM,+DAExB,CACEH,KAAM,mBACNC,KAAM,mBACNC,UAAWC,eAAK,kBAAM,iEAIbC,EAAqC,SAAC,GAAD,IAAYC,EAAZ,EAAGC,MAASD,IAAZ,OAChD,kBAAC,IAAD,CAAeE,MAAM,aAAaC,QAASH,EAAKN,OAAQA,KAGpDU,EAAYC,eAAKN,GACvBK,EAAUE,YAAc,YACTF,a,gCCjDf,oDAmBMG,EAAgBF,eAdmC,SAAC,GAAD,IACvDH,EADuD,EACvDA,MADuD,IAEvDC,eAFuD,MAE7C,GAF6C,EAGvDT,EAHuD,EAGvDA,OACAc,EAJuD,EAIvDA,SAJuD,OAMvD,yBAAKC,UAAWC,IAAQC,WACtB,wBAAIF,UAAWC,IAAQE,OAAQV,GAC/B,kBAAC,IAAD,CAAKC,QAASA,EAAST,OAAQA,IAC9BmB,YAAaV,EAAST,GACtBc,KAKLD,EAAcD,YAAc,gBACbC,O,mBCpBfO,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,IAAM","file":"static/js/26.7e0bfd20.chunk.js","sourcesContent":["import React, { FC, memo, lazy } from 'react';\nimport QuestionGroup from 'components/QuestionGroup';\nimport { RouteComponentProps } from 'react-router';\nimport { RouteInfo } from 'helpers/routes';\n\nconst routes: RouteInfo[] = [\n  {\n    name: 'Excluded Input',\n    path: 'excluded-input',\n    component: lazy(() => import('questions/dom/ExcludedInput1')),\n  },\n  {\n    name: 'Download',\n    path: 'download',\n    component: lazy(() => import('questions/dom/Download1')),\n  },\n  {\n    name: 'File Input',\n    path: 'file-input',\n    component: lazy(() => import('questions/dom/FileInput1')),\n  },\n  {\n    name: 'Live Edit',\n    path: 'live-edit',\n    component: lazy(() => import('questions/dom/LiveEdit1')),\n  },\n  {\n    name: 'Drag Drop',\n    path: 'drag-drop',\n    component: lazy(() => import('questions/dom/DragDrop1')),\n  },\n  {\n    name: 'Cancel Request',\n    path: 'cancel-request',\n    component: lazy(() => import('questions/dom/CancelRequest1')),\n  },\n  {\n    name: 'Device Detection',\n    path: 'device-detection',\n    component: lazy(() => import('questions/dom/DeviceDetection1')),\n  },\n];\n\nexport const DomTricksImpl: FC<HtmlTricksProps> = ({ match: { url } }) => (\n  <QuestionGroup title=\"DOM Tricks\" baseUrl={url} routes={routes} />\n);\n\nconst DomTricks = memo(DomTricksImpl);\nDomTricks.displayName = 'DomTricks';\nexport default DomTricks;\n\nexport type HtmlTricksProps = RouteComponentProps;\n","import React, { FC, memo, ReactNode } from 'react';\nimport Nav from 'components/Nav';\nimport { RouteInfo, renderRoutes } from 'helpers/routes';\nimport classes from './styles.module.scss';\n\nexport const QuestionGroupImpl: FC<QuestionGroupProps> = ({\n  title,\n  baseUrl = '',\n  routes,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h1 className={classes.Title}>{title}</h1>\n    <Nav baseUrl={baseUrl} routes={routes} />\n    {renderRoutes(baseUrl, routes)}\n    {children}\n  </div>\n);\n\nconst QuestionGroup = memo(QuestionGroupImpl);\nQuestionGroup.displayName = 'QuestionGroup';\nexport default QuestionGroup;\n\nexport interface QuestionGroupProps {\n  title: string;\n  baseUrl?: string;\n  routes: RouteInfo[];\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__uonKl\",\"Title\":\"styles_Title__3nkm5\",\"Nav\":\"styles_Nav__Sbh1D\"};"],"sourceRoot":""}