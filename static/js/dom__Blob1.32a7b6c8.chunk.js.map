{"version":3,"sources":["components/References/index.tsx","components/Todos/index.tsx","components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/PageLayout/styles.ts","components/PageLayout/index.tsx","components/CodeViewer/styles.ts","components/CodeViewer/index.tsx","components/Section/styles.ts","components/Section/index.tsx","components/FileInput/hooks.ts","components/FileInput/styles.ts","components/FileInput/ButtonFileInput.tsx","components/FileInput/LabelFileInput.tsx","components/FileInput/PreviewContainer.tsx","components/FileInput/ImagePreview.tsx","components/FileInput/InputContainer.tsx","components/FileInput/DataUrlImageInput.tsx","components/FileInput/ObjectUrlImageInput.tsx","components/FileInput/CommonPreview.tsx","components/FileInput/CommonInput.tsx","components/FileInput/index.tsx","pages/dom/Blob1/utils.ts","pages/dom/Blob1/styles.ts","pages/dom/Blob1/BlobReadingSection.tsx","pages/dom/Blob1/questions.tsx","pages/dom/Blob1/index.tsx"],"names":["References","memo","className","references","variant","map","name","url","key","href","target","rel","displayName","Todos","todos","Box","Typography","todo","useStyles","makeStyles","theme","Question","fontWeight","HiddenContent","marginBottom","spacing","Answer","marginTop","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","BottomBox","paddingBottom","borderBottom","BottomBoxTitle","QuestionItem","index","question","answer","classes","useToggle","open","toggleOpen","hasReferences","length","hasTodos","showBottomBox","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","createStyles","root","questions","fontFamily","color","classNamePrefix","QuestionPage","children","props","PageLayout","List","questionInfo","content","title","clsx","CodeViewer","style","okaidia","language","Section","Title","titleVariant","titleClassName","Paper","elevation","getFileName","files","preventDefaults","e","preventDefault","stopPropagation","useInputChangeHandler","onChange","useCallback","useDragDrop","draggable","containerRef","useRef","onChangeRef","useEffect","current","container","unhighlight","classList","remove","handleDragEnter","add","handleDragLeave","handleDrop","dataTransfer","addEventListener","removeEventListener","useObjectUrl","supportedFileTypes","useState","src","setSrc","error","setError","cleanupRef","cleanupCallback","file","includes","type","undefined","objectUrl","URL","createObjectURL","cleanup","revokeObjectURL","PreviewContainer","Preview","width","height","borderWidth","objectFit","objectPosition","FileInput","display","flexDirection","justifyContent","alignItems","borderColor","borderStyle","HiddenInput","position","overflow","clip","Filename","flex","marginLeft","whiteSpace","textOverflow","ButtonFileInput","handleInputChange","inputRef","triggerInputClick","click","useTriggerInputClick","filename","ref","Button","size","hidden","LabelFileInput","id","component","htmlFor","errorClassName","ImagePreview","previewClassName","onLoad","alt","InputContainer","triggerComponent","InputElement","getInputElement","DataUrlImageInput","fileReader","FileReader","onload","dataUrl","result","onerror","message","readAsDataURL","useDataUrl","ObjectUrlImageInput","CommonPreview","CommonInput","readArrayBuffer","arrayBuffer","String","fromCharCode","Uint8Array","readStream","stream","a","async","reader","getReader","read","done","value","text","readBlobArrayBuffer","blob","then","readBlobStream","readBlobText","readResponseArrayBuffer","Response","readResponseStream","body","readResponseText","textarea","BlobReadingSection","onBlobChange","setText","handleFileChange","newText","useHandleFileChange","rows","split","Input","input","fullWidth","multiline","rowsMax","Blob1Component","Blob1"],"mappings":"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","file":"static/js/dom__Blob1.32a7b6c8.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const ReferencesComponent: FC<ReferencesProps> = ({\n  className,\n  references,\n}) => (\n  <Box className={className}>\n    <Typography variant=\"h5\">References</Typography>\n    <ol>\n      {references!.map(({ name, url }) => (\n        <li key={url}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst References = memo(ReferencesComponent);\nReferences.displayName = 'References';\nexport default References;\n\nexport interface ReferencesProps {\n  className?: string;\n  references: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const TodosComponent: FC<TodosProps> = ({ className, todos }) => (\n  <Box>\n    <Typography className={className} variant=\"h5\">\n      Todos\n    </Typography>\n    <ol>\n      {todos!.map(todo => (\n        <li key={todo}>{todo}</li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst Todos = memo(TodosComponent);\nTodos.displayName = 'Todos';\nexport default Todos;\n\nexport interface TodosProps {\n  className?: string;\n  todos: string[];\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  HiddenContent: {\n    marginBottom: theme.spacing(2),\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  BottomBox: {\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${grey[400]}`,\n\n    '& ol,ul': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  BottomBoxTitle: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { ListItem, ListItemText, Collapse, Box } from '@material-ui/core';\nimport { useToggle } from 'cb-hooks';\nimport References from 'components/References';\nimport Todos from 'components/Todos';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n  todos,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const hasReferences = !!(references && references.length);\n  const hasTodos = !!(todos && todos.length);\n  const showBottomBox = hasReferences || hasTodos;\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.HiddenContent}>\n          <Box className={classes.Answer}>{answer}</Box>\n\n          {showBottomBox && (\n            <Box className={classes.BottomBox}>\n              {hasReferences && (\n                <References\n                  className={classes.BottomBoxTitle}\n                  references={references!}\n                />\n              )}\n\n              {hasTodos && (\n                <Todos className={classes.BottomBoxTitle} todos={todos!} />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    questions: {\n      marginTop: spacing(4),\n      '& code': {\n        fontFamily: `'Courier New', Courier, monospace`,\n        fontSize: 14,\n        fontWeight: 600,\n        color: `rgb(219, 104, 27)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'QuestionPage' });\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport PageLayout from 'components/PageLayout';\nimport useStyles from './styles';\n\nexport const QuestionPageComponent: FC<QuestionPageProps> = ({\n  questions,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PageLayout {...props}>\n      {children}\n      <Box className={classes.questions}>\n        <Typography variant=\"h4\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageComponent);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  className?: string;\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      marginTop: spacing(4),\n    },\n    content: {\n      marginTop: spacing(2.5),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'PageLayout' });\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const PageLayoutComponent: FC<PageLayoutProps> = ({\n  className,\n  title,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box className={classes.content}>{children}</Box>\n    </Box>\n  );\n};\n\nconst PageLayout = memo(PageLayoutComponent);\nPageLayout.displayName = 'PageLayout';\nexport default PageLayout;\n\nexport interface PageLayoutProps {\n  className?: string;\n  title: string;\n  children: ReactNode;\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  CodeViewer: {\n    '& pre': {\n      margin: '0 !important',\n      borderRadius: 6,\n    },\n\n    '&~$CodeViewer': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport useStyles from './styles';\n\nexport const CodeViewerComponent: FC<CodeViewerProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.CodeViewer, className)}>\n      <SyntaxHighlighter language={language} style={style}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nconst CodeViewer = memo(CodeViewerComponent);\nCodeViewer.displayName = 'CodeViewer';\nexport default CodeViewer;\n\nexport interface CodeViewerProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: CodeViewerLanguage;\n}\n\nexport type CodeViewerLanguage =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Section: {\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(3),\n  },\n  Title: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport { Paper, Typography } from '@material-ui/core';\nimport { TypographyProps } from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nexport const SectionComponent: FC<SectionProps> = ({\n  className,\n  title,\n  titleVariant = 'h6',\n  titleClassName,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={clsx(classes.Section, className)} elevation={0}>\n      <Typography\n        className={clsx(classes.Title, titleClassName)}\n        variant={titleVariant}\n      >\n        {title}\n      </Typography>\n      {children}\n    </Paper>\n  );\n};\n\nconst Section = memo(SectionComponent);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  className?: string;\n  title: string;\n  titleVariant?: TypographyProps['variant'];\n  titleClassName?: string;\n  children?: ReactNode;\n}\n","/* eslint-disable no-console */\nimport { useCallback, ChangeEvent, useRef, useEffect, useState } from 'react';\nimport { FilesChangeListener } from './types';\n\nexport const getFileName = (files: FileList | null | undefined) => {\n  if (!files) {\n    return null;\n  }\n\n  if (files.length === 1) {\n    return files[0].name;\n  }\n\n  return `${files.length} files`;\n};\n\nexport const preventDefaults = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n\nexport const useInputChangeHandler = ({\n  onChange,\n}: {\n  onChange: FilesChangeListener | undefined;\n}) =>\n  useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => onChange && onChange(e.target.files),\n    [onChange],\n  );\n\nexport const useTriggerInputClick = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const triggerInputClick = useCallback(\n    () => inputRef.current && inputRef.current.click(),\n    [],\n  );\n\n  return { inputRef, triggerInputClick };\n};\n\nexport const useDragDrop = ({\n  onChange,\n  draggable,\n}: {\n  onChange: FilesChangeListener | undefined;\n  draggable: boolean | undefined;\n}) => {\n  const draggingClass = 'dragging';\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onChangeRef = useRef<FilesChangeListener>();\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n\n    if (!container || !draggable) return undefined;\n\n    const highlight = () => container.classList.add(draggingClass);\n\n    const unhighlight = () => container.classList.remove(draggingClass);\n\n    const handleDragEnter = (e: Event) => {\n      preventDefaults(e);\n      highlight();\n    };\n\n    const handleDragLeave = (e: Event) => {\n      preventDefaults(e);\n      unhighlight();\n    };\n\n    const handleDrop = (e: DragEvent) => {\n      preventDefaults(e);\n      unhighlight();\n      if (onChangeRef.current)\n        onChangeRef.current(e.dataTransfer && e.dataTransfer.files);\n    };\n\n    container.addEventListener('dragenter', handleDragEnter);\n    container.addEventListener('dragover', handleDragEnter);\n    container.addEventListener('dragleave', handleDragLeave);\n    container.addEventListener('drop', handleDrop);\n\n    return () => {\n      container.removeEventListener('dragenter', handleDragEnter);\n      container.removeEventListener('dragover', handleDragEnter);\n      container.removeEventListener('dragleave', handleDragLeave);\n      container.removeEventListener('drop', handleDrop);\n    };\n  }, [draggable]);\n\n  return containerRef;\n};\n\nexport const useDataUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | null | undefined;\n  supportedFileTypes?: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) return;\n\n    if (supportedFileTypes && !supportedFileTypes.includes(file.type)) {\n      setError('Unsupported file type');\n      setSrc(undefined);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const dataUrl = fileReader.result as string;\n      setSrc(dataUrl);\n    };\n    fileReader.onerror = () => {\n      if (fileReader.error) setError(fileReader.error.message);\n    };\n    fileReader.readAsDataURL(file);\n  }, [files, supportedFileTypes]);\n\n  return { src, error };\n};\n\nexport const useObjectUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | undefined | null;\n  supportedFileTypes?: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n  const cleanupRef = useRef<VoidFunction>();\n  const cleanupCallback = useCallback(() => {\n    if (cleanupRef.current) {\n      cleanupRef.current();\n    }\n  }, []);\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) {\n      setSrc(undefined);\n      return undefined;\n    }\n\n    if (supportedFileTypes && !supportedFileTypes.includes(file.type)) {\n      setError('Unsupported file type');\n      setSrc(undefined);\n      return undefined;\n    }\n\n    let objectUrl: string | undefined;\n\n    try {\n      objectUrl = URL.createObjectURL(file);\n      setSrc(objectUrl);\n    } catch (e) {\n      setError(e);\n    }\n\n    const cleanup = () => {\n      if (objectUrl) URL.revokeObjectURL(objectUrl);\n    };\n    cleanupRef.current = cleanup;\n    return cleanup;\n  }, [files, supportedFileTypes]);\n\n  return { src, error, cleanupCallback };\n};\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst border = `1px solid ${grey[300]}`;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  PreviewContainer: {\n    maxWidth: '100%',\n    marginTop: theme.spacing(1),\n  },\n  Preview: {\n    width: '100%',\n    height: 320,\n    padding: theme.spacing(1.5),\n    borderWidth: 1,\n    border,\n    objectFit: 'contain',\n    objectPosition: 'center',\n  },\n  FileInput: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'stretch',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n    border,\n\n    '&.dragging': {\n      backgroundColor: grey[100],\n      borderColor: grey[600],\n      borderStyle: 'dotted',\n    },\n  },\n  HiddenInput: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    overflow: 'hidden',\n    clip: 'rect(1px, 1px, 1px, 1px)',\n  },\n  Filename: {\n    flex: 1,\n    marginLeft: theme.spacing(2),\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport { Button, Typography } from '@material-ui/core';\nimport {\n  useTriggerInputClick,\n  useInputChangeHandler,\n  useDragDrop,\n  getFileName,\n} from './hooks';\nimport { FileInputProps } from './types';\nimport useStyles from './styles';\n\nexport const ButtonFileInputComponent: FC<FileInputProps> = ({\n  className,\n  files,\n  onChange,\n  draggable,\n  children = 'Choose File',\n  ...props\n}) => {\n  const classes = useStyles();\n  const handleInputChange = useInputChangeHandler({ onChange });\n  const { inputRef, triggerInputClick } = useTriggerInputClick();\n  const containerRef = useDragDrop({ onChange, draggable });\n  const filename = getFileName(files);\n\n  return (\n    <div className={clsx(classes.FileInput, className)} ref={containerRef}>\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={triggerInputClick}\n      >\n        {children}\n      </Button>\n\n      <input\n        ref={inputRef}\n        type=\"file\"\n        onChange={handleInputChange}\n        hidden\n        {...props}\n      />\n\n      {filename && (\n        <Typography\n          className={classes.Filename}\n          title={filename}\n          variant=\"body1\"\n        >\n          {filename}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nconst ButtonFileInput = memo(ButtonFileInputComponent);\nButtonFileInput.displayName = 'ButtonFileInput';\nexport default ButtonFileInput;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport { Button, Typography } from '@material-ui/core';\nimport { useInputChangeHandler, useDragDrop, getFileName } from './hooks';\nimport { FileInputProps } from './types';\nimport useStyles from './styles';\n\nexport const LabelFileInputComponent: FC<FileInputProps> = ({\n  className,\n  files,\n  id,\n  onChange,\n  draggable,\n  children = 'Choose File',\n  ...props\n}) => {\n  const classes = useStyles();\n  const handleInputChange = useInputChangeHandler({ onChange });\n  const containerRef = useDragDrop({ onChange, draggable });\n  const filename = getFileName(files);\n\n  return (\n    <div className={clsx(classes.FileInput, className)} ref={containerRef}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        component=\"label\"\n        htmlFor={id}\n      >\n        {children}\n      </Button>\n\n      <input\n        className={clsx(classes.HiddenInput)}\n        id={id}\n        type=\"file\"\n        onChange={handleInputChange}\n        {...props}\n      />\n\n      {filename && (\n        <Typography\n          className={classes.Filename}\n          title={filename}\n          variant=\"body1\"\n        >\n          {filename}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nconst LabelFileInput = memo(LabelFileInputComponent);\nLabelFileInput.displayName = 'LabelFileInput';\nexport default LabelFileInput;\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { PreviewContainerProps } from './types';\nimport useStyles from './styles';\n\nexport const PreviewContainerComponent: FC<PreviewContainerProps> = ({\n  className,\n  errorClassName,\n  error,\n  hidden,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.PreviewContainer, className)} hidden={hidden}>\n      <Typography className={errorClassName} variant=\"subtitle1\" color=\"error\">\n        {error}\n      </Typography>\n      {children}\n    </Box>\n  );\n};\n\nconst PreviewContainer = memo(PreviewContainerComponent);\nPreviewContainer.displayName = 'PreviewContainer';\nexport default PreviewContainer;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport PreviewContainer from './PreviewContainer';\nimport { PreviewProps } from './types';\nimport useStyles from './styles';\n\nexport const ImagePreviewComponent: FC<PreviewProps> = ({\n  className,\n  previewClassName,\n  src,\n  error,\n  errorClassName,\n  title,\n  onLoad,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PreviewContainer\n      className={className}\n      error={error}\n      errorClassName={errorClassName}\n      hidden={!src && !error}\n    >\n      <img\n        className={clsx(classes.Preview, previewClassName)}\n        src={src}\n        alt={title}\n        onLoad={onLoad}\n      />\n    </PreviewContainer>\n  );\n};\n\nconst ImagePreview = memo(ImagePreviewComponent);\nImagePreview.displayName = 'ImagePreview';\nexport default ImagePreview;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box } from '@material-ui/core';\nimport ButtonFileInput from './ButtonFileInput';\nimport LabelFileInput from './LabelFileInput';\nimport { FileInputProps, TriggerComponent } from './types';\n\nconst getInputElement = (triggerComponent: TriggerComponent) => {\n  switch (triggerComponent) {\n    case 'label':\n      return LabelFileInput;\n\n    default:\n      return ButtonFileInput;\n  }\n};\n\nexport const InputContainerComponent: FC<InputContainerProps> = ({\n  triggerComponent = 'button',\n  children,\n  ...props\n}) => {\n  const InputElement = getInputElement(triggerComponent);\n\n  return (\n    <Box>\n      <InputElement {...props} />\n      {children}\n    </Box>\n  );\n};\n\nconst InputContainer = memo(InputContainerComponent);\nInputContainer.displayName = 'InputContainer';\nexport default InputContainer;\n\nexport interface InputContainerProps extends FileInputProps {\n  triggerComponent?: TriggerComponent;\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport { useDataUrl } from './hooks';\nimport ImagePreview from './ImagePreview';\nimport InputContainer from './InputContainer';\nimport { WrappedInputProps } from './types';\n\nexport const DataUrlImageInputComponent: FC<WrappedInputProps> = ({\n  title,\n  triggerComponent = 'button',\n  files,\n  supportedFileTypes,\n  ...props\n}) => {\n  const { src, error } = useDataUrl({ files, supportedFileTypes });\n\n  return (\n    <InputContainer\n      triggerComponent={triggerComponent}\n      files={files}\n      {...props}\n    >\n      <ImagePreview title={title} src={src} error={error} />\n    </InputContainer>\n  );\n};\n\nconst DataUrlImageInput = memo(DataUrlImageInputComponent);\nDataUrlImageInput.displayName = 'DataUrlImageInput';\nexport default DataUrlImageInput;\n","import React, { FC, memo } from 'react';\nimport { useObjectUrl } from './hooks';\nimport ImagePreview from './ImagePreview';\nimport InputContainer from './InputContainer';\nimport { WrappedInputProps } from './types';\n\nexport const ObjectUrlImageInputComponent: FC<WrappedInputProps> = ({\n  title,\n  triggerComponent = 'button',\n  files,\n  supportedFileTypes,\n  ...props\n}) => {\n  const { src, error, cleanupCallback } = useObjectUrl({\n    files,\n    supportedFileTypes,\n  });\n\n  return (\n    <InputContainer\n      triggerComponent={triggerComponent}\n      files={files}\n      {...props}\n    >\n      <ImagePreview\n        title={title}\n        src={src}\n        error={error}\n        onLoad={cleanupCallback}\n      />\n    </InputContainer>\n  );\n};\n\nconst ObjectUrlImageInput = memo(ObjectUrlImageInputComponent);\nObjectUrlImageInput.displayName = 'ObjectUrlImageInput';\nexport default ObjectUrlImageInput;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport PreviewContainer from './PreviewContainer';\nimport { PreviewProps } from './types';\nimport useStyles from './styles';\n\nexport const CommonPreviewComponent: FC<PreviewProps> = ({\n  className,\n  previewClassName,\n  src,\n  error,\n  errorClassName,\n  title,\n  onLoad,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PreviewContainer\n      className={className}\n      error={error}\n      errorClassName={errorClassName}\n      hidden={!src && !error}\n    >\n      <iframe\n        className={clsx(classes.Preview, previewClassName)}\n        title={title}\n        src={src}\n        onLoad={onLoad}\n      />\n    </PreviewContainer>\n  );\n};\n\nconst CommonPreview = memo(CommonPreviewComponent);\nCommonPreview.displayName = 'CommonPreview';\nexport default CommonPreview;\n","import React, { FC, memo } from 'react';\nimport { useObjectUrl } from './hooks';\nimport CommonPreview from './CommonPreview';\nimport InputContainer from './InputContainer';\nimport { WrappedInputProps } from './types';\n\nexport const CommonInputComponent: FC<WrappedInputProps> = ({\n  title,\n  triggerComponent = 'button',\n  files,\n  supportedFileTypes,\n  ...props\n}) => {\n  const { src, error, cleanupCallback } = useObjectUrl({\n    files,\n    supportedFileTypes,\n  });\n\n  return (\n    <InputContainer\n      triggerComponent={triggerComponent}\n      files={files}\n      {...props}\n    >\n      <CommonPreview\n        title={title}\n        src={src}\n        error={error}\n        onLoad={cleanupCallback}\n      />\n    </InputContainer>\n  );\n};\n\nconst CommonInput = memo(CommonInputComponent);\nCommonInput.displayName = 'CommonInput';\nexport default CommonInput;\n","export { default as ButtonFileInput } from './ButtonFileInput';\nexport { default as LabelFileInput } from './LabelFileInput';\nexport { default as ImagePreview } from './ImagePreview';\nexport { default as DataUrlImageInput } from './DataUrlImageInput';\nexport { default as ObjectUrlImageInput } from './ObjectUrlImageInput';\nexport { default as CommonPreview } from './CommonPreview';\nexport { default as CommonInput } from './CommonInput';\n","import { useState, useCallback } from 'react';\n\nconst readArrayBuffer = (arrayBuffer: ArrayBuffer) =>\n  String.fromCharCode(...new Uint8Array(arrayBuffer));\n\nconst readStream = async (stream: ReadableStream) => {\n  const reader = stream.getReader();\n  let result = '';\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // eslint-disable-next-line no-await-in-loop\n    const { done, value } = await reader.read();\n    const text = String.fromCharCode(...new Uint8Array(value));\n    result += text;\n    if (done) break;\n  }\n\n  return result;\n};\n\nexport const readBlobArrayBuffer = (blob: Blob) =>\n  blob.arrayBuffer().then(readArrayBuffer);\n\nexport const readBlobStream = (blob: Blob) => readStream(blob.stream());\n\nexport const readBlobText = (blob: Blob) => blob.text();\n\nexport const readResponseArrayBuffer = (blob: Blob) =>\n  new Response(blob).arrayBuffer().then(readArrayBuffer);\n\nexport const readResponseStream = (blob: Blob) =>\n  readStream(new Response(blob).body!);\n\nexport const readResponseText = (blob: Blob) => new Response(blob).text();\n\nexport const useHandleFileChange = ({\n  onBlobChange,\n}: {\n  onBlobChange: (blob: Blob) => Promise<string>;\n}) => {\n  const [text, setText] = useState('');\n\n  const handleFileChange = useCallback(\n    async (files: FileList | null) => {\n      const blob = files?.[0];\n      if (blob) {\n        const newText = await onBlobChange(blob);\n        setText(newText);\n      }\n    },\n    [onBlobChange],\n  );\n\n  return { text, handleFileChange };\n};\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    result: {\n      marginTop: spacing(3),\n    },\n    textarea: {\n      whiteSpace: 'nowrap',\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'Blob1' });\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { Input } from '@material-ui/core';\nimport Section, { SectionProps } from 'components/Section';\nimport { ButtonFileInput } from 'components/FileInput';\nimport { FileInputProps } from 'components/FileInput/types';\nimport { useHandleFileChange } from './utils';\nimport useStyles from './styles';\n\nexport const BlobReadingSectionComponent: FC<BlobReadingSectionProps> = ({\n  id,\n  onBlobChange,\n  ...props\n}) => {\n  const classes = useStyles();\n  const { handleFileChange, text } = useHandleFileChange({ onBlobChange });\n  const rows = text.split('\\n').length + 1;\n\n  return (\n    <Section {...props}>\n      <ButtonFileInput id={id} onChange={handleFileChange} />\n      {text && (\n        <Input\n          classes={{ input: classes.textarea }}\n          className={classes.result}\n          fullWidth\n          multiline\n          rows={rows}\n          rowsMax={8}\n          value={text}\n        />\n      )}\n    </Section>\n  );\n};\n\nconst BlobReadingSection = memo(BlobReadingSectionComponent);\nBlobReadingSection.displayName = 'BlobReadingSection';\nexport default BlobReadingSection;\n\nexport interface BlobReadingSectionProps\n  extends OmitFrom<SectionProps, 'children'>,\n    PickFrom<FileInputProps, 'id'> {\n  onBlobChange: (blob: Blob) => Promise<string>;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport CodeViewer from 'components/CodeViewer';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: (\n      <span>\n        How to read from a <code>Blob</code>?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          With <b>ES Next</b>, use <code>Blob.text()</code>,{' '}\n          <code>Blob.arrayBuffer()</code>, or <code>Blob.stream()</code>\n        </p>\n        <p>\n          Or convert to a <code>Response</code> object\n        </p>\n        <CodeViewer language=\"tsx\">\n          {`export const readBlobArrayBuffer = (blob: Blob) =>\n  blob.arrayBuffer().then(readArrayBuffer);\n\nexport const readBlobStream = (blob: Blob) => readStream(blob.stream());\n\nexport const readBlobText = (blob: Blob) => blob.text();\n\nexport const readResponseArrayBuffer = (blob: Blob) =>\n  new Response(blob).arrayBuffer().then(readArrayBuffer);\n\nexport const readResponseStream = (blob: Blob) =>\n  readStream(new Response(blob).body!);\n\nexport const readResponseText = (blob: Blob) => new Response(blob).text();`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Blob`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/Blob`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport BlobReadingSection from './BlobReadingSection';\nimport questions from './questions';\nimport {\n  readBlobText,\n  readBlobArrayBuffer,\n  readBlobStream,\n  readResponseText,\n  readResponseArrayBuffer,\n  readResponseStream,\n} from './utils';\n\nexport const Blob1Component: FC = () => (\n  <QuestionPage title=\"Blob 1\" questions={questions}>\n    <BlobReadingSection\n      id=\"blobText\"\n      onBlobChange={readBlobText}\n      title=\"Read Blob Text\"\n    />\n    <BlobReadingSection\n      id=\"blobArrayBuffer\"\n      onBlobChange={readBlobArrayBuffer}\n      title=\"Read Blob Array Buffer\"\n    />\n    <BlobReadingSection\n      id=\"blobStream\"\n      onBlobChange={readBlobStream}\n      title=\"Read Blob Stream\"\n    />\n    <BlobReadingSection\n      id=\"responseText\"\n      onBlobChange={readResponseText}\n      title=\"Read Response Text\"\n    />\n    <BlobReadingSection\n      id=\"responseArrayBuffer\"\n      onBlobChange={readResponseArrayBuffer}\n      title=\"Read Response Array Buffer\"\n    />\n    <BlobReadingSection\n      id=\"responseStream\"\n      onBlobChange={readResponseStream}\n      title=\"Read Response Stream\"\n    />\n  </QuestionPage>\n);\n\nconst Blob1 = memo(Blob1Component);\nBlob1.displayName = 'Blob1';\nexport default Blob1;\n"],"sourceRoot":""}