{"version":3,"sources":["components/References/index.tsx","components/Todos/index.tsx","components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/PageLayout/styles.ts","components/PageLayout/index.tsx","components/CodeViewer/styles.ts","components/CodeViewer/index.tsx","components/Section/styles.ts","components/Section/index.tsx","pages/css/Content1/styles.module.scss","pages/css/Content1/questions.tsx","pages/css/Content1/index.tsx"],"names":["References","memo","className","references","variant","map","name","url","key","href","target","rel","displayName","Todos","todos","Box","Typography","todo","useStyles","makeStyles","theme","Question","fontWeight","HiddenContent","marginBottom","spacing","Answer","marginTop","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","BottomBox","paddingBottom","borderBottom","BottomBoxTitle","QuestionItem","index","question","answer","classes","useToggle","open","toggleOpen","hasReferences","length","hasTodos","showBottomBox","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","createStyles","root","questions","fontFamily","color","classNamePrefix","QuestionPage","children","props","PageLayout","List","questionInfo","content","title","clsx","CodeViewer","style","okaidia","language","Section","Title","titleVariant","titleClassName","Paper","elevation","module","exports","Content1Component","Grid","container","item","FormGroup","required","xs","sm","FormLabel","htmlFor","Input","FormControl","id","type","Button","ButtonTime","ButtonDate","Task","data-status","Quote","lg","DecimalCounterItem","LowerRomanCounterItem","UpperAlphaCounterItem","LowerGreekCounterItem","Content1"],"mappings":"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","file":"static/js/css__Content1.4540b90e.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const ReferencesComponent: FC<ReferencesProps> = ({\n  className,\n  references,\n}) => (\n  <Box className={className}>\n    <Typography variant=\"h5\">References</Typography>\n    <ol>\n      {references!.map(({ name, url }) => (\n        <li key={url}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst References = memo(ReferencesComponent);\nReferences.displayName = 'References';\nexport default References;\n\nexport interface ReferencesProps {\n  className?: string;\n  references: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const TodosComponent: FC<TodosProps> = ({ className, todos }) => (\n  <Box>\n    <Typography className={className} variant=\"h5\">\n      Todos\n    </Typography>\n    <ol>\n      {todos!.map(todo => (\n        <li key={todo}>{todo}</li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst Todos = memo(TodosComponent);\nTodos.displayName = 'Todos';\nexport default Todos;\n\nexport interface TodosProps {\n  className?: string;\n  todos: string[];\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  HiddenContent: {\n    marginBottom: theme.spacing(2),\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  BottomBox: {\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${grey[400]}`,\n\n    '& ol,ul': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  BottomBoxTitle: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { ListItem, ListItemText, Collapse, Box } from '@material-ui/core';\nimport { useToggle } from 'cb-hooks';\nimport References from 'components/References';\nimport Todos from 'components/Todos';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n  todos,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const hasReferences = !!(references && references.length);\n  const hasTodos = !!(todos && todos.length);\n  const showBottomBox = hasReferences || hasTodos;\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.HiddenContent}>\n          <Box className={classes.Answer}>{answer}</Box>\n\n          {showBottomBox && (\n            <Box className={classes.BottomBox}>\n              {hasReferences && (\n                <References\n                  className={classes.BottomBoxTitle}\n                  references={references!}\n                />\n              )}\n\n              {hasTodos && (\n                <Todos className={classes.BottomBoxTitle} todos={todos!} />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    questions: {\n      marginTop: spacing(4),\n      '& code': {\n        fontFamily: `'Courier New', Courier, monospace`,\n        fontSize: 14,\n        fontWeight: 600,\n        color: `rgb(219, 104, 27)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'QuestionPage' });\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport PageLayout from 'components/PageLayout';\nimport useStyles from './styles';\n\nexport const QuestionPageComponent: FC<QuestionPageProps> = ({\n  questions,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PageLayout {...props}>\n      {children}\n      <Box className={classes.questions}>\n        <Typography variant=\"h4\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageComponent);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  className?: string;\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      marginTop: spacing(4),\n    },\n    content: {\n      marginTop: spacing(2.5),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'PageLayout' });\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const PageLayoutComponent: FC<PageLayoutProps> = ({\n  className,\n  title,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box className={classes.content}>{children}</Box>\n    </Box>\n  );\n};\n\nconst PageLayout = memo(PageLayoutComponent);\nPageLayout.displayName = 'PageLayout';\nexport default PageLayout;\n\nexport interface PageLayoutProps {\n  className?: string;\n  title: string;\n  children: ReactNode;\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  CodeViewer: {\n    '& pre': {\n      margin: '0 !important',\n      borderRadius: 6,\n    },\n\n    '&~$CodeViewer': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport useStyles from './styles';\n\nexport const CodeViewerComponent: FC<CodeViewerProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.CodeViewer, className)}>\n      <SyntaxHighlighter language={language} style={style}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nconst CodeViewer = memo(CodeViewerComponent);\nCodeViewer.displayName = 'CodeViewer';\nexport default CodeViewer;\n\nexport interface CodeViewerProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: CodeViewerLanguage;\n}\n\nexport type CodeViewerLanguage =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Section: {\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(3),\n  },\n  Title: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport { Paper, Typography } from '@material-ui/core';\nimport { TypographyProps } from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nexport const SectionComponent: FC<SectionProps> = ({\n  className,\n  title,\n  titleVariant = 'h6',\n  titleClassName,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={clsx(classes.Section, className)} elevation={0}>\n      <Typography\n        className={clsx(classes.Title, titleClassName)}\n        variant={titleVariant}\n      >\n        {title}\n      </Typography>\n      {children}\n    </Paper>\n  );\n};\n\nconst Section = memo(SectionComponent);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  className?: string;\n  title: string;\n  titleVariant?: TypographyProps['variant'];\n  titleClassName?: string;\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormGroup\":\"styles_FormGroup__W0uWt\",\"required\":\"styles_required__2fqb4\",\"FormLabel\":\"styles_FormLabel__3yqI8\",\"FormControl\":\"styles_FormControl__2Nx9N\",\"ButtonTime\":\"styles_ButtonTime__1tudG\",\"ButtonDate\":\"styles_ButtonDate__2l1HI\",\"Task\":\"styles_Task__1lhlC\",\"Quote\":\"styles_Quote__veiZR\",\"DecimalCounterItem\":\"styles_DecimalCounterItem__17mpf\",\"LowerRomanCounterItem\":\"styles_LowerRomanCounterItem__2iZbC\",\"UpperAlphaCounterItem\":\"styles_UpperAlphaCounterItem__1uLtB\",\"LowerGreekCounterItem\":\"styles_LowerGreekCounterItem__6Ajz3\"};","import React from 'react';\nimport CodeViewer from 'components/CodeViewer';\nimport { QuestionInfo } from 'types/app-common';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to insert some content before or after an element?`,\n    answer: (\n      <div>\n        <p>Use string content:</p>\n        <CodeViewer language=\"scss\">\n          {`.FormGroup {\n  &.required {\n    .FormLabel::after {\n      content: ' *';\n    }\n  }\n}`}\n        </CodeViewer>\n\n        <p>Use image content:</p>\n        <CodeViewer language=\"scss\">\n          {`.ButtonTime {\n  display: inline-block;\n  &::after {\n    content: url(./time.png);\n  }\n}\n\n.ButtonDate {\n  display: inline-block;\n  &::after {\n    content: url(./date.png);\n  }\n}`}\n        </CodeViewer>\n\n        <p>Use attribute content</p>\n        <CodeViewer language=\"scss\">\n          {`.Task {\n  display: block;\n  &::before {\n    content: attr(data-status);\n  }\n}`}\n        </CodeViewer>\n\n        <p>Use quote content</p>\n        <CodeViewer language=\"scss\">\n          {`.Quote {\n  &::before {\n    content: open-quote;\n  }\n  &::after {\n    content: close-quote;\n  }\n}`}\n        </CodeViewer>\n\n        <p>Use counter content</p>\n        <CodeViewer language=\"scss\">\n          {`.DecimalCounterItem {\n  counter-increment: decimalCounter;\n  &::before {\n    content: counter(decimalCounter) ' .';\n  }\n}\n\n.LowerRomanCounterItem {\n  counter-increment: lowerRomanCounter;\n  &::before {\n    content: counter(lowerRomanCounter, lower-roman) ' .';\n  }\n}\n\n.UpperAlphaCounterItem {\n  counter-increment: upperAlphaCounter;\n  &::before {\n    content: counter(upperAlphaCounter, upper-alpha) ' .';\n  }\n}\n\n.LowerGreekCounterItem {\n  counter-increment: lowerGreekCounter;\n  &::before {\n    content: counter(lowerGreekCounter, lower-greek) ' .';\n  }\n}`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[CSS-TRICKS] Valid CSS Content`,\n        url: `https://css-tricks.com/valid-css-content/`,\n      },\n      {\n        name: `[MDN] content`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/content`,\n      },\n      {\n        name: `[W3C] SComponente Predefined Counter Styles`,\n        url: `https://www.w3.org/TR/css-counter-styles-3/#predefined-counters`,\n      },\n      {\n        name: `[MDN] ::before (:before)`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/::before`,\n      },\n      {\n        name: `[MDN] ::after (:after)`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/::after`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport { Grid, FormLabel, Input, Button, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport QuestionPage from 'components/QuestionPage';\nimport Section from 'components/Section';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Content1Component: FC = () => (\n  <QuestionPage title=\"Content 1\" questions={questions}>\n    <Section title=\"String Content\">\n      <Grid container spacing={3}>\n        <Grid\n          item\n          className={clsx(classes.FormGroup, classes.required)}\n          xs={12}\n          sm={6}\n        >\n          <FormLabel htmlFor=\"name\" className={classes.FormLabel}>\n            Name\n          </FormLabel>\n          <Input className={classes.FormControl} id=\"name\" name=\"name\" />\n        </Grid>\n\n        <Grid item className={clsx(classes.FormGroup)} xs={12} sm={6}>\n          <FormLabel htmlFor=\"value\" className={classes.FormLabel}>\n            Value\n          </FormLabel>\n          <Input\n            type=\"number\"\n            className={classes.FormControl}\n            id=\"value\"\n            name=\"value\"\n          />\n        </Grid>\n      </Grid>\n    </Section>\n\n    <Section title=\"Image Content\">\n      <Grid container spacing={2}>\n        <Grid item>\n          <Button className={classes.ButtonTime} variant=\"outlined\">\n            Time\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button className={classes.ButtonDate} variant=\"outlined\">\n            Date\n          </Button>\n        </Grid>\n      </Grid>\n    </Section>\n\n    <Section title=\"Attribute Content\">\n      <Typography className={classes.Task} data-status=\"&#x2705;\">\n        Do homework\n      </Typography>\n      <Typography className={classes.Task} data-status=\"&#10062;\">\n        Hangout with friends\n      </Typography>\n    </Section>\n\n    <Section title=\"Quote Content\">\n      <Typography className={classes.Quote}>\n        Life is just a chance to grow a soul.\n      </Typography>\n      <Typography className={classes.Quote}>\n        People living deeply have no fear of death.\n      </Typography>\n    </Section>\n\n    <Section title=\"Counter Content\">\n      <Grid container spacing={2}>\n        <Grid item sm={6} lg={3}>\n          <Typography variant=\"h6\">Decimal</Typography>\n          <Typography className={classes.DecimalCounterItem}>Apple</Typography>\n          <Typography className={classes.DecimalCounterItem}>Banana</Typography>\n          <Typography className={classes.DecimalCounterItem}>\n            Coconut\n          </Typography>\n        </Grid>\n\n        <Grid item sm={6} lg={3}>\n          <Typography variant=\"h6\">Lower Roman</Typography>\n          <Typography className={classes.LowerRomanCounterItem}>\n            Apple\n          </Typography>\n          <Typography className={classes.LowerRomanCounterItem}>\n            Banana\n          </Typography>\n          <Typography className={classes.LowerRomanCounterItem}>\n            Coconut\n          </Typography>\n        </Grid>\n\n        <Grid item sm={6} lg={3}>\n          <Typography variant=\"h6\">Upper Alpha</Typography>\n          <Typography className={classes.UpperAlphaCounterItem}>\n            Apple\n          </Typography>\n          <Typography className={classes.UpperAlphaCounterItem}>\n            Banana\n          </Typography>\n          <Typography className={classes.UpperAlphaCounterItem}>\n            Coconut\n          </Typography>\n        </Grid>\n\n        <Grid item sm={6} lg={3}>\n          <Typography variant=\"h6\">Lower Greek</Typography>\n          <Typography className={classes.LowerGreekCounterItem}>\n            Apple\n          </Typography>\n          <Typography className={classes.LowerGreekCounterItem}>\n            Banana\n          </Typography>\n          <Typography className={classes.LowerGreekCounterItem}>\n            Coconut\n          </Typography>\n        </Grid>\n      </Grid>\n    </Section>\n  </QuestionPage>\n);\n\nconst Content1 = memo(Content1Component);\nContent1.displayName = 'Content1';\nexport default Content1;\n"],"sourceRoot":""}