{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","components/Button/index.tsx","components/Button/styles.module.scss","components/Input/index.tsx","components/NumberInput/index.tsx","components/Input/styles.module.scss","questions/performance/Memory1/styles.module.scss","services/backendService.ts","questions/performance/Memory1/questions.tsx","questions/performance/Memory1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","Button","id","download","type","Input","labelClassName","inputClassName","label","props","InputGroup","Label","htmlFor","NumberInput","onChange","handleChange","useCallback","e","Number","value","backendService","Axios","create","baseURL","process","Performance1Component","useState","setLength","browserMemory","setBrowserMemory","serverMemory","setServerMemory","getBrowserMemory","undefined","setTimeout","Array","from","reverse","performance","memory","totalJSHeapSize","jsHeapSizeLimit","usedJSHeapSize","getServerMemory","a","get","params","memoryUsage","data","MemoryTable","Result","JSON","stringify","Performance1"],"mappings":"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","file":"static/js/performance__Memory1.3034ef26.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import React, {\n  FC,\n  memo,\n  ReactNode,\n  ButtonHTMLAttributes,\n  SyntheticEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const ButtonImpl: FC<ButtonProps> = ({\n  className,\n  id,\n  href,\n  target,\n  rel,\n  download,\n  type = 'button',\n  onClick,\n  children,\n}) =>\n  href ? (\n    <a\n      className={classnames(classes.Button, className)}\n      id={id}\n      href={href}\n      target={target}\n      rel={rel}\n      download={download}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  ) : (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      className={classnames(classes.Button, className)}\n      id={id}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n\nconst Button = memo(ButtonImpl);\nButton.displayName = 'Button';\nexport default Button;\n\nexport interface ButtonProps {\n  className?: string;\n  id?: string;\n  href?: string;\n  target?: string;\n  rel?: string;\n  download?: string;\n  type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  onClick?: (e: SyntheticEvent) => void;\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonBase\":\"styles_ButtonBase__3uhxr\",\"Button\":\"styles_Button__1Ekk8\"};","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, InputHTMLAttributes, ReactNode } from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const InputImpl: FC<InputProps> = ({\n  className,\n  labelClassName,\n  inputClassName,\n  id,\n  label,\n  ...props\n}) => (\n  <div className={classnames(classes.InputGroup, className)}>\n    <label className={classnames(classes.Label, labelClassName)} htmlFor={id}>\n      {label}\n    </label>\n    <input\n      className={classnames(classes.Input, inputClassName)}\n      id={id}\n      {...props}\n    />\n  </div>\n);\n\nconst Input = memo(InputImpl);\nInput.displayName = 'Input';\nexport default Input;\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  labelClassName?: string;\n  inputClassName?: string;\n  label: ReactNode;\n}\n","import React, { FC, memo, ChangeEvent, useCallback } from 'react';\nimport Input, { InputProps } from 'components/Input';\n\nexport const NumberInputImpl: FC<NumberInputProps> = ({\n  type = 'number',\n  onChange,\n  ...props\n}) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) =>\n      onChange && onChange(Number(e.target.value)),\n    [onChange],\n  );\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Input type={type} onChange={handleChange} {...props} />;\n};\n\nconst NumberInput = memo(NumberInputImpl);\nNumberInput.displayName = 'NumberInput';\nexport default NumberInput;\n\nexport interface NumberInputProps\n  extends Omit<InputProps, 'onChange' | 'type'> {\n  type?: 'number' | 'range';\n  onChange?: (value: number) => void;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroupBase\":\"styles_InputGroupBase__18W83\",\"InputGroup\":\"styles_InputGroup__1uLeo\",\"LabelBase\":\"styles_LabelBase__2_6Yt\",\"Label\":\"styles_Label__1XhjA\",\"InputBase\":\"styles_InputBase__2S20X\",\"Input\":\"styles_Input__18MvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MemoryTable\":\"styles_MemoryTable__2fkTy\",\"Result\":\"styles_Result__1d7vr\"};","import Axios from 'axios';\n\nconst backendService = Axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n});\n\nexport default backendService;\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to get memory usage on browser?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>window.performance.memory</code>. Currently, only Chrome\n          supports\n        </p>\n\n        <Code language=\"tsx\">\n          {`const { totalJSHeapSize, jsHeapSizeLimit, usedJSHeapSize } = performance.memory;`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[stackoverflow] jQuery or javascript to find memory usage of page`,\n        url: `https://stackoverflow.com/questions/2530228/jquery-or-javascript-to-find-memory-usage-of-page`,\n      },\n      {\n        name: `[WebPlatform] performance.memory`,\n        url: `https://webplatform.github.io/docs/apis/timing/properties/memory/`,\n      },\n    ],\n  },\n  {\n    question: `How to get memory usage in NodeJS app?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>process.memoryUsage()</code>\n        </p>\n\n        <Code language=\"typescript\">{`const { external, heapTotal, heapUsed, rss } = process.memoryUsage();`}</Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[stackoverflow] How to monitor the memory usage of Node.js?`,\n        url: `https://stackoverflow.com/questions/20018588/how-to-monitor-the-memory-usage-of-node-js`,\n      },\n      {\n        name: `[Node.js] Process`,\n        url: `https://nodejs.org/api/process.html#process_process_memoryusage`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport NumberInput from 'components/NumberInput';\nimport Button from 'components/Button';\nimport backendService from 'services/backendService';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Performance1Component: FC = () => {\n  const [length, setLength] = useState(1000000);\n  const [browserMemory, setBrowserMemory] = useState<MemoryInfo>();\n  const [serverMemory, setServerMemory] = useState<NodeJS.MemoryUsage>();\n\n  const getBrowserMemory = useCallback(() => {\n    setBrowserMemory(undefined);\n\n    setTimeout(() => {\n      const array = Array.from({ length }, () => length);\n      array.reverse();\n      const {\n        totalJSHeapSize,\n        jsHeapSizeLimit,\n        usedJSHeapSize,\n      } = performance.memory;\n\n      setBrowserMemory({ totalJSHeapSize, jsHeapSizeLimit, usedJSHeapSize });\n    }, 0);\n  }, [length]);\n\n  const getServerMemory = useCallback(async () => {\n    setServerMemory(undefined);\n\n    const {\n      data: { memoryUsage },\n    } = await backendService.get<{\n      memoryUsage: NodeJS.MemoryUsage;\n    }>('memory-usage', { params: { length } });\n\n    setServerMemory(memoryUsage);\n  }, [length]);\n\n  return (\n    <QuestionPage title=\"Performance 1\" questions={questions}>\n      <div>\n        <NumberInput label=\"Length:\" value={length} onChange={setLength} />\n      </div>\n\n      <table className={classes.MemoryTable}>\n        <tbody>\n          <tr>\n            <td>\n              <Button className=\"mr-2\" onClick={getBrowserMemory}>\n                Get Browser Memory Usage\n              </Button>\n            </td>\n            <td>\n              <Button className=\"mr-2\" onClick={getServerMemory}>\n                Get Server Memory Usage\n              </Button>\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <div className={classes.Result}>\n                {browserMemory && (\n                  <pre>{JSON.stringify(browserMemory, null, 2)}</pre>\n                )}\n              </div>\n            </td>\n\n            <td>\n              <div className={classes.Result}>\n                {serverMemory && (\n                  <pre>{JSON.stringify(serverMemory, null, 2)}</pre>\n                )}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </QuestionPage>\n  );\n};\n\nconst Performance1 = memo(Performance1Component);\nPerformance1.displayName = 'Performance1';\nexport default Performance1;\n"],"sourceRoot":""}