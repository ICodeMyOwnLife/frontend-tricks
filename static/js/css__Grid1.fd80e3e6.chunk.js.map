{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/colors/brown.js","../node_modules/@material-ui/core/esm/colors/cyan.js","../node_modules/@material-ui/core/esm/colors/lime.js","../node_modules/@material-ui/core/esm/colors/yellow.js","../node_modules/@material-ui/core/esm/colors/orange.js","pages/css/Grid1/styles.ts","pages/css/Grid1/ResponsiveGrid.tsx","pages/css/Grid1/PropsGrid.tsx","../node_modules/@material-ui/core/esm/colors/purple.js","../node_modules/@material-ui/core/esm/colors/teal.js","pages/css/Grid1/AreaGrid.tsx","pages/css/Grid1/questions.tsx","pages/css/Grid1/FluidGrid.tsx","pages/css/Grid1/index.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","arr2","iter","Symbol","iterator","prototype","toString","call","from","TypeError","brown","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","cyan","lime","yellow","orange","useStyles","makeStyles","spacing","createStyles","root","gridWrapper","display","gridGap","gridCell","backgroundColor","red","inputGrid","gridTemplateColumns","marginBottom","propsGridWrapper","position","propsGrid","gridTemplateRows","height","backLayer","top","bottom","left","right","fade","backLayerCell","border","responsiveGridContainer","responsiveGridTitle","justifyContent","alignItems","fontSize","color","responsiveGrid","responsiveGridCell","opacity","autoFillGrid","autoFitGrid","areaGrid","gridTemplateAreas","areaGridCell","fontWeight","grey","fluidGrid","gridAutoFlow","fluidGridCell","minHeight","gridColumn","classNamePrefix","ResponsiveGrid","memo","className","gridClassName","title","classes","Box","clsx","map","displayName","placeSelfOptions","placeItemsOptions","placeContentOptions","PropsGrid","useMuiSelect","handleChangeJustifyContent","alignContent","handleChangeAlignContent","justifyItems","handleChangeJustifyItems","handleChangeAlignItems","justifySelf","handleChangeJustifySelf","alignSelf","handleChangeAlignSelf","backLayerStyle","useMemo","gridStyle","childStyles","width","SelectFormControl","label","onChange","options","style","_","index","purple","teal","areas","flows","amber","blue","green","indigo","gridRow","pink","AreaGrid","block1Area","handleChangeBlock1Area","block2Area","handleChangeBlock2Area","block3Area","handleChangeBlock3Area","block4Area","handleChangeBlock4Area","block5Area","handleChangeBlock5Area","block6Area","handleChangeBlock6Area","block7Area","handleChangeBlock7Area","block8Area","handleChangeBlock8Area","flow","handleChangeFlow","blockAreas","childStyle","gridArea","questions","question","answer","references","name","url","CodeViewer","language","FluidGrid","Grid1Component","QuestionPage","Section","Grid1"],"mappings":"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","file":"static/js/css__Grid1.fd80e3e6.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","var brown = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\nexport default brown;","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;","var lime = {\n  50: '#f9fbe7',\n  100: '#f0f4c3',\n  200: '#e6ee9c',\n  300: '#dce775',\n  400: '#d4e157',\n  500: '#cddc39',\n  600: '#c0ca33',\n  700: '#afb42b',\n  800: '#9e9d24',\n  900: '#827717',\n  A100: '#f4ff81',\n  A200: '#eeff41',\n  A400: '#c6ff00',\n  A700: '#aeea00'\n};\nexport default lime;","var yellow = {\n  50: '#fffde7',\n  100: '#fff9c4',\n  200: '#fff59d',\n  300: '#fff176',\n  400: '#ffee58',\n  500: '#ffeb3b',\n  600: '#fdd835',\n  700: '#fbc02d',\n  800: '#f9a825',\n  900: '#f57f17',\n  A100: '#ffff8d',\n  A200: '#ffff00',\n  A400: '#ffea00',\n  A700: '#ffd600'\n};\nexport default yellow;","var orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\nexport default orange;","import { makeStyles, createStyles, Theme, fade } from '@material-ui/core';\nimport { red, grey, orange } from '@material-ui/core/colors';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    gridWrapper: {\n      display: 'grid',\n      gridGap: spacing(3, 0),\n    },\n    gridCell: {\n      backgroundColor: red[900],\n    },\n    inputGrid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gridGap: spacing(2, 4),\n      marginBottom: spacing(3),\n    },\n    propsGridWrapper: {\n      position: 'relative',\n    },\n    propsGrid: {\n      display: 'grid',\n      gridTemplateColumns: '20% 30% 20%',\n      gridTemplateRows: '40% 30%',\n      height: 320,\n    },\n    backLayer: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: fade(red[100], 0.1),\n    },\n    backLayerCell: {\n      border: `1px dashed ${red[200]}`,\n    },\n    responsiveGridContainer: {\n      position: 'relative',\n    },\n    responsiveGridTitle: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 32,\n      color: red[100],\n      backgroundColor: fade(red[100], 0.1),\n    },\n    responsiveGrid: {\n      display: 'grid',\n      gridGap: spacing(3, 4),\n    },\n    responsiveGridCell: {\n      height: 64,\n      opacity: 0.5,\n    },\n    autoFillGrid: {\n      gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    },\n    autoFitGrid: {\n      gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n    },\n    areaGrid: {\n      display: 'grid',\n      gridTemplateColumns: '30% 1fr 1fr 1fr 1fr 1fr',\n      gridTemplateRows: '60px 40px 30px 40px 30px 60px',\n      gridTemplateAreas: `\n      \"header  header header header header header\"\n      \"sidebar ...... ...... ...... ...... ......\"\n      \"sidebar ...... main   main   ...... ......\"\n      \"sidebar ...... main   main   ...... ......\"\n      \"sidebar ...... ...... ...... ...... ......\"\n      \"sidebar footer footer footer footer footer\"`,\n      backgroundColor: fade(red[100], 0.1),\n    },\n    areaGridCell: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 22,\n      fontWeight: 'bold',\n      color: grey[900],\n      opacity: 0.5,\n    },\n    fluidGrid: {\n      display: 'grid',\n      gridTemplateColumns: `repeat(auto-fit, minmax(200px, 1fr))`,\n      gridGap: spacing(3, 4),\n      gridAutoFlow: 'dense row',\n    },\n    fluidGridCell: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n      minHeight: 64,\n      fontSize: 32,\n      color: 'white',\n\n      '&:nth-of-type(17n + 5)': {\n        gridColumn: '2 / -1',\n      },\n\n      '&:nth-of-type(31n + 11)': {\n        gridColumn: '1 / -2',\n        height: 128,\n        backgroundColor: orange[900],\n      },\n    },\n\n    '@media (max-width: 540px)': {\n      fluidGridCell: {\n        gridColumn: '1 !important',\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'Grid1' });\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { Box } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const ResponsiveGridComponent: FC<ResponsiveGridProps> = ({\n  className,\n  gridClassName,\n  title,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(className, classes.responsiveGridContainer)}>\n      <div className={classes.responsiveGridTitle}>{title}</div>\n      <div className={clsx(gridClassName, classes.responsiveGrid)}>\n        {[0, 1, 2].map(value => (\n          <div\n            className={clsx(classes.gridCell, classes.responsiveGridCell)}\n            key={value}\n          />\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nconst ResponsiveGrid = memo(ResponsiveGridComponent);\nResponsiveGrid.displayName = 'ResponsiveGrid';\nexport default ResponsiveGrid;\n\nexport interface ResponsiveGridProps {\n  className?: string;\n  gridClassName?: string;\n  title: string;\n}\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, CSSProperties, useMemo } from 'react';\nimport { Box } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useMuiSelect from 'hooks/useMuiSelect';\nimport SelectFormControl from 'components/SelectFormControl';\nimport useStyles from './styles';\n\nconst placeSelfOptions = ['start', 'end', 'center', 'stretch'];\n\nconst placeItemsOptions = [...placeSelfOptions];\n\nconst placeContentOptions = [\n  ...placeItemsOptions,\n  'space-around',\n  'space-between',\n  'space-evenly',\n];\n\nexport const PropsGridComponent: FC = () => {\n  const classes = useStyles();\n  const [justifyContent, , handleChangeJustifyContent] = useMuiSelect();\n  const [alignContent, , handleChangeAlignContent] = useMuiSelect();\n  const [justifyItems, , handleChangeJustifyItems] = useMuiSelect();\n  const [alignItems, , handleChangeAlignItems] = useMuiSelect();\n  const [justifySelf, , handleChangeJustifySelf] = useMuiSelect();\n  const [alignSelf, , handleChangeAlignSelf] = useMuiSelect();\n  const backLayerStyle = useMemo<CSSProperties>(\n    () => ({ justifyContent, alignContent }),\n    [alignContent, justifyContent],\n  );\n  const gridStyle = useMemo<CSSProperties>(\n    () => ({ justifyItems, alignItems, justifyContent, alignContent }),\n    [alignContent, alignItems, justifyContent, justifyItems],\n  );\n  const childStyles: CSSProperties[] = [\n    { width: '120px', height: '64px' },\n    { width: '200px', height: '80px', justifySelf, alignSelf },\n    { width: '160px', height: '60px' },\n    { width: '120px', height: '60px' },\n    { width: '100px', height: '52px' },\n    { width: '180px', height: '72px' },\n  ];\n\n  return (\n    <Box>\n      <Box className={classes.inputGrid}>\n        <SelectFormControl\n          label=\"justify-content\"\n          onChange={handleChangeJustifyContent}\n          options={placeContentOptions}\n          value={justifyContent}\n        />\n        <SelectFormControl\n          label=\"justify-items\"\n          onChange={handleChangeJustifyItems}\n          options={placeItemsOptions}\n          value={justifyItems}\n        />\n        <SelectFormControl\n          label=\"justify-self\"\n          onChange={handleChangeJustifySelf}\n          options={placeSelfOptions}\n          value={justifySelf}\n        />\n        <SelectFormControl\n          label=\"align-content\"\n          onChange={handleChangeAlignContent}\n          options={placeContentOptions}\n          value={alignContent}\n        />\n        <SelectFormControl\n          label=\"align-items\"\n          onChange={handleChangeAlignItems}\n          options={placeItemsOptions}\n          value={alignItems}\n        />\n        <SelectFormControl\n          label=\"align-self\"\n          onChange={handleChangeAlignSelf}\n          options={placeSelfOptions}\n          value={alignSelf}\n        />\n      </Box>\n\n      <Box className={classes.propsGridWrapper}>\n        <Box\n          className={clsx(classes.propsGrid, classes.backLayer)}\n          style={backLayerStyle}\n        >\n          {childStyles.map((_, index) => (\n            <div className={classes.backLayerCell} key={index} />\n          ))}\n        </Box>\n        <Box className={classes.propsGrid} style={gridStyle}>\n          {childStyles.map((style, index) => (\n            <div className={classes.gridCell} key={index} style={style} />\n          ))}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst PropsGrid = memo(PropsGridComponent);\nPropsGrid.displayName = 'PropsGrid';\nexport default PropsGrid;\n","var purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","var teal = {\n  50: '#e0f2f1',\n  100: '#b2dfdb',\n  200: '#80cbc4',\n  300: '#4db6ac',\n  400: '#26a69a',\n  500: '#009688',\n  600: '#00897b',\n  700: '#00796b',\n  800: '#00695c',\n  900: '#004d40',\n  A100: '#a7ffeb',\n  A200: '#64ffda',\n  A400: '#1de9b6',\n  A700: '#00bfa5'\n};\nexport default teal;","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, CSSProperties } from 'react';\nimport { Box } from '@material-ui/core';\nimport {\n  amber,\n  blue,\n  brown,\n  cyan,\n  green,\n  indigo,\n  lime,\n  orange,\n  pink,\n  purple,\n  red,\n  teal,\n  yellow,\n} from '@material-ui/core/colors';\nimport useMuiSelect from 'hooks/useMuiSelect';\nimport SelectFormControl from 'components/SelectFormControl';\nimport useStyles from './styles';\n\nconst areas = ['header', 'sidebar', 'main', 'footer'];\n\nconst flows = ['row', 'column', 'row dense', 'column dense'];\n\nconst childStyles: CSSProperties[] = [\n  {\n    backgroundColor: amber[200],\n  },\n  {\n    backgroundColor: blue[200],\n  },\n  {\n    backgroundColor: brown[200],\n  },\n  {\n    backgroundColor: cyan[200],\n  },\n  {\n    backgroundColor: green[200],\n  },\n  {\n    backgroundColor: indigo[200],\n    gridRow: 'span 2',\n    gridColumn: 'span 2',\n  },\n  {\n    backgroundColor: lime[200],\n  },\n  {\n    backgroundColor: orange[200],\n  },\n  {\n    backgroundColor: pink[200],\n  },\n  {\n    backgroundColor: purple[200],\n    gridRow: 'span 2',\n    gridColumn: 'span 2',\n  },\n  {\n    backgroundColor: red[200],\n  },\n  {\n    backgroundColor: teal[200],\n  },\n  {\n    backgroundColor: yellow[200],\n  },\n];\n\nexport const AreaGridComponent: FC = () => {\n  const classes = useStyles();\n  const [block1Area, , handleChangeBlock1Area] = useMuiSelect();\n  const [block2Area, , handleChangeBlock2Area] = useMuiSelect();\n  const [block3Area, , handleChangeBlock3Area] = useMuiSelect();\n  const [block4Area, , handleChangeBlock4Area] = useMuiSelect();\n  const [block5Area, , handleChangeBlock5Area] = useMuiSelect();\n  const [block6Area, , handleChangeBlock6Area] = useMuiSelect();\n  const [block7Area, , handleChangeBlock7Area] = useMuiSelect();\n  const [block8Area, , handleChangeBlock8Area] = useMuiSelect();\n  const [flow, , handleChangeFlow] = useMuiSelect();\n  const blockAreas = [\n    block1Area,\n    block2Area,\n    block3Area,\n    block4Area,\n    block5Area,\n    block6Area,\n    block7Area,\n    block8Area,\n  ];\n\n  return (\n    <Box>\n      <Box className={classes.inputGrid}>\n        <SelectFormControl\n          label=\"Block 1\"\n          onChange={handleChangeBlock1Area}\n          options={areas}\n          value={block1Area}\n        />\n        <SelectFormControl\n          label=\"Block 2\"\n          onChange={handleChangeBlock2Area}\n          options={areas}\n          value={block2Area}\n        />\n        <SelectFormControl\n          label=\"Block 3\"\n          onChange={handleChangeBlock3Area}\n          options={areas}\n          value={block3Area}\n        />\n        <SelectFormControl\n          label=\"Block 4\"\n          onChange={handleChangeBlock4Area}\n          options={areas}\n          value={block4Area}\n        />\n        <SelectFormControl\n          label=\"Block 5\"\n          onChange={handleChangeBlock5Area}\n          options={areas}\n          value={block5Area}\n        />\n        <SelectFormControl\n          label=\"Block 6\"\n          onChange={handleChangeBlock6Area}\n          options={areas}\n          value={block6Area}\n        />\n        <SelectFormControl\n          label=\"Block 7\"\n          onChange={handleChangeBlock7Area}\n          options={areas}\n          value={block7Area}\n        />\n        <SelectFormControl\n          label=\"Block 8\"\n          onChange={handleChangeBlock8Area}\n          options={areas}\n          value={block8Area}\n        />\n        <SelectFormControl\n          label=\"grid-auto-flow\"\n          onChange={handleChangeFlow}\n          options={flows}\n          value={flow}\n        />\n      </Box>\n      <Box className={classes.areaGrid} style={{ gridAutoFlow: flow }}>\n        {childStyles.map((childStyle, index) => {\n          let style = childStyle;\n          if (blockAreas[index]) {\n            style = { ...style, gridArea: blockAreas[index] };\n          }\n          return (\n            <div className={classes.areaGridCell} key={index} style={style}>\n              Block {index + 1}\n            </div>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nconst AreaGrid = memo(AreaGridComponent);\nAreaGrid.displayName = 'AreaGrid';\nexport default AreaGrid;\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport CodeViewer from 'components/CodeViewer';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: (\n      <span>\n        What is the difference between <code>justify-content</code> vs{' '}\n        <code>align-content</code> vs <code>justify-items</code> vs{' '}\n        <code>align-items</code> vs <code>justify-self</code> vs{' '}\n        <code>align-self</code>?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          <code>justify-content</code> The CSS <code>justify-content</code>{' '}\n          property defines how the browser distributes space between and around\n          content items along the main-axis of a flex container, and the inline\n          axis of a grid container.\n        </p>\n        <p>\n          <code>align-content</code>: The CSS <code>align-content</code>{' '}\n          property sets the distribution of space between and around content\n          items along a flexbox's cross-axis or a grid's block axis.\n        </p>\n        <p>\n          <code>justify-items</code>: The CSS <code>justify-items</code>{' '}\n          property defines the default <code>justify-self</code> for all items\n          of the box, giving them all a default way of justifying each box along\n          the appropriate axis.\n        </p>\n        <p>\n          <code>align-items</code>: The CSS <code>align-items</code> property\n          sets the <code>align-self</code> value on all direct children as a\n          group. In Flexbox, it controls the alignment of items on the Cross\n          Axis. In Grid Layout, it controls the alignment of items on the Block\n          Axis within their grid area.\n        </p>\n        <p>\n          <code>justify-self</code>: The CSS <code>justify-self</code> property\n          sets the way a box is justified inside its alignment container along\n          the appropriate axis.\n        </p>\n        <p>\n          <code>align-self</code>: The <code>align-self</code> CSS property\n          overrides a grid or flex item's <code>align-items</code> value. In\n          Grid, it aligns the item inside the grid area. In Flexbox, it aligns\n          the item on the cross axis.\n        </p>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] justify-content`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content`,\n      },\n      {\n        name: `[MDN] align-content`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/align-content`,\n      },\n      {\n        name: `[MDN] justify-items`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/justify-items`,\n      },\n      {\n        name: `[MDN] align-items`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/align-items`,\n      },\n      {\n        name: `[MDN] justify-self`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/justify-self`,\n      },\n      {\n        name: `[MDN] align-self`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/align-self`,\n      },\n      {\n        name: `[CSS-TRICKS] A Complete Guide to Grid`,\n        url: `https://css-tricks.com/snippets/css/complete-guide-grid/`,\n      },\n    ],\n  },\n  {\n    question: `How to auto-size columns in CSS Grid to make responsive layout?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>auto-fill</code> or <code>auto-fit</code> value and{' '}\n          <code>minmax</code> function in <code>repeat</code> function\n        </p>\n\n        <p>\n          The good thing when creating responsive layout with CSS Grid is it\n          depends on the container width rather then the window width as in the\n          case of media query.\n        </p>\n\n        <CodeViewer language=\"css\">\n          {`.Grid1-grid-178 {\n  display: grid;\n  grid-gap: 24px 32px;\n}\n.Grid1-autoFillGrid-179 {\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n}\n.Grid1-autoFitGrid-180 {\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n}`}\n        </CodeViewer>\n\n        <p>\n          What is the different between <code>auto-fill</code> and{' '}\n          <code>auto-fit</code>?\n        </p>\n        <p>\n          <code>auto-fill</code>: If the grid container has a definite or\n          maximal size in the relevant axis, then the number of repetitions is\n          the largest possible positive integer that does not cause the grid to\n          overflow its grid container. Treating each track as its maximal track\n          sizing function (each independent value used to define\n          grid-template-rows or grid-template-columns), if that is definite.\n          Otherwise, as its minimum track sizing function, and taking grid-gap\n          into account. If any number of repetitions would overflow, then the\n          repetition is 1. Otherwise, if the grid container has a definite\n          minimal size in the relevant axis, the number of repetitions is the\n          smallest possible positive integer that fulfills that minimum\n          requirement. Otherwise, the specified track list repeats only once.\n        </p>\n        <p>\n          <code>auto-fit</code> Behaves the same as <code>auto-fill</code>,\n          except that after placing the grid items any empty repeated tracks are\n          collapsed. An empty track is one with no in-flow grid items placed\n          into or spanning across it. (This can result in all tracks being\n          collapsed, if they’re all empty.) A collapsed track is treated as\n          having a single fixed track sizing function of 0px, and the gutters on\n          either side of it collapse. For the purpose of finding the number of\n          auto-repeated tracks, the user agent floors the track size to a user\n          agent specified value (e.g., 1px), to avoid division by zero.\n        </p>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] grid-template-columns`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns`,\n      },\n      {\n        name: `[MDN] repeat()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/repeat`,\n      },\n      {\n        name: `[MDN] minmax()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/minmax`,\n      },\n      {\n        name: `[DEV] CSS Grid : Auto-Fit & Auto-Fill`,\n        url: `https://dev.to/nunocpnp/css-grid-auto-fit-auto-fill-4hkh`,\n      },\n      {\n        name:\n          '[CSS-TRICKS] Auto-Sizing Columns in CSS Grid: `auto-fill` vs `auto-fit`',\n        url: `https://css-tricks.com/auto-sizing-columns-css-grid-auto-fill-vs-auto-fit/`,\n      },\n    ],\n  },\n  {\n    question: 'How to define areas in grid layouts?',\n    answer: (\n      <div>\n        <p>\n          Use <code>grid-template-areas</code> with <code>grid-area</code> and\n          optionally <code>grid-auto-flow</code>\n        </p>\n        <p>\n          The <code>grid-template-areas</code> CSS property specifies named grid\n          areas.\n        </p>\n        <p>\n          The <code>grid-area</code> CSS property is a shorthand property for\n          <code>grid-row-start</code>, <code>grid-column-start</code>,\n          <code>grid-row-end</code> and <code>grid-column-end</code>, specifying\n          a grid item’s size and location within the grid by contributing a\n          line, a span, or nothing (automatic) to its grid placement, thereby\n          specifying the edges of its grid area.\n        </p>\n        <p>\n          The <code>grid-auto-flow</code> CSS property controls how the\n          auto-placement algorithm works, specifying exactly how auto-placed\n          items get flowed into the grid.\n        </p>\n        <CodeViewer language=\"css\">\n          {`.Grid1-areaGrid-188 {\n  display: grid;\n  background-color: rgba(255, 205, 210, 0.1);\n  grid-template-rows: 60px 40px 30px 40px 30px 60px;\n  grid-template-areas: \n      \"header  header header header header header\"\n      \"sidebar ...... ...... ...... ...... ......\"\n      \"sidebar ...... main   main   ...... ......\"\n      \"sidebar ...... main   main   ...... ......\"\n      \"sidebar ...... ...... ...... ...... ......\"\n      \"sidebar footer footer footer footer footer\";\n  grid-template-columns: 30% 1fr 1fr 1fr 1fr 1fr;\n}`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] grid-template-areas`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas`,\n      },\n      {\n        name: `[MDN] grid-area`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area`,\n      },\n      {\n        name: `[MDN] grid-auto-flow`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow`,\n      },\n      {\n        name: `Understanding CSS Grid: Grid Template Areas`,\n        url: `https://www.smashingmagazine.com/2020/02/understanding-css-grid-template-areas/`,\n      },\n      {\n        name: `[CSS-TRICKS] A Complete Guide to Grid`,\n        url: `https://css-tricks.com/snippets/css/complete-guide-grid/`,\n      },\n    ],\n  },\n  {\n    question: `How to create a responsive magazine grid layout?`,\n    answer: (\n      <div>\n        <CodeViewer language=\"css\">\n          {`.Grid1-fluidGrid-190 {\n  display: grid;\n  grid-gap: 24px 32px;\n  grid-auto-flow: dense row;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n}\n\n.Grid1-fluidGridCell-191 {\n  color: white;\n  height: 100%;\n  display: flex;\n  font-size: 32px;\n  min-height: 64px;\n  align-items: center;\n  justify-content: center;\n}\n\n.Grid1-fluidGridCell-191:nth-of-type(17n + 5) {\n  grid-column: 2 / -1;\n}\n\n.Grid1-fluidGridCell-191:nth-of-type(31n + 11) {\n  height: 128px;\n  grid-column: 1 / -2;\n  background-color: #e65100;\n}\n\n@media (max-width: 540px) {\n  .Grid1-fluidGridCell-191 {\n    grid-column: 1 !important;\n  }\n}`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[CSS-TRICKS] Responsive Grid Magazine Layout in Just 20 Lines of CSS`,\n        url: `https://css-tricks.com/responsive-grid-magazine-layout-in-just-20-lines-of-css/`,\n      },\n      {\n        name: `[CSS-TRICKS] A Complete Guide to Grid`,\n        url: `https://css-tricks.com/snippets/css/complete-guide-grid/`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport { Box } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nconst itemCount = 128;\n\nexport const FluidGridComponent: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.fluidGrid}>\n      {Array.from({ length: itemCount }, (_, index) => (\n        <div\n          className={clsx(classes.gridCell, classes.fluidGridCell)}\n          key={index}\n        >\n          {index}\n        </div>\n      ))}\n    </Box>\n  );\n};\n\nconst FluidGrid = memo(FluidGridComponent);\nFluidGrid.displayName = 'FluidGrid';\nexport default FluidGrid;\n","import React, { FC, memo } from 'react';\nimport { Box } from '@material-ui/core';\nimport QuestionPage from 'components/QuestionPage';\nimport Section from 'components/Section';\nimport ResponsiveGrid from './ResponsiveGrid';\nimport PropsGrid from './PropsGrid';\nimport AreaGrid from './AreaGrid';\nimport questions from './questions';\nimport useStyles from './styles';\nimport FluidGrid from './FluidGrid';\n\nexport const Grid1Component: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <QuestionPage className={classes.root} title=\"Grid 1\" questions={questions}>\n      <Section title=\"justify-items vs justify-content vs justify-self vs align-items vs align-content vs align-self\">\n        <PropsGrid />\n      </Section>\n      <Section title=\"auto-fill vs auto-fit\">\n        <Box className={classes.gridWrapper}>\n          <ResponsiveGrid\n            gridClassName={classes.autoFillGrid}\n            title=\"auto-fill\"\n          />\n          <ResponsiveGrid\n            gridClassName={classes.autoFitGrid}\n            title=\"auto-fit\"\n          />\n        </Box>\n      </Section>\n      <Section title=\"Areas and auto flow\">\n        <AreaGrid />\n      </Section>\n      <Section title=\"Fluid Responsive Grid\">\n        <FluidGrid />\n      </Section>\n    </QuestionPage>\n  );\n};\n\nconst Grid1 = memo(Grid1Component);\nGrid1.displayName = 'Grid1';\nexport default Grid1;\n"],"sourceRoot":""}