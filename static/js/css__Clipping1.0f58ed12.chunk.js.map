{"version":3,"sources":["components/References/index.tsx","components/Todos/index.tsx","components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/PageLayout/styles.ts","components/PageLayout/index.tsx","components/CodeViewer/styles.ts","components/CodeViewer/index.tsx","pages/css/Clipping1/styles.module.scss","pages/css/Clipping1/1.jpg","pages/css/Clipping1/Section.tsx","pages/css/Clipping1/questions.tsx","pages/css/Clipping1/index.tsx"],"names":["References","memo","className","references","variant","map","name","url","key","href","target","rel","displayName","Todos","todos","Box","Typography","todo","useStyles","makeStyles","theme","Question","fontWeight","HiddenContent","marginBottom","spacing","Answer","marginTop","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","BottomBox","paddingBottom","borderBottom","BottomBoxTitle","QuestionItem","index","question","answer","classes","useToggle","open","toggleOpen","hasReferences","length","hasTodos","showBottomBox","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","createStyles","root","questions","fontFamily","color","classNamePrefix","QuestionPage","children","props","PageLayout","List","questionInfo","content","title","clsx","CodeViewer","style","okaidia","language","module","exports","Section","float","imageClassName","SectionImage","src","imgSrc","alt","SectionText","Clipping1Component","Container","none","inset1","inset2","circle1","circle2","ellipse1","ellipse2","polygon1","polygon2","url1","transition","animation","width","height","id","cx","cy","r","Clipping1"],"mappings":"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","file":"static/js/css__Clipping1.0f58ed12.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const ReferencesComponent: FC<ReferencesProps> = ({\n  className,\n  references,\n}) => (\n  <Box className={className}>\n    <Typography variant=\"h5\">References</Typography>\n    <ol>\n      {references!.map(({ name, url }) => (\n        <li key={url}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst References = memo(ReferencesComponent);\nReferences.displayName = 'References';\nexport default References;\n\nexport interface ReferencesProps {\n  className?: string;\n  references: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const TodosComponent: FC<TodosProps> = ({ className, todos }) => (\n  <Box>\n    <Typography className={className} variant=\"h5\">\n      Todos\n    </Typography>\n    <ol>\n      {todos!.map(todo => (\n        <li key={todo}>{todo}</li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst Todos = memo(TodosComponent);\nTodos.displayName = 'Todos';\nexport default Todos;\n\nexport interface TodosProps {\n  className?: string;\n  todos: string[];\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  HiddenContent: {\n    marginBottom: theme.spacing(2),\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  BottomBox: {\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${grey[400]}`,\n\n    '& ol,ul': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  BottomBoxTitle: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { ListItem, ListItemText, Collapse, Box } from '@material-ui/core';\nimport { useToggle } from 'cb-hooks';\nimport References from 'components/References';\nimport Todos from 'components/Todos';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n  todos,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const hasReferences = !!(references && references.length);\n  const hasTodos = !!(todos && todos.length);\n  const showBottomBox = hasReferences || hasTodos;\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.HiddenContent}>\n          <Box className={classes.Answer}>{answer}</Box>\n\n          {showBottomBox && (\n            <Box className={classes.BottomBox}>\n              {hasReferences && (\n                <References\n                  className={classes.BottomBoxTitle}\n                  references={references!}\n                />\n              )}\n\n              {hasTodos && (\n                <Todos className={classes.BottomBoxTitle} todos={todos!} />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    questions: {\n      marginTop: spacing(4),\n      '& code': {\n        fontFamily: `'Courier New', Courier, monospace`,\n        fontSize: 14,\n        fontWeight: 600,\n        color: `rgb(219, 104, 27)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'QuestionPage' });\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport PageLayout from 'components/PageLayout';\nimport useStyles from './styles';\n\nexport const QuestionPageComponent: FC<QuestionPageProps> = ({\n  questions,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PageLayout {...props}>\n      {children}\n      <Box className={classes.questions}>\n        <Typography variant=\"h4\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageComponent);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  className?: string;\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      marginTop: spacing(4),\n    },\n    content: {\n      marginTop: spacing(2.5),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'PageLayout' });\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const PageLayoutComponent: FC<PageLayoutProps> = ({\n  className,\n  title,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box className={classes.content}>{children}</Box>\n    </Box>\n  );\n};\n\nconst PageLayout = memo(PageLayoutComponent);\nPageLayout.displayName = 'PageLayout';\nexport default PageLayout;\n\nexport interface PageLayoutProps {\n  className?: string;\n  title: string;\n  children: ReactNode;\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  CodeViewer: {\n    '& pre': {\n      margin: '0 !important',\n      borderRadius: 6,\n    },\n\n    '&~$CodeViewer': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport useStyles from './styles';\n\nexport const CodeViewerComponent: FC<CodeViewerProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.CodeViewer, className)}>\n      <SyntaxHighlighter language={language} style={style}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nconst CodeViewer = memo(CodeViewerComponent);\nCodeViewer.displayName = 'CodeViewer';\nexport default CodeViewer;\n\nexport interface CodeViewerProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: CodeViewerLanguage;\n}\n\nexport type CodeViewerLanguage =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__3liPg\",\"Section\":\"styles_Section__32eHQ\",\"SectionImage\":\"styles_SectionImage__1agZv\",\"SectionText\":\"styles_SectionText__3qUc-\",\"left\":\"styles_left__3ivHf\",\"right\":\"styles_right__26DWK\",\"none\":\"styles_none__3pBsJ\",\"inset1\":\"styles_inset1__3neja\",\"inset2\":\"styles_inset2__GpVjU\",\"circle1\":\"styles_circle1__MWJl8\",\"circle2\":\"styles_circle2__3fVmK\",\"ellipse1\":\"styles_ellipse1__TDCPZ\",\"ellipse2\":\"styles_ellipse2__2MHHb\",\"polygon1\":\"styles_polygon1__Eigm0\",\"polygon2\":\"styles_polygon2__QqPnj\",\"url1\":\"styles_url1__3cld8\",\"transition\":\"styles_transition__2K7CV\",\"animation\":\"styles_animation__1IKFR\",\"clip\":\"styles_clip__1ORMB\"};","module.exports = __webpack_public_path__ + \"static/media/1.2836dba6.jpg\";","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport imgSrc from './1.jpg';\nimport classes from './styles.module.scss';\n\nexport const SectionComponent: FC<SectionProps> = ({\n  float = 'left',\n  imageClassName,\n}) => (\n  <div className={classes.Section}>\n    <img\n      className={clsx(classes.SectionImage, classes[float], imageClassName)}\n      src={imgSrc}\n      alt=\"wild\"\n    />\n    <p className={classes.SectionText}>\n      Maecenas aliquet orci eu leo consectetur, ut tincidunt sem imperdiet.\n      Nulla sed leo non augue mollis ultricies in a dolor. Lorem ipsum dolor sit\n      amet, consectetur adipiscing elit. Nullam erat magna, semper eu massa sit\n      amet, pulvinar rutrum nunc. Praesent sit amet nisl vel mi condimentum\n      facilisis. Aliquam ut lacus tempor, iaculis arcu eu, faucibus diam. Nam at\n      nibh euismod, finibus nulla sit amet, consectetur arcu. Donec venenatis\n      lobortis elit, ut dictum metus suscipit ut. Sed vehicula, dui eu euismod\n      condimentum, dui ex tincidunt metus, et condimentum dui leo ac eros. Sed\n      feugiat fermentum iaculis. Maecenas id ipsum quis justo ultrices\n      facilisis. Praesent lorem magna, aliquam vel eleifend eget, sagittis ac\n      neque. Curabitur urna erat, consequat quis sollicitudin non, commodo et\n      nisl. Ut scelerisque porttitor quam vel sodales.\n    </p>\n  </div>\n);\n\nconst Section = memo(SectionComponent);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  float?: 'left' | 'right';\n  imageClassName?: string;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport CodeViewer from 'components/CodeViewer';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to clip an element into a defined shape?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>clip-path</code> to clip an element.\n        </p>\n        <p>\n          If we want texts wrap around the clipped element, use{' '}\n          <code>float</code> combined with <code>shape-outside</code>\n        </p>\n        <CodeViewer language=\"scss\">\n          {`.left {\n  float: left;\n  margin-right: 20px;\n}\n\n.right {\n  float: right;\n  margin-left: 20px;\n}\n\n.none {\n  shape-outside: none;\n  clip-path: none;\n}\n\n.inset1 {\n  $inset1: inset(40px 60px 0 0);\n  shape-outside: $inset1;\n  clip-path: $inset1;\n}\n\n.inset2 {\n  $inset2: inset(40px 0 0 60px round 24px 6px 80px 48px);\n  shape-outside: $inset2;\n  clip-path: $inset2;\n}\n\n.circle1 {\n  $circle1: circle(140px);\n  shape-outside: $circle1;\n  clip-path: $circle1;\n}\n\n.circle2 {\n  shape-outside: circle(162px at 180px 40px);\n  clip-path: circle(152px at 160px 28px);\n}\n\n.ellipse1 {\n  $ellipse1: ellipse(140px 90px);\n  shape-outside: $ellipse1;\n  clip-path: $ellipse1;\n}\n\n.ellipse2 {\n  shape-outside: ellipse(192px 124px at 200px 56px);\n  clip-path: ellipse(180px 120px at 180px 44px);\n}\n\n.polygon1 {\n  $polygon1: polygon(50% 0%, 98% 35%, 79% 91%, 21% 91%, 2% 35%);\n  shape-outside: $polygon1;\n  clip-path: $polygon1;\n}\n\n.polygon2 {\n  $polygon2: polygon(evenodd, 50% 0%, 79% 91%, 2% 35%, 98% 35%, 21% 91%);\n  shape-outside: $polygon2;\n  clip-path: $polygon2;\n}\n\n.url1 {\n  shape-outside: url(./2.png);\n  clip-path: url(#myClip);\n}\n\n.transition {\n  $polygon-normal: polygon(50% 0, 100% 100%, 0 100%);\n  shape-outside: $polygon-normal;\n  clip-path: $polygon-normal;\n  transition: 1s ease all;\n\n  &:hover {\n    $polygon-hover: polygon(100% 0, 50% 100%, 0 0);\n    shape-outside: $polygon-hover;\n    clip-path: $polygon-hover;\n  }\n}`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] clip-path`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path`,\n      },\n      {\n        name: `[MDN] shape-outside`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/shape-outside`,\n      },\n      {\n        name: `[CSS-TRICKS] clip-path`,\n        url: `https://css-tricks.com/almanac/properties/c/clip-path/`,\n      },\n      {\n        name: `[CSS-TRICKS] shape-outside`,\n        url: `https://css-tricks.com/almanac/properties/s/shape-outside/`,\n      },\n      {\n        name: `[CSS-TRICKS] Clipping and Masking in CSS`,\n        url: `https://css-tricks.com/clipping-masking-css/`,\n      },\n      {\n        name: `[CSS-TRICKS] Sketchy Avatars with CSS clip-path`,\n        url: `https://css-tricks.com/sketchy-avatars-css-clip-path/`,\n      },\n      {\n        name: `[codrops] clip-path`,\n        url: `https://tympanus.net/codrops/css_reference/clip-path/`,\n      },\n      {\n        name: `[codrops] shape-outside`,\n        url: `https://tympanus.net/codrops/css_reference/shape-outside/`,\n      },\n      {\n        name: `[codrops] basic-shape`,\n        url: `https://tympanus.net/codrops/css_reference/basic-shape/`,\n      },\n      {\n        name: `CSS clip-path maker`,\n        url: `https://bennettfeely.com/clippy/`,\n      },\n      {\n        name: `[w3c] Winding rule: the ‘fill-rule’ property`,\n        url: `https://www.w3.org/TR/SVG/painting.html#FillRuleProperty`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport Section from './Section';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Clipping1Component: FC = () => (\n  <QuestionPage title=\"Clipping 1\" questions={questions}>\n    <div className={classes.Container}>\n      <Section imageClassName={classes.none} float=\"right\" />\n      <Section imageClassName={classes.inset1} />\n      <Section imageClassName={classes.inset2} float=\"right\" />\n      <Section imageClassName={classes.circle1} />\n      <Section imageClassName={classes.circle2} float=\"right\" />\n      <Section imageClassName={classes.ellipse1} />\n      <Section imageClassName={classes.ellipse2} float=\"right\" />\n      <Section imageClassName={classes.polygon1} />\n      <Section imageClassName={classes.polygon2} float=\"right\" />\n      <Section imageClassName={classes.url1} />\n      <Section imageClassName={classes.transition} float=\"right\" />\n      <Section imageClassName={classes.animation} />\n    </div>\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"myClip\">\n          <circle cx=\"60\" cy=\"60\" r=\"60\" />\n          <circle cx=\"160\" cy=\"100\" r=\"84\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </QuestionPage>\n);\n\nconst Clipping1 = memo(Clipping1Component);\nClipping1.displayName = 'Clipping1';\nexport default Clipping1;\n"],"sourceRoot":""}