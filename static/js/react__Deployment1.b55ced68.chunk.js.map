{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","questions/react/Deployment1/gh-pages.png","questions/react/Deployment1/questions.tsx","questions/react/Deployment1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","src","ghPagesSrc","alt","width","Deployment1Component","Deployment1"],"mappings":"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","file":"static/js/react__Deployment1.b55ced68.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","module.exports = __webpack_public_path__ + \"static/media/gh-pages.2f41f509.png\";","/* eslint-disable react/no-unescaped-entities */\nimport { QuestionInfo } from 'types/app-common';\nimport React from 'react';\nimport Code from 'components/Code';\nimport ghPagesSrc from './gh-pages.png';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to setup a static server for React app?`,\n    answer: (\n      <div>\n        <p>\n          In <code>NodeJS</code> environment, use <code>serve</code>:\n        </p>\n\n        <Code language=\"bash\">\n          {`npm install -g serve\nserve -s build -l 4000`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#static-server`,\n      },\n      {\n        name: `[GitHub] serve`,\n        url: `https://github.com/zeit/serve`,\n      },\n      {\n        name: `Serve 7: Middleware`,\n        url: `https://zeit.co/blog/serve-7`,\n      },\n    ],\n  },\n  {\n    question: `How to setup an Express server for React app?`,\n    answer: (\n      <Code language=\"typescript\">\n        {`import { join, resolve } from 'path';\nimport express from 'express';\nimport morgan from 'morgan';\n\nconst DIR_BUILD = resolve('../build');\nconst app = express();\n\napp.use(morgan('common'));\napp.use(express.static(DIR_BUILD));\n\n// serve index.html for any unknown paths\napp.get('/*', (_req, res) => {\n  res.sendFile(join(DIR_BUILD, 'index.html'));\n});\n\napp.listen(Number(process.env.PORT) || 4000);`}\n      </Code>\n    ),\n    references: [\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#serving-apps-with-client-side-routing`,\n      },\n    ],\n  },\n  {\n    question: `How to deploy to GitHub Pages?`,\n    answer: (\n      <div>\n        <p>\n          (Refer to <code>github-pages</code> branch)\n        </p>\n\n        <p>\n          Install <code>gh-pages</code>\n        </p>\n\n        <Code language=\"bash\">yarn add gh-pages</Code>\n\n        <p>\n          Add <code>homepage</code> entry and scripts to{' '}\n          <code>package.json</code>.\n        </p>\n\n        <p>\n          <b>Note:</b> The <code>homepage</code> entry is very important for\n          GitHub pages to work properly. React will build paths to static files\n          based on <code>homepage</code>, (e.g.{' '}\n          <code>\n            {`<script src=\"/frontend-tricks/static/js/4.3e25585d.chunk.js\"></script>`}\n          </code>\n          ), which may cause problems with other deployment methods.\n        </p>\n\n        <Code language=\"json\">\n          {`{\n  \"homepage\": \"https://icodemyownlife.github.io/frontend-tricks/\",\n  \"scripts\": {\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\",\n  }\n}`}\n        </Code>\n\n        <p>\n          Run <code>deploy</code> script\n        </p>\n\n        <Code language=\"bash\">yarn deploy</Code>\n\n        <p>\n          Make sure GitHub Pages option in your GitHub project settings is set\n          to use the <code>gh-pages</code> branch\n        </p>\n\n        <p>\n          <img src={ghPagesSrc} alt=\"gh-pages\" width={400} />\n        </p>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#github-pages-https-pagesgithubcom`,\n      },\n      {\n        name: `[Medium] So you want to host your Single Page React App on GitHub Pages?`,\n        url: `https://itnext.io/so-you-want-to-host-your-single-age-react-app-on-github-pages-a826ab01e48`,\n      },\n\n      {\n        name: `[Medium] Deploying React Applications to Github Pages`,\n        url: `https://medium.com/the-andela-way/how-to-deploy-your-react-application-to-github-pages-in-less-than-5-minutes-8c5f665a2d2a`,\n      },\n\n      {\n        name: `[GitHub] Deploying a React App* to GitHub Pages`,\n        url: `https://github.com/gitname/react-gh-pages`,\n      },\n\n      {\n        name: `How to deploy a create react app to Github pages`,\n        url: `https://reactgo.com/deploy-react-app-github-pages/`,\n      },\n\n      {\n        name: `[Medium] React-router problem with gh-pages`,\n        url: `https://medium.com/@Dragonza/react-router-problem-with-gh-pages-c93a5e243819`,\n      },\n\n      {\n        name: `[GitHub] Gh-pages deployment problems with react-router`,\n        url: `https://github.com/facebook/create-react-app/issues/1765`,\n      },\n    ],\n  },\n  {\n    question: `How to deploy to Heroku?`,\n    answer: (\n      <div>\n        <p>\n          <a href=\"https://devcenter.heroku.com/articles/heroku-cli\">\n            Download and install <code>heroku</code>\n          </a>\n        </p>\n\n        <p>\n          Create an Heroku app using <code>create-react-app-buildpack</code>\n        </p>\n\n        <Code language=\"bash\">\n          heroku create frontend-tricks-web -b\n          https://github.com/mars/create-react-app-buildpack.git\n        </Code>\n\n        <p>Deploy</p>\n\n        <Code language=\"bash\">git push heroku master</Code>\n\n        <p>Open website</p>\n\n        <Code language=\"bash\">heroku open</Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Heroku] Deploying React with Zero Configuration`,\n        url: `https://blog.heroku.com/deploying-react-with-zero-configuration`,\n      },\n      {\n        name: `[GitHub] Heroku Buildpack for create-react-app`,\n        url: `https://github.com/mars/create-react-app-buildpack`,\n      },\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#heroku-https-wwwherokucom`,\n      },\n    ],\n  },\n  {\n    question: `How to create a staging build (with customizing environment variables)?`,\n    answer: (\n      <div>\n        <p>\n          Create a file called <code>.env.staging</code> in root project\n          directory\n        </p>\n\n        <Code language=\"yaml\">\n          {`NODE_ENV = \"staging\"\nREACT_APP_BASE_URL=http://127.0.0.1:1333`}\n        </Code>\n\n        <p>\n          Install <code>env-cmd</code>\n        </p>\n\n        <Code language=\"bash\">yarn add -D env-cmd</Code>\n\n        <p>\n          Add <code>build:staging</code> script to <code>package.json</code>\n        </p>\n\n        <Code language=\"json\">\n          {`{\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"build:staging\": \"env-cmd -f .env.staging yarn build\"\n  }\n}`}\n        </Code>\n\n        <p>Create a build for staging</p>\n\n        <Code language=\"bash\">yarn build:staging</Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Create React App] Customizing Environment Variables for Arbitrary Build Environments`,\n        url: `https://create-react-app.dev/docs/deployment#customizing-environment-variables-for-arbitrary-build-environments`,\n      },\n      {\n        name: `[DEV] Managing .env variables for provisional builds with Create React App`,\n        url: `https://dev.to/jam3/managing-env-variables-for-provisional-builds-h37`,\n      },\n      {\n        name: `[GitHub] env-cmd`,\n        url: `https://github.com/toddbluhm/env-cmd`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport questions from './questions';\n\nexport const Deployment1Component: FC = () => (\n  <QuestionPage title=\"Deployment 1\" questions={questions} />\n);\n\nconst Deployment1 = memo(Deployment1Component);\nexport default Deployment1;\n"],"sourceRoot":""}