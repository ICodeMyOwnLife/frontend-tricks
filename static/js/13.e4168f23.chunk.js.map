{"version":3,"sources":["questions/css/FlexOverflow1/styles.module.scss","components/Question/index.tsx","components/Question/styles.module.scss","questions/css/FlexOverflow1/questions.tsx","questions/css/FlexOverflow1/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss"],"names":["module","exports","Question","memo","title","questions","children","className","classes","Container","Title","Content","Questions","map","index","question","answer","references","key","Index","Answer","length","References","name","url","href","target","rel","displayName","Code","language","FlexOverflow1Impl","LeftBar","RightBar","LeftColumn","RightColumn","LongBlock","FlexOverflow1","style","okaidia","classnames"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,SAAW,yBAAyB,WAAa,2BAA2B,YAAc,4BAA4B,UAAY,4B,gCCD5N,qCA4CMC,EAAWC,eAzC8B,SAAC,GAAD,IAC7CC,EAD6C,EAC7CA,MACAC,EAF6C,EAE7CA,UACAC,EAH6C,EAG7CA,SAH6C,OAK7C,yBAAKC,UAAWC,IAAQC,WACtB,wBAAIF,UAAWC,IAAQE,OAAQN,GAC/B,yBAAKG,UAAWC,IAAQG,SAAUL,GAClC,yBAAKC,UAAWC,IAAQI,WACtB,yCACA,6BACGP,EAAUQ,IAAI,WAAmCC,GAAnC,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,WAArB,OAEb,6BAASC,IAAKJ,GACZ,6BAASP,UAAWC,IAAQN,UAC1B,0BAAMK,UAAWC,IAAQW,OAAQL,EAAQ,EAAzC,KADF,IACuDC,GAGvD,yBAAKR,UAAWC,IAAQY,QAASJ,GAEhCC,GAAcA,EAAWI,QACxB,yBAAKd,UAAWC,IAAQc,YACtB,0CACA,4BACGL,EAAWJ,IAAI,gBAAGU,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACd,wBAAIN,IAAKM,GACP,uBAAGC,KAAMD,EAAKE,OAAO,SAASC,IAAI,uBAC/BJ,gBAezBrB,EAAS0B,YAAc,WACR1B,O,mBC7CfF,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,QAAU,wBAAwB,UAAY,0BAA0B,SAAW,yBAAyB,MAAQ,sBAAsB,OAAS,uBAAuB,WAAa,6B,4ECuC9PI,EApCmB,CAChC,CACEU,SAAS,+DACTC,OACE,6BACE,uDAC2B,2CAD3B,OACsD,IACpD,6CAFF,iBAEwC,4CAFxC,8BAMA,kBAACa,EAAA,EAAD,CAAMC,SAAS,QAAf,uCAMA,4DACgC,2CADhC,OAC2D,IACzD,6CAFF,4BAEoD,IAClD,2CAHF,8BAGoD,IAClD,0CAJF,0BAI8C,yCAJ9C,KAOA,kBAACD,EAAA,EAAD,CAAMC,SAAS,QAAf,0E,kBC5BR,gDAKO,IAAMC,EAAwB,kBACnC,kBAAC7B,EAAA,EAAD,CAAUE,MAAM,kBAAkBC,UAAWA,GAC3C,yBAAKE,UAAWC,IAAQC,WACtB,yBAAKF,UAAWC,IAAQwB,UACxB,yBAAKzB,UAAWC,IAAQyB,UACtB,yBAAK1B,UAAWC,IAAQ0B,aACxB,yBAAK3B,UAAWC,IAAQ2B,aACtB,yBAAK5B,UAAWC,IAAQ4B,iBAO5BC,EAAgBlC,eAAK4B,GAC3BM,EAAcT,YAAc,gBACbS,a,gCCrBf,wEAmBMR,EAAO1B,eAb0B,SAAC,GAAD,IACrCI,EADqC,EACrCA,UACAD,EAFqC,EAErCA,SAFqC,IAGrCgC,aAHqC,MAG7BC,IAH6B,EAIrCT,EAJqC,EAIrCA,SAJqC,OAMrC,yBAAKvB,UAAWiC,IAAWhC,IAAQqB,KAAMtB,IACvC,kBAAC,IAAD,CAAmBuB,SAAUA,EAAUQ,MAAOA,GAC3ChC,MAMPuB,EAAKD,YAAc,OACJC,O,mBCpBf7B,EAAOC,QAAU,CAAC,KAAO","file":"static/js/13.e4168f23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__P5lBp\",\"LeftBar\":\"styles_LeftBar__1xNdg\",\"RightBar\":\"styles_RightBar__26hl-\",\"LeftColumn\":\"styles_LeftColumn__2-UjH\",\"RightColumn\":\"styles_RightColumn__1QpUR\",\"LongBlock\":\"styles_LongBlock__38LCS\"};","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to prevent flex items from overflowing a flex container?`,\n    answer: (\n      <div>\n        <p>\n          For fixed-with item: Set <code>flex-grow</code> and{' '}\n          <code>flex-shrink</code> to 0 and set <code>flex-basis</code> to the\n          width of the item:\n        </p>\n\n        <Code language=\"scss\">\n          {`.LeftColumn {\n  flex: 0 0 64px;\n}`}\n        </Code>\n\n        <p>\n          For overflow-hidden item: Set <code>flex-grow</code> and{' '}\n          <code>flex-shrink</code> to a positive value, set{' '}\n          <code>min-width</code> to a finite value, and set{' '}\n          <code>overflow</code> to a value other than <code>visible</code>:\n        </p>\n\n        <Code language=\"scss\">\n          {`.RightColumn {\n  flex: 1;\n  min-width: 0;\n  overflow-x: auto;\n}`}\n        </Code>\n      </div>\n    ),\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport Question from 'components/Question';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const FlexOverflow1Impl: FC = () => (\n  <Question title=\"Flew Overflow 1\" questions={questions}>\n    <div className={classes.Container}>\n      <div className={classes.LeftBar} />\n      <div className={classes.RightBar}>\n        <div className={classes.LeftColumn} />\n        <div className={classes.RightColumn}>\n          <div className={classes.LongBlock} />\n        </div>\n      </div>\n    </div>\n  </Question>\n);\n\nconst FlexOverflow1 = memo(FlexOverflow1Impl);\nFlexOverflow1.displayName = 'FlexOverflow1';\nexport default FlexOverflow1;\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};"],"sourceRoot":""}