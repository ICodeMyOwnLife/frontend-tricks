{"version":3,"sources":["questions/dom/ExcludedInput1/styles.module.scss","questions/dom/ExcludedInput1/questions.tsx","questions/dom/ExcludedInput1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["module","exports","questions","question","answer","Code","language","references","name","url","ExcludedInput1Impl","useState","name1","setName1","name2","setName2","name3","setName3","query","setQuery","handleSubmit","useCallback","e","preventDefault","formData","FormData","target","searchParams","URLSearchParams","toString","Question","title","onSubmit","className","classes","InputLine","InputGroup","htmlFor","type","id","value","onChange","InputOnly","ExcludedInput1","memo","displayName","children","Container","Title","Content","Questions","map","index","key","Index","Answer","length","References","href","rel","style","okaidia","classnames","_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","TypeError"],"mappings":"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","file":"static/js/11.33a4d296.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputLine\":\"styles_InputLine__3Yc-3\",\"InputGroup\":\"styles_InputGroup__14Cov\",\"InputOnly\":\"styles_InputOnly__dVw7v\"};","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: 'How to stop an input field in a form from being submitted?',\n    answer: (\n      <div>\n        <p>\n          Using inputs without <code>name</code> attribute\n        </p>\n        <Code language=\"markup\">\n          {`<!-- This input value will be included in form data because its name attribute is set -->\n<input type=\"text\" id=\"text\" name=\"text\" />\n\n<!-- This input value will not be included in form data because its name attribute is not set -->\n<input type=\"number\" id=\"number\" />\n`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Stack Overflow] Stop an input field in a form from being submitted`,\n        url: `https://stackoverflow.com/questions/3008035/stop-an-input-field-in-a-form-from-being-submitted`,\n      },\n      {\n        name: `[Stack Overflow] How do I exclude certain form fields upon submission of the form without disabling the field`,\n        url: `https://stackoverflow.com/questions/4869987/how-do-i-exclude-certain-form-fields-upon-submission-of-the-form-without-disabli/20877611`,\n      },\n    ],\n  },\n  {\n    question: 'How to get form data?',\n    answer: (\n      <div>\n        <p>\n          Using <code>FormData</code>\n        </p>\n        <Code language=\"typescript\">\n          {`const formData = new FormData(form);\nconst searchParams = new URLSearchParams(formData);\nconsole.log(searchParams.toString());`}\n        </Code>\n        <p>\n          Using <code>jQuery.serialize()</code> or{' '}\n          <code>jQuery.serializeArray()</code>\n        </p>\n        <Code language=\"typescript\">\n          {`console.log($form.serialize());\nconsole.log($form.serializeArray());`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] FormData`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/FormData`,\n      },\n      {\n        name: `[MDN] Using FormData Objects`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects`,\n      },\n      {\n        name: `[jQuery] .serialize()`,\n        url: `https://api.jquery.com/serialize/`,\n      },\n      {\n        name: `[jQuery] .serializeArray()`,\n        url: `https://api.jquery.com/serializeArray/`,\n      },\n      {\n        name: `[Stack Overflow] How can I get form data with JavaScript/jQuery?`,\n        url: `https://stackoverflow.com/questions/2276463/how-can-i-get-form-data-with-javascript-jquery`,\n      },\n      {\n        name: `[Stack Overflow] JavaScript - Getting HTML form values`,\n        url: `https://stackoverflow.com/questions/3547035/javascript-getting-html-form-values`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState, FormEvent, useCallback } from 'react';\nimport Question from 'components/Question';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const ExcludedInput1Impl: FC = () => {\n  const [name1, setName1] = useState('');\n  const [name2, setName2] = useState('');\n  const [name3, setName3] = useState('');\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = useCallback((e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const searchParams = new URLSearchParams(formData as any);\n    setQuery(searchParams.toString());\n  }, []);\n\n  return (\n    <Question title=\"Excluded Input 1\" questions={questions}>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div className={classes.InputLine}>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"name1\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name1\"\n                value={name1}\n                onChange={e => setName1(e.target.value)}\n              />\n            </div>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"input1\">Text</label>\n              <input type=\"text\" id=\"input1\" name={name1} />\n            </div>\n          </div>\n\n          <div className={classes.InputLine}>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"name2\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name2\"\n                value={name2}\n                onChange={e => setName2(e.target.value)}\n              />\n            </div>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"input2\">Number</label>\n              <input type=\"number\" name={name2} />\n            </div>\n          </div>\n\n          <div className={classes.InputLine}>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"name3\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name3\"\n                value={name3}\n                onChange={e => setName3(e.target.value)}\n              />\n            </div>\n            <div className={classes.InputOnly}>\n              <label htmlFor=\"input3\">\n                <input type=\"checkbox\" id=\"input3\" name={name3} value={1} />\n                Checkbox\n              </label>\n            </div>\n          </div>\n          <div className={classes.InputOnly}>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n        {query && <pre>{query}</pre>}\n      </div>\n    </Question>\n  );\n};\n\nconst ExcludedInput1 = memo(ExcludedInput1Impl);\nExcludedInput1.displayName = 'ExcludedInput1';\nexport default ExcludedInput1;\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}