{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","questions/dom/ExcludedInput1/styles.module.scss","questions/dom/ExcludedInput1/questions.tsx","questions/dom/ExcludedInput1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","ExcludedInput1Impl","useState","name1","setName1","name2","setName2","name3","setName3","query","setQuery","handleSubmit","useCallback","e","preventDefault","formData","FormData","searchParams","URLSearchParams","toString","onSubmit","InputLine","InputGroup","htmlFor","type","id","value","onChange","InputOnly","ExcludedInput1"],"mappings":"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","file":"static/js/dom__ExcludedInput1.61d7dde2.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputLine\":\"styles_InputLine__3Yc-3\",\"InputGroup\":\"styles_InputGroup__14Cov\",\"InputOnly\":\"styles_InputOnly__dVw7v\"};","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: 'How to stop an input field in a form from being submitted?',\n    answer: (\n      <div>\n        <p>\n          Using inputs without <code>name</code> attribute\n        </p>\n        <Code language=\"markup\">\n          {`<!-- This input value will be included in form data because its name attribute is set -->\n<input type=\"text\" id=\"text\" name=\"text\" />\n\n<!-- This input value will not be included in form data because its name attribute is not set -->\n<input type=\"number\" id=\"number\" />\n`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Stack Overflow] Stop an input field in a form from being submitted`,\n        url: `https://stackoverflow.com/questions/3008035/stop-an-input-field-in-a-form-from-being-submitted`,\n      },\n      {\n        name: `[Stack Overflow] How do I exclude certain form fields upon submission of the form without disabling the field`,\n        url: `https://stackoverflow.com/questions/4869987/how-do-i-exclude-certain-form-fields-upon-submission-of-the-form-without-disabli/20877611`,\n      },\n    ],\n  },\n  {\n    question: 'How to get form data?',\n    answer: (\n      <div>\n        <p>\n          Using <code>FormData</code>\n        </p>\n        <Code language=\"typescript\">\n          {`const formData = new FormData(form);\nconst searchParams = new URLSearchParams(formData);\nconsole.log(searchParams.toString());`}\n        </Code>\n        <p>\n          Using <code>jQuery.serialize()</code> or{' '}\n          <code>jQuery.serializeArray()</code>\n        </p>\n        <Code language=\"typescript\">\n          {`console.log($form.serialize());\nconsole.log($form.serializeArray());`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] FormData`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/FormData`,\n      },\n      {\n        name: `[MDN] Using FormData Objects`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects`,\n      },\n      {\n        name: `[jQuery] .serialize()`,\n        url: `https://api.jquery.com/serialize/`,\n      },\n      {\n        name: `[jQuery] .serializeArray()`,\n        url: `https://api.jquery.com/serializeArray/`,\n      },\n      {\n        name: `[Stack Overflow] How can I get form data with JavaScript/jQuery?`,\n        url: `https://stackoverflow.com/questions/2276463/how-can-i-get-form-data-with-javascript-jquery`,\n      },\n      {\n        name: `[Stack Overflow] JavaScript - Getting HTML form values`,\n        url: `https://stackoverflow.com/questions/3547035/javascript-getting-html-form-values`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState, FormEvent, useCallback } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const ExcludedInput1Impl: FC = () => {\n  const [name1, setName1] = useState('');\n  const [name2, setName2] = useState('');\n  const [name3, setName3] = useState('');\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = useCallback((e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    const searchParams = new URLSearchParams(formData as any);\n    setQuery(searchParams.toString());\n  }, []);\n\n  return (\n    <QuestionPage title=\"Excluded Input 1\" questions={questions}>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div className={classes.InputLine}>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"name1\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name1\"\n                value={name1}\n                onChange={e => setName1(e.target.value)}\n              />\n            </div>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"input1\">Text</label>\n              <input type=\"text\" id=\"input1\" name={name1} />\n            </div>\n          </div>\n\n          <div className={classes.InputLine}>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"name2\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name2\"\n                value={name2}\n                onChange={e => setName2(e.target.value)}\n              />\n            </div>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"input2\">Number</label>\n              <input type=\"number\" name={name2} />\n            </div>\n          </div>\n\n          <div className={classes.InputLine}>\n            <div className={classes.InputGroup}>\n              <label htmlFor=\"name3\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name3\"\n                value={name3}\n                onChange={e => setName3(e.target.value)}\n              />\n            </div>\n            <div className={classes.InputOnly}>\n              <label htmlFor=\"input3\">\n                <input type=\"checkbox\" id=\"input3\" name={name3} value={1} />\n                Checkbox\n              </label>\n            </div>\n          </div>\n          <div className={classes.InputOnly}>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n        {query && <pre>{query}</pre>}\n      </div>\n    </QuestionPage>\n  );\n};\n\nconst ExcludedInput1 = memo(ExcludedInput1Impl);\nExcludedInput1.displayName = 'ExcludedInput1';\nexport default ExcludedInput1;\n"],"sourceRoot":""}