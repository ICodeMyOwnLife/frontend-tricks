(window.webpackJsonpfrontend=window.webpackJsonpfrontend||[]).push([[36],{133:function(e,n,t){"use strict";var a=t(0),o=t.n(a),r=t(129),l=t(38),c=t(124),i=t(25),s=t(121),u=t(122),m=t(123),p=t(39),g=t(65),d=t(47),f=Object(g.a)((function(e){return{Question:{fontWeight:500},Answer:{marginTop:e.spacing(1.5),padding:0,fontSize:14,backgroundColor:d.a[50],border:"1px solid ".concat(d.a[400]),borderRadius:6,"& p":{padding:e.spacing(0,2.5)},"& ol,ul":{margin:e.spacing(1.5,0)},"& img":{maxWidth:"100%"}},References:{margin:e.spacing(3,0,0),"& ol":{marginTop:e.spacing(1)},"& li":{fontSize:14,fontWeight:500,marginBottom:e.spacing(1)}}}})),b=Object(a.memo)((function(e){var n=e.index,t=e.question,a=e.answer,c=e.references,g=f(),d=Object(p.a)(!1),b=Object(i.a)(d,2),w=b[0],v=b[1];return o.a.createElement(o.a.Fragment,null,o.a.createElement(s.a,{button:!0,onClick:v},o.a.createElement(u.a,{classes:{primary:g.Question}},n,". ",t)),o.a.createElement(m.a,{in:w,timeout:"auto"},o.a.createElement(r.a,{className:g.Answer},a),!!c&&c.length&&o.a.createElement(r.a,{className:g.References},o.a.createElement(l.a,{variant:"h4"},"References"),o.a.createElement("ol",null,c.map((function(e){var n=e.name,t=e.url;return o.a.createElement("li",{key:t},o.a.createElement("a",{href:t,target:"_blank",rel:"noopener noreferrer"},n))}))))))}));b.displayName="QuestionItem";var w=b,v=Object(g.a)((function(e){return{Container:{marginTop:e.spacing(4)},Content:{marginTop:e.spacing(2.5)},Questions:{marginTop:e.spacing(4),"& code":{fontFamily:"'Courier New', Courier, monospace",fontSize:14,fontWeight:600,color:"rgb(219, 104, 27)"}}}})),E=Object(a.memo)((function(e){var n=e.title,t=e.questions,a=e.children,i=v();return o.a.createElement(r.a,{className:i.Container},o.a.createElement(l.a,{variant:"h2"},n),o.a.createElement(r.a,{className:i.Content},a),o.a.createElement(r.a,{className:i.Questions},o.a.createElement(l.a,{variant:"h3"},"Questions"),o.a.createElement(r.a,null,o.a.createElement(c.a,null,t.map((function(e,n){return o.a.createElement(w,Object.assign({key:n,index:n+1},e))}))))))}));E.displayName="QuestionPage";n.a=E},134:function(e,n,t){"use strict";var a=t(0),o=t.n(a),r=t(136),l=t.n(r),c=t(464),i=t(450),s=t(135),u=t.n(s),m=Object(a.memo)((function(e){var n=e.className,t=e.children,a=e.style,r=void 0===a?i.a:a,s=e.language;return o.a.createElement("div",{className:l()(u.a.Code,n)},o.a.createElement(c.a,{language:s,style:r},t))}));m.displayName="Code",n.a=m},135:function(e,n,t){e.exports={Code:"styles_Code__2Axvp"}},493:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(133),l=t(134),c=[{question:"How to write webpack config files in TypeScript?",answer:o.a.createElement("div",null,o.a.createElement("p",null,"Install ",o.a.createElement("code",null,"typescript"),", ",o.a.createElement("code",null,"ts-node")," and relevant type definitions"),o.a.createElement(l.a,{language:"bash"},"yarn add typescript ts-node @types/node @types/webpack @types/webpack-dev-server"),o.a.createElement("p",null,"Add ",o.a.createElement("code",null,"tsconfig.json")," in the root project directory with the"," ",o.a.createElement("code",null,"module")," entry is set to ",o.a.createElement("code",null,"commonjs")," and"," ",o.a.createElement("code",null,"esModuleInterop")," entry is set to ",o.a.createElement("code",null,"true")),o.a.createElement(l.a,{language:"json"},'{\n  "compilerOptions": {\n    "target": "es5",\n    "module": "commonjs",\n    "lib": ["esnext", "dom"],\n    "sourceMap": true,\n    "outDir": "./build",\n    "downlevelIteration": true,\n    "strict": true,\n    "noUnusedLocals": true,\n    "moduleResolution": "node",\n    "baseUrl": "./src",\n    "esModuleInterop": true,\n    "allowSyntheticDefaultImports": true,\n    "skipLibCheck": true,\n    "skipDefaultLibCheck": true\n  }\n}'),o.a.createElement("p",null,"Write webpack config files in TypeScript"),o.a.createElement(l.a,{language:"typescript"},"// webpack.config.development.ts\nimport { HotModuleReplacementPlugin } from 'webpack';\nimport Dotenv from 'dotenv-webpack';\nimport merge from 'webpack-merge';\nimport common from './webpack.config.common';\n\nconst dotenvPlugin = new Dotenv({ path: './.env.development' });\nconst hotModuleReplacementPlugin = new HotModuleReplacementPlugin({});\n\nconst config = merge(common, {\n  mode: 'development',\n  devtool: 'cheap-eval-source-map',\n  devServer: {\n    contentBase: './dist',\n    hot: true,\n    port: 4000,\n    open: true,\n    openPage: 'samples/blank.html',\n  },\n  plugins: [dotenvPlugin, hotModuleReplacementPlugin],\n});\n\nexport default config;\n\n\n// webpack.config.production.ts\nimport { Plugin } from 'webpack';\nimport merge from 'webpack-merge';\nimport { CleanWebpackPlugin } from 'clean-webpack-plugin';\nimport Dotenv from 'dotenv-webpack';\nimport common from './webpack.config.common';\n\nconst cleanPlugin = new CleanWebpackPlugin({ verbose: true }) as Plugin;\nconst dotenvPlugin = new Dotenv({ path: './.env.production' });\n\nconst config = merge(common, {\n  mode: 'production',\n  plugins: [cleanPlugin, dotenvPlugin],\n});\n\nexport default config;\n"),o.a.createElement("p",null,"Add scripts to ",o.a.createElement("code",null,"package.json")),o.a.createElement(l.a,{language:"json"},'{\n  "scripts": {\n    "start": "webpack-dev-server --config webpack.config.development.ts",\n    "build": "webpack --config webpack.config.production.ts"\n  }\n}')),references:[{name:"[webpack] Configuration Languages",url:"https://webpack.js.org/configuration/configuration-languages/#typescript"}]},{question:"How to resolve module using absolute paths?",answer:o.a.createElement("div",null,o.a.createElement("p",null,"Install ",o.a.createElement("code",null,"tsconfig-paths-webpack-plugin")),o.a.createElement(l.a,{language:"bash"},"yarn add tsconfig-paths-webpack-plugin"),o.a.createElement("p",null,"Config Webpack to use ",o.a.createElement("code",null,"tsconfig-paths-webpack-plugin")),o.a.createElement(l.a,{language:"typescript"},"import path from 'path';\nimport { Configuration } from 'webpack';\nimport TsconfigPathsPlugin from 'tsconfig-paths-webpack-plugin';\n\nconst tsConfigPathsPlugin = new TsconfigPathsPlugin();\n\nconst config: Configuration = {\n  entry: { index: './src/index.ts' },\n  output: {\n    path: path.resolve('dist'),\n    filename: 'seller-wallet-widget.js',\n  },\n  resolve: {\n    extensions: ['.ts', '.js'],\n    plugins: [tsConfigPathsPlugin],\n  },\n};\n\nexport default config;"),o.a.createElement("p",null,"Config ",o.a.createElement("code",null,"baseUrl")," in ",o.a.createElement("code",null,"tsconfig.json")),o.a.createElement(l.a,{language:"json"},'{\n  "compilerOptions": {\n    "module": "commonjs",\n    "moduleResolution": "node",\n    "baseUrl": "./src",\n  }\n}'),o.a.createElement("p",null,"Replace relative imports with absolute imports"),o.a.createElement(l.a,{language:"typescript"},"import Widget from 'views/widget';\nimport WalletService from 'services/walletService';\nimport debug from 'services/debug';")),references:[{name:"[GitHub] tsconfig-paths-webpack-plugin",url:"https://github.com/dividab/tsconfig-paths-webpack-plugin"}]}];t.d(n,"Languages1Component",(function(){return i}));var i=function(){return o.a.createElement(r.a,{title:"Languages 1",questions:c})},s=Object(a.memo)(i);s.displayName="Languages1";n.default=s}}]);
//# sourceMappingURL=webpack__Languages1.5a3c7888.chunk.js.map