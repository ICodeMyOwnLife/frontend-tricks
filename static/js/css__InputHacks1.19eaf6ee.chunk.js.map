{"version":3,"sources":["components/References/index.tsx","components/Todos/index.tsx","components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/PageLayout/styles.ts","components/PageLayout/index.tsx","components/CodeViewer/styles.ts","components/CodeViewer/index.tsx","components/Section/styles.ts","components/Section/index.tsx","../node_modules/@material-ui/core/esm/Grid/Grid.js","pages/css/InputHacks1/questions.tsx","pages/css/InputHacks1/styles.ts","pages/css/InputHacks1/SearchInput.tsx","pages/css/InputHacks1/Checkbox.tsx","pages/css/InputHacks1/RadioButton.tsx","pages/css/InputHacks1/index.tsx"],"names":["References","memo","className","references","variant","map","name","url","key","href","target","rel","displayName","Todos","todos","Box","Typography","todo","useStyles","makeStyles","theme","Question","fontWeight","HiddenContent","marginBottom","spacing","Answer","marginTop","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","BottomBox","paddingBottom","borderBottom","BottomBoxTitle","QuestionItem","index","question","answer","classes","useToggle","open","toggleOpen","hasReferences","length","hasTodos","showBottomBox","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","createStyles","root","questions","fontFamily","color","classNamePrefix","QuestionPage","children","props","PageLayout","List","questionInfo","content","title","clsx","CodeViewer","style","okaidia","language","Section","Title","titleVariant","titleClassName","Paper","elevation","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","undefined","parse","parseFloat","concat","String","replace","Grid","React","forwardRef","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","createElement","_extends","StyledGrid","withStyles","boxSizing","display","flexWrap","width","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","up","generateGrid","boxLabel","marginRight","fontFeatureSettings","lineHeight","checkbox","radio","searchInputGroup","position","searchButton","height","right","borderColor","cursor","outline","boxShadow","searchInput","SearchInput","label","id","placeholder","htmlFor","type","tabIndex","Checkbox","RadioButton","InputHacks1Component","InputHacks1"],"mappings":"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","file":"static/js/css__InputHacks1.19eaf6ee.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const ReferencesComponent: FC<ReferencesProps> = ({\n  className,\n  references,\n}) => (\n  <Box className={className}>\n    <Typography variant=\"h5\">References</Typography>\n    <ol>\n      {references!.map(({ name, url }) => (\n        <li key={url}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst References = memo(ReferencesComponent);\nReferences.displayName = 'References';\nexport default References;\n\nexport interface ReferencesProps {\n  className?: string;\n  references: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const TodosComponent: FC<TodosProps> = ({ className, todos }) => (\n  <Box>\n    <Typography className={className} variant=\"h5\">\n      Todos\n    </Typography>\n    <ol>\n      {todos!.map(todo => (\n        <li key={todo}>{todo}</li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst Todos = memo(TodosComponent);\nTodos.displayName = 'Todos';\nexport default Todos;\n\nexport interface TodosProps {\n  className?: string;\n  todos: string[];\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  HiddenContent: {\n    marginBottom: theme.spacing(2),\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  BottomBox: {\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${grey[400]}`,\n\n    '& ol,ul': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  BottomBoxTitle: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { ListItem, ListItemText, Collapse, Box } from '@material-ui/core';\nimport { useToggle } from 'cb-hooks';\nimport References from 'components/References';\nimport Todos from 'components/Todos';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n  todos,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const hasReferences = !!(references && references.length);\n  const hasTodos = !!(todos && todos.length);\n  const showBottomBox = hasReferences || hasTodos;\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.HiddenContent}>\n          <Box className={classes.Answer}>{answer}</Box>\n\n          {showBottomBox && (\n            <Box className={classes.BottomBox}>\n              {hasReferences && (\n                <References\n                  className={classes.BottomBoxTitle}\n                  references={references!}\n                />\n              )}\n\n              {hasTodos && (\n                <Todos className={classes.BottomBoxTitle} todos={todos!} />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    questions: {\n      marginTop: spacing(4),\n      '& code': {\n        fontFamily: `'Courier New', Courier, monospace`,\n        fontSize: 14,\n        fontWeight: 600,\n        color: `rgb(219, 104, 27)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'QuestionPage' });\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport PageLayout from 'components/PageLayout';\nimport useStyles from './styles';\n\nexport const QuestionPageComponent: FC<QuestionPageProps> = ({\n  questions,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PageLayout {...props}>\n      {children}\n      <Box className={classes.questions}>\n        <Typography variant=\"h4\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageComponent);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  className?: string;\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      marginTop: spacing(4),\n    },\n    content: {\n      marginTop: spacing(2.5),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'PageLayout' });\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const PageLayoutComponent: FC<PageLayoutProps> = ({\n  className,\n  title,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box className={classes.content}>{children}</Box>\n    </Box>\n  );\n};\n\nconst PageLayout = memo(PageLayoutComponent);\nPageLayout.displayName = 'PageLayout';\nexport default PageLayout;\n\nexport interface PageLayoutProps {\n  className?: string;\n  title: string;\n  children: ReactNode;\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  CodeViewer: {\n    '& pre': {\n      margin: '0 !important',\n      borderRadius: 6,\n    },\n\n    '&~$CodeViewer': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport useStyles from './styles';\n\nexport const CodeViewerComponent: FC<CodeViewerProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.CodeViewer, className)}>\n      <SyntaxHighlighter language={language} style={style}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nconst CodeViewer = memo(CodeViewerComponent);\nCodeViewer.displayName = 'CodeViewer';\nexport default CodeViewer;\n\nexport interface CodeViewerProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: CodeViewerLanguage;\n}\n\nexport type CodeViewerLanguage =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Section: {\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(3),\n  },\n  Title: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport { Paper, Typography } from '@material-ui/core';\nimport { TypographyProps } from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nexport const SectionComponent: FC<SectionProps> = ({\n  className,\n  title,\n  titleVariant = 'h6',\n  titleClassName,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={clsx(classes.Section, className)} elevation={0}>\n      <Typography\n        className={clsx(classes.Title, titleClassName)}\n        variant={titleVariant}\n      >\n        {title}\n      </Typography>\n      {children}\n    </Paper>\n  );\n};\n\nconst Section = memo(SectionComponent);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  className?: string;\n  title: string;\n  titleVariant?: TypographyProps['variant'];\n  titleClassName?: string;\n  children?: ReactNode;\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport CodeViewer from 'components/CodeViewer';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to create custom checkboxes and radio buttons?`,\n    answer: (\n      <div>\n        <p>\n          Place a <code>label</code> next to an{' '}\n          <code>input[type=checkbox]</code> or <code>input[type=radio]</code>\n        </p>\n\n        <CodeViewer language=\"tsx\">\n          {`<div>\n  <input\n    className={clsx(classes.checkbox, className)}\n    type=\"checkbox\"\n    id={id}\n    {...props}\n  />\n  <label className={classes.boxLabel} htmlFor={id}>\n    {label}\n  </label>\n</div>\n\n<div>\n  <input\n    className={clsx(classes.radio, className)}\n    type=\"radio\"\n    id={id}\n    {...props}\n  />\n  <label className={classes.boxLabel} htmlFor={id}>\n    {label}\n  </label>\n</div>`}\n        </CodeViewer>\n\n        <p>\n          Use CSS to hide the <code>input</code>, use <code>::before</code>{' '}\n          pseudo-element of the <code>label</code> to show the icons and{' '}\n          <code>:checked</code> pseudo-class to switch between 2 states\n        </p>\n\n        <CodeViewer language=\"css\">\n          {`.InputHacks1-boxLabel-387 {\n  display: inline-flex;\n  align-items: center;\n}\n.InputHacks1-boxLabel-387::before {\n  font-size: 1.5rem;\n  font-family: 'Material Icons';\n  line-height: 1;\n  margin-right: 4px;\n  font-feature-settings: 'liga';\n}\n.InputHacks1-checkbox-388 {\n  display: none;\n}\n.InputHacks1-checkbox-388 + .InputHacks1-boxLabel-387::before {\n  content: 'check_box_outline_blank';\n}\n.InputHacks1-checkbox-388:checked + .InputHacks1-boxLabel-387::before {\n  content: 'check_box';\n}\n.InputHacks1-radio-389 {\n  display: none;\n}\n.InputHacks1-radio-389 + .InputHacks1-boxLabel-387::before {\n  content: 'radio_button_unchecked';\n}\n.InputHacks1-radio-389:checked + .InputHacks1-boxLabel-387::before {\n  content: 'radio_button_checked';\n}`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] :checked`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/:checked`,\n      },\n      {\n        name: `[CSS-TRICKS] :checked`,\n        url: `https://css-tricks.com/almanac/selectors/c/checked/`,\n      },\n      {\n        name: `[CSS-TRICKS] Stuff you can do with the “Checkbox Hack”`,\n        url: `https://css-tricks.com/the-checkbox-hack/`,\n      },\n    ],\n  },\n  {\n    question: `How to show search button when user start to type?`,\n    answer: (\n      <div>\n        <p>\n          Place the search button next to the <code>input</code>\n        </p>\n\n        <CodeViewer language=\"tsx\">\n          {`<div className={classes.searchInputGroup}>\n  <label htmlFor={id}>{label}:</label>\n  <input\n    className={clsx(classes.searchInput, className)}\n    id={id}\n    placeholder={placeholder}\n    {...props}\n  />\n  <button className={classes.searchButton} type=\"button\" tabIndex={0}>\n    search\n  </button>\n</div>`}\n        </CodeViewer>\n\n        <p>\n          Use <code>:placeholder-shown</code> pseudo-class of the{' '}\n          <code>input</code> to hide/show the search button\n        </p>\n\n        <CodeViewer language=\"css\">\n          {`.InputHacks1-searchButton-177 {\n  color: #888888;\n  right: 4px;\n  width: 30px;\n  cursor: pointer;\n  height: 30px;\n  display: none;\n  padding: 0;\n  position: absolute;\n  font-size: 1.25rem;\n  font-family: 'Material Icons';\n  line-height: 1;\n  border-color: transparent;\n  border-radius: 50%;\n  background-color: transparent;\n  font-feature-settings: 'liga';\n}\n.InputHacks1-searchInput-178 {\n  border: 1px solid #dcdcdc;\n  padding: 0px 40px 0px 12px;\n  flex-grow: 1;\n  line-height: 36px;\n}\n.InputHacks1-searchInput-178::placeholder {\n  color: #676767;\n}\n.InputHacks1-searchInput-178:not(:placeholder-shown) + .InputHacks1-searchButton-177 {\n  display: block;\n}`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] :placeholder-shown`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown`,\n      },\n      {\n        name: `[CSS-TRICKS] :placeholder-shown`,\n        url: `https://css-tricks.com/almanac/selectors/p/placeholder-shown/`,\n      },\n      {\n        name: `[CSS-TRICKS] Show Search Button when Search Field is Non-Empty`,\n        url: `https://css-tricks.com/show-search-button-when-search-field-is-non-empty/`,\n      },\n    ],\n  },\n  {\n    question: (\n      <span>\n        How to change to style the <code>label</code> when the\n        <code>input</code> is focused?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Use <code>:focus-within</code> pseudo-class on the wrapper element\n        </p>\n\n        <CodeViewer language=\"css\">\n          {`.InputHacks1-searchInputGroup-176 {\n  display: flex;\n  position: relative;\n  align-items: center;\n}\n.InputHacks1-searchInputGroup-176 label {\n  width: 60px;\n  margin-right: 8px;\n}\n.InputHacks1-searchInputGroup-176:focus-within label {\n  font-weight: bold;\n}`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] :focus-within`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within`,\n      },\n      {\n        name: `[CSS-TRICKS] :focus-within`,\n        url: `https://css-tricks.com/almanac/selectors/f/focus-within/`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    boxLabel: {\n      display: 'inline-flex',\n      alignItems: 'center',\n\n      '&::before': {\n        marginRight: spacing(0.5),\n        fontFamily: \"'Material Icons'\",\n        fontSize: '1.5rem',\n        fontFeatureSettings: \"'liga'\",\n        lineHeight: 1,\n      },\n    },\n    checkbox: {\n      display: 'none',\n\n      '& + $boxLabel::before': {\n        content: \"'check_box_outline_blank'\",\n      },\n\n      '&:checked + $boxLabel::before': {\n        content: \"'check_box'\",\n      },\n    },\n    radio: {\n      display: 'none',\n\n      '& + $boxLabel::before': {\n        content: \"'radio_button_unchecked'\",\n      },\n\n      '&:checked + $boxLabel::before': {\n        content: \"'radio_button_checked'\",\n      },\n    },\n    searchInputGroup: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n\n      '& label': {\n        width: 60,\n        marginRight: spacing(1),\n      },\n\n      '&:focus-within label': {\n        fontWeight: 'bold',\n      },\n    },\n    searchButton: {\n      position: 'absolute',\n      display: 'none',\n      width: 30,\n      height: 30,\n      right: 4,\n      padding: 0,\n      fontFamily: \"'Material Icons'\",\n      fontSize: '1.25rem',\n      fontFeatureSettings: \"'liga'\",\n      lineHeight: 1,\n      color: '#888888',\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      borderRadius: '50%',\n      cursor: 'pointer',\n\n      '&:hover, &:focus': {\n        backgroundColor: '#ededed',\n      },\n\n      '&:active': {\n        backgroundColor: '#dcdcdc',\n      },\n\n      '&:focus, &:active': {\n        outline: 'none',\n        boxShadow: 'none',\n      },\n    },\n    searchInput: {\n      flexGrow: 1,\n      padding: spacing(0, 5, 0, 1.5),\n      lineHeight: '36px',\n      border: '1px solid #dcdcdc',\n\n      '&::placeholder': {\n        color: '#676767',\n      },\n\n      '&:not(:placeholder-shown) + $searchButton': {\n        display: 'block',\n      },\n\n      '&:focus': {\n        borderColor: '#929292',\n        outline: 'none',\n        boxShadow: 'none',\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'InputHacks1' });\n\nexport default useStyles;\n","import React, { FC, memo, InputHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const SearchInputComponent: FC<SearchInputProps> = ({\n  label = 'Search',\n  id,\n  className,\n  placeholder = 'Type something to search',\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.searchInputGroup}>\n      <label htmlFor={id}>{label}:</label>\n      <input\n        className={clsx(classes.searchInput, className)}\n        id={id}\n        placeholder={placeholder}\n        {...props}\n      />\n      <button className={classes.searchButton} type=\"button\" tabIndex={0}>\n        search\n      </button>\n    </div>\n  );\n};\n\nconst SearchInput = memo(SearchInputComponent);\nSearchInput.displayName = 'SearchInput';\nexport default SearchInput;\n\nexport interface SearchInputProps\n  extends OmitFrom<InputHTMLAttributes<HTMLInputElement>, 'id'> {\n  label?: string;\n  id: string;\n}\n","import React, { FC, memo, InputHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const CheckboxComponent: FC<CheckboxProps> = ({\n  className,\n  label,\n  id,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <input\n        className={clsx(classes.checkbox, className)}\n        type=\"checkbox\"\n        id={id}\n        {...props}\n      />\n      <label className={classes.boxLabel} htmlFor={id}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nconst Checkbox = memo(CheckboxComponent);\nCheckbox.displayName = 'Checkbox';\nexport default Checkbox;\n\nexport interface CheckboxProps\n  extends OmitFrom<InputHTMLAttributes<HTMLInputElement>, 'id'> {\n  label: string;\n  id: string;\n}\n","import React, { FC, memo, InputHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const RadioButtonComponent: FC<RadioButtonProps> = ({\n  className,\n  label,\n  id,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <input\n        className={clsx(classes.radio, className)}\n        type=\"radio\"\n        id={id}\n        {...props}\n      />\n      <label className={classes.boxLabel} htmlFor={id}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nconst RadioButton = memo(RadioButtonComponent);\nRadioButton.displayName = 'RadioButton';\nexport default RadioButton;\n\nexport interface RadioButtonProps\n  extends OmitFrom<InputHTMLAttributes<HTMLInputElement>, 'id'> {\n  label: string;\n  id: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Grid } from '@material-ui/core';\nimport QuestionPage from 'components/QuestionPage';\nimport Section from 'components/Section';\nimport questions from './questions';\nimport useStyles from './styles';\nimport SearchInput from './SearchInput';\nimport Checkbox from './Checkbox';\nimport RadioButton from './RadioButton';\n\nexport const InputHacks1Component: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <QuestionPage\n      className={classes.root}\n      title=\"Input Hacks 1\"\n      questions={questions}\n    >\n      <Section title=\"Checkboxes and Radio Buttons\">\n        <Grid container spacing={3}>\n          <Grid item>\n            <Checkbox id=\"checkbox1\" label=\"Option 1\" />\n          </Grid>\n          <Grid item>\n            <Checkbox id=\"checkbox2\" label=\"Option 2\" />\n          </Grid>\n          <Grid item>\n            <Checkbox id=\"checkbox3\" label=\"Option 3\" />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item>\n            <RadioButton id=\"radio1\" label=\"Option 1\" name=\"group1\" />\n          </Grid>\n          <Grid item>\n            <RadioButton id=\"radio2\" label=\"Option 2\" name=\"group1\" />\n          </Grid>\n          <Grid item>\n            <RadioButton id=\"radio3\" label=\"Option 3\" name=\"group1\" />\n          </Grid>\n        </Grid>\n      </Section>\n\n      <Section title=\"Search Inputs\">\n        <Grid container direction=\"column\" spacing={3}>\n          <Grid item>\n            <SearchInput id=\"search1\" />\n          </Grid>\n          <Grid item>\n            <SearchInput id=\"search2\" />\n          </Grid>\n          <Grid item>\n            <SearchInput id=\"search3\" />\n          </Grid>\n        </Grid>\n      </Section>\n    </QuestionPage>\n  );\n};\n\nconst InputHacks1 = memo(InputHacks1Component);\nInputHacks1.displayName = 'InputHacks1';\nexport default InputHacks1;\n"],"sourceRoot":""}