{"version":3,"sources":["questions/js/Array1/styles.module.scss","components/TextInput/index.tsx","questions/js/Array1/questions.tsx","questions/js/Array1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Input/index.tsx","components/NumberInput/index.tsx","components/Input/styles.module.scss"],"names":["module","exports","TextInput","memo","onChange","props","handleChange","useCallback","e","target","value","Input","displayName","questions","question","answer","Code","language","Array1Impl","useState","text","setText","characters","useMemo","Array","from","length","setLength","fillValue","setFillValue","fillArray","fill","rangeEnd","setRangeEnd","range","_","idx","itemsString","setItemsString","uniqueArray","items","split","filter","Boolean","map","Number","Set","Question","title","className","classes","Section","label","JSON","stringify","NumberInput","Array1","children","Container","Title","Content","Questions","index","references","key","Index","Answer","References","name","url","href","rel","style","okaidia","classnames","_slicedToArray","arr","i","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","TypeError","_objectWithoutProperties","source","excluded","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","labelClassName","inputClassName","id","InputGroup","Label","htmlFor","type"],"mappings":"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","file":"static/js/7.95faf26a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"styles_Section__3KRs2\"};","import React, { FC, memo, ChangeEvent, useCallback } from 'react';\nimport Input, { InputProps } from 'components/Input';\n\nexport const TextInputImpl: FC<TextInputProps> = ({ onChange, ...props }) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => onChange && onChange(e.target.value),\n    [onChange],\n  );\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Input onChange={handleChange} {...props} />;\n};\n\nconst TextInput = memo(TextInputImpl);\nTextInput.displayName = 'TextInput';\nexport default TextInput;\n\nexport interface TextInputProps extends Omit<InputProps, 'onChange'> {\n  onChange?: (value: string) => void;\n}\n","import { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\nimport React from 'react';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to convert a string to an array of character?`,\n    answer: <Code language=\"tsx\">Array.from(text)</Code>,\n  },\n  {\n    question: `How to fill an array with values?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>Array.fill()</code> instance method\n        </p>\n        <Code language=\"tsx\">Array(length).fill(fillValue)</Code>\n\n        <p>\n          Use <code>Array.from()</code>\n        </p>\n        <Code language=\"tsx\">{`Array.from({ length }, () => fillValue)`}</Code>\n      </div>\n    ),\n  },\n  {\n    question: `How to generate range of numbers?`,\n    answer: (\n      <Code language=\"tsx\">{`Array.from({ length: rangeEnd }, (_, idx) => idx)`}</Code>\n    ),\n  },\n  {\n    question: `How to create an array of unique values?`,\n    answer: (\n      <Code language=\"tsx\">{`Array.from({ length: rangeEnd }, (_, idx) => idx)`}</Code>\n    ),\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState, useMemo } from 'react';\nimport Question from 'components/Question';\nimport TextInput from 'components/TextInput';\nimport NumberInput from 'components/NumberInput';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Array1Impl: FC = () => {\n  const [text, setText] = useState('abc');\n  const characters = useMemo(() => Array.from(text), [text]);\n\n  const [length, setLength] = useState(5);\n  const [fillValue, setFillValue] = useState(0);\n  const fillArray = useMemo(() => Array(length).fill(fillValue), [\n    length,\n    fillValue,\n  ]);\n\n  const [rangeEnd, setRangeEnd] = useState(5);\n  const range = useMemo(\n    () => Array.from({ length: rangeEnd }, (_, idx) => idx),\n    [rangeEnd],\n  );\n\n  const [itemsString, setItemsString] = useState('1 1 2 3 3');\n  const uniqueArray = useMemo(() => {\n    const items = itemsString\n      .split(' ')\n      .filter(Boolean)\n      .map(Number);\n    return Array.from(new Set(items));\n  }, [itemsString]);\n\n  return (\n    <Question title=\"Array 1\" questions={questions}>\n      <div className={classes.Section}>\n        <h4>Convert text to array of character</h4>\n        <TextInput label=\"Text\" value={text} onChange={setText} />\n        <pre>{JSON.stringify(characters)}</pre>\n      </div>\n\n      <div className={classes.Section}>\n        <h4>Fill an array with values</h4>\n        <NumberInput label=\"Length\" value={length} onChange={setLength} />\n        <NumberInput\n          label=\"Fill Value\"\n          value={fillValue}\n          onChange={setFillValue}\n        />\n        <pre>{JSON.stringify(fillArray)}</pre>\n      </div>\n\n      <div className={classes.Section}>\n        <h4>Generate range of numbers</h4>\n        <NumberInput\n          label=\"Range End\"\n          value={rangeEnd}\n          onChange={setRangeEnd}\n        />\n        <pre>{JSON.stringify(range)}</pre>\n      </div>\n\n      <div className={classes.Section}>\n        <h4>Create array of unique items</h4>\n        <TextInput\n          label=\"Items\"\n          value={itemsString}\n          onChange={setItemsString}\n        />\n      </div>\n      <pre>{JSON.stringify(uniqueArray)}</pre>\n    </Question>\n  );\n};\n\nconst Array1 = memo(Array1Impl);\nArray1.displayName = 'Array1';\nexport default Array1;\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, InputHTMLAttributes, ReactNode } from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const InputImpl: FC<InputProps> = ({\n  className,\n  labelClassName,\n  inputClassName,\n  id,\n  label,\n  ...props\n}) => (\n  <div className={classnames(classes.InputGroup, className)}>\n    <label className={classnames(classes.Label, labelClassName)} htmlFor={id}>\n      {label}\n    </label>\n    <input\n      className={classnames(classes.Input, inputClassName)}\n      id={id}\n      {...props}\n    />\n  </div>\n);\n\nconst Input = memo(InputImpl);\nInput.displayName = 'Input';\nexport default Input;\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  labelClassName?: string;\n  inputClassName?: string;\n  label: ReactNode;\n}\n","import React, { FC, memo, ChangeEvent, useCallback } from 'react';\nimport Input, { InputProps } from 'components/Input';\n\nexport const NumberInputImpl: FC<NumberInputProps> = ({\n  type = 'number',\n  onChange,\n  ...props\n}) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) =>\n      onChange && onChange(Number(e.target.value)),\n    [onChange],\n  );\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Input type={type} onChange={handleChange} {...props} />;\n};\n\nconst NumberInput = memo(NumberInputImpl);\nNumberInput.displayName = 'NumberInput';\nexport default NumberInput;\n\nexport interface NumberInputProps\n  extends Omit<InputProps, 'onChange' | 'type'> {\n  type?: 'number' | 'range';\n  onChange?: (value: number) => void;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroupBase\":\"styles_InputGroupBase__18W83\",\"InputGroup\":\"styles_InputGroup__1uLeo\",\"LabelBase\":\"styles_LabelBase__2_6Yt\",\"Label\":\"styles_Label__1XhjA\",\"InputBase\":\"styles_InputBase__2S20X\",\"Input\":\"styles_Input__18MvC\"};"],"sourceRoot":""}