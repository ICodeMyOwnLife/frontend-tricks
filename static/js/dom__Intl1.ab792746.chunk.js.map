{"version":3,"sources":["components/References/index.tsx","components/Todos/index.tsx","components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/PageLayout/styles.ts","components/PageLayout/index.tsx","components/CodeViewer/styles.ts","components/CodeViewer/index.tsx","components/Section/styles.ts","components/Section/index.tsx","components/InputControl/index.tsx","components/Experiment/utils.ts","components/Experiment/styles.ts","components/Experiment/index.tsx","components/InputControlLayout/index.tsx","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","components/CheckboxControl/index.tsx","components/Select/index.tsx","components/Select/utils.ts","utils/render.tsx","pages/dom/Intl1/Collator/utils.ts","pages/dom/Intl1/common.ts","pages/dom/Intl1/Collator/index.tsx","pages/dom/Intl1/DateTimeFormat/utils.ts","pages/dom/Intl1/DateTimeFormat/index.tsx","pages/dom/Intl1/ListFormat/utils.ts","pages/dom/Intl1/ListFormat/index.tsx","pages/dom/Intl1/RelativeTimeFormat/utils.ts","pages/dom/Intl1/RelativeTimeFormat/index.tsx","pages/dom/Intl1/questions.tsx","pages/dom/Intl1/index.tsx"],"names":["References","memo","className","references","variant","map","name","url","key","href","target","rel","displayName","Todos","todos","Box","Typography","todo","useStyles","makeStyles","theme","Question","fontWeight","HiddenContent","marginBottom","spacing","Answer","marginTop","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","BottomBox","paddingBottom","borderBottom","BottomBoxTitle","QuestionItem","index","question","answer","classes","useToggle","open","toggleOpen","hasReferences","length","hasTodos","showBottomBox","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","createStyles","root","questions","fontFamily","color","classNamePrefix","QuestionPage","children","props","PageLayout","List","questionInfo","content","title","clsx","CodeViewer","style","okaidia","language","Section","Title","titleVariant","titleClassName","Paper","elevation","InputControl","Component","component","componentChildren","error","errorMessage","form","fullWidth","id","label","rest","componentProps","htmlFor","useHandleSubmit","handleSubmit","onSubmit","useState","result","setResult","handleSubmitForm","data","newResult","palette","display","gridTemplateColumns","gridGap","alignItems","submitButton","gridColumn","alignSelf","paddingTop","borderTopColor","borderTopWidth","borderTopStyle","whiteSpace","Experiment","Button","size","type","JSON","stringify","InputControlLayout","inputError","undefined","errors","inputErrorMessage","message","MenuItem","React","forwardRef","ref","tabIndex","_props$component","_props$disableGutters","disableGutters","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","createElement","_extends","dense","gutters","withStyles","typography","body1","_defineProperty","minHeight","boxSizing","width","overflow","breakpoints","up","body2","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","icon","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","value","isControlled","useRef","current","_React$useState","Boolean","checkedState","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","event","input","newChecked","cursor","position","opacity","height","top","left","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$disabled","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","concat","capitalize","cloneElement","text","secondary","colorPrimary","main","fade","action","hoverOpacity","colorSecondary","FormControlLabel","control","_props$labelPlacement","labelPlacement","controlProps","forEach","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","CheckboxControl","Select","defaultValue","validationOptions","register","setValue","watch","handleChange","useCallback","useEffect","useSelect","renderOptions","values","noValueLabel","renderNoValue","valueOptions","Array","isArray","item","Object","entries","caseFirst","ignorePunctuation","listText","locale","localeMatcher","numeric","sensitivity","usage","collator","Intl","Collator","split","sort","compare","join","localeOptions","localeMatcherOptions","formatMatcherOptions","textStyleOptions","numberStyleOptions","usageOptions","sensitivityOptions","caseFirstOptions","useForm","Input","day","era","formatMatcher","hour","hour12","minute","month","second","timeZone","timeZoneName","weekday","year","DateTimeFormat","format","Date","timeZoneOptions","formatTimeZoneOptions","formatTextNumericOptions","listFormat","ListFormat","list","typeOptions","unit","RelativeTimeFormat","Number","numericOptions","unitOptions","Intl1Component","Intl1"],"mappings":"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","file":"static/js/dom__Intl1.ab792746.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const ReferencesComponent: FC<ReferencesProps> = ({\n  className,\n  references,\n}) => (\n  <Box className={className}>\n    <Typography variant=\"h5\">References</Typography>\n    <ol>\n      {references!.map(({ name, url }) => (\n        <li key={url}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {name}\n          </a>\n        </li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst References = memo(ReferencesComponent);\nReferences.displayName = 'References';\nexport default References;\n\nexport interface ReferencesProps {\n  className?: string;\n  references: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport const TodosComponent: FC<TodosProps> = ({ className, todos }) => (\n  <Box>\n    <Typography className={className} variant=\"h5\">\n      Todos\n    </Typography>\n    <ol>\n      {todos!.map(todo => (\n        <li key={todo}>{todo}</li>\n      ))}\n    </ol>\n  </Box>\n);\n\nconst Todos = memo(TodosComponent);\nTodos.displayName = 'Todos';\nexport default Todos;\n\nexport interface TodosProps {\n  className?: string;\n  todos: string[];\n}\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  HiddenContent: {\n    marginBottom: theme.spacing(2),\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  BottomBox: {\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${grey[400]}`,\n\n    '& ol,ul': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  BottomBoxTitle: {\n    margin: theme.spacing(3, 0, 0),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { ListItem, ListItemText, Collapse, Box } from '@material-ui/core';\nimport { useToggle } from 'cb-hooks';\nimport References from 'components/References';\nimport Todos from 'components/Todos';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n  todos,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const hasReferences = !!(references && references.length);\n  const hasTodos = !!(todos && todos.length);\n  const showBottomBox = hasReferences || hasTodos;\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.HiddenContent}>\n          <Box className={classes.Answer}>{answer}</Box>\n\n          {showBottomBox && (\n            <Box className={classes.BottomBox}>\n              {hasReferences && (\n                <References\n                  className={classes.BottomBoxTitle}\n                  references={references!}\n                />\n              )}\n\n              {hasTodos && (\n                <Todos className={classes.BottomBoxTitle} todos={todos!} />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {},\n    questions: {\n      marginTop: spacing(4),\n      '& code': {\n        fontFamily: `'Courier New', Courier, monospace`,\n        fontSize: 14,\n        fontWeight: 600,\n        color: `rgb(219, 104, 27)`,\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'QuestionPage' });\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport PageLayout from 'components/PageLayout';\nimport useStyles from './styles';\n\nexport const QuestionPageComponent: FC<QuestionPageProps> = ({\n  questions,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PageLayout {...props}>\n      {children}\n      <Box className={classes.questions}>\n        <Typography variant=\"h4\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageComponent);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  className?: string;\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    root: {\n      marginTop: spacing(4),\n    },\n    content: {\n      marginTop: spacing(2.5),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'PageLayout' });\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const PageLayoutComponent: FC<PageLayoutProps> = ({\n  className,\n  title,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <Typography variant=\"h3\">{title}</Typography>\n      <Box className={classes.content}>{children}</Box>\n    </Box>\n  );\n};\n\nconst PageLayout = memo(PageLayoutComponent);\nPageLayout.displayName = 'PageLayout';\nexport default PageLayout;\n\nexport interface PageLayoutProps {\n  className?: string;\n  title: string;\n  children: ReactNode;\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  CodeViewer: {\n    '& pre': {\n      margin: '0 !important',\n      borderRadius: 6,\n    },\n\n    '&~$CodeViewer': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport useStyles from './styles';\n\nexport const CodeViewerComponent: FC<CodeViewerProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.CodeViewer, className)}>\n      <SyntaxHighlighter language={language} style={style}>\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nconst CodeViewer = memo(CodeViewerComponent);\nCodeViewer.displayName = 'CodeViewer';\nexport default CodeViewer;\n\nexport interface CodeViewerProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: CodeViewerLanguage;\n}\n\nexport type CodeViewerLanguage =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Section: {\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(3),\n  },\n  Title: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport { Paper, Typography } from '@material-ui/core';\nimport { TypographyProps } from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nexport const SectionComponent: FC<SectionProps> = ({\n  className,\n  title,\n  titleVariant = 'h6',\n  titleClassName,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={clsx(classes.Section, className)} elevation={0}>\n      <Typography\n        className={clsx(classes.Title, titleClassName)}\n        variant={titleVariant}\n      >\n        {title}\n      </Typography>\n      {children}\n    </Paper>\n  );\n};\n\nconst Section = memo(SectionComponent);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  className?: string;\n  title: string;\n  titleVariant?: TypographyProps['variant'];\n  titleClassName?: string;\n  children?: ReactNode;\n}\n","import React, {\n  memo,\n  ReactElement,\n  ComponentType,\n  ElementType,\n  ComponentProps,\n  ReactNode,\n} from 'react';\nimport { FormContextValues, FieldError } from 'react-hook-form';\nimport { InputLabel } from '@material-ui/core';\nimport InputControlLayout from 'components/InputControlLayout';\n\nexport function InputControlComponent<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>,\n  TElement extends ElementType\n>(props: InputControlProps<TName, TFormData, TElement>): ReactElement | null {\n  const {\n    children,\n    className,\n    component: Component,\n    componentChildren,\n    error,\n    errorMessage,\n    form,\n    fullWidth = true,\n    id,\n    label,\n    name,\n    ...rest\n  } = props as InputControlOwnProps<TName, TFormData, TElement>;\n  const componentProps = {\n    ...rest,\n    children: componentChildren,\n    form,\n    id,\n    name,\n  } as ComponentProps<TElement>;\n\n  return (\n    <InputControlLayout\n      className={className}\n      error={error}\n      errorMessage={errorMessage}\n      form={form}\n      name={name}\n      fullWidth={fullWidth}\n    >\n      {label && <InputLabel htmlFor={id}>{label}</InputLabel>}\n      <Component {...componentProps} />\n      {children}\n    </InputControlLayout>\n  );\n}\n\nconst InputControl = memo(\n  InputControlComponent,\n) as typeof InputControlComponent & ComponentType<any>;\nInputControl.displayName = 'InputControl';\nexport default InputControl;\n\ninterface InputControlOwnProps<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>,\n  TElement extends ElementType\n> {\n  children?: ReactNode;\n  className?: string;\n  component: TElement;\n  componentChildren?: ReactNode;\n  error?: FieldError;\n  errorMessage?: ReactNode;\n  form: FormContextValues<TFormData>;\n  fullWidth?: boolean;\n  id?: string;\n  label?: ReactNode;\n  name: TName;\n}\n\nexport type InputControlProps<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>,\n  TElement extends ElementType\n> = InputControlOwnProps<TName, TFormData, TElement> &\n  Omit<\n    ComponentProps<TElement>,\n    keyof InputControlOwnProps<TName, TFormData, TElement>\n  >;\n","import { FormContextValues } from 'react-hook-form';\nimport { useState } from 'react';\n\nexport const useHandleSubmit = <TFormData>({\n  form: { handleSubmit },\n  onSubmit,\n}: {\n  form: FormContextValues<TFormData>;\n  onSubmit: OnSubmit<TFormData>;\n}) => {\n  const [result, setResult] = useState<unknown>();\n  const handleSubmitForm = handleSubmit(data => {\n    const newResult = onSubmit(data);\n    return setResult(newResult);\n  });\n  return { result, handleSubmitForm };\n};\n\nexport type OnSubmit<TFormData> = (data: TFormData) => unknown;\n","import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    root: {},\n    form: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gridGap: spacing(3, 6),\n      alignItems: 'flex-start',\n    },\n    submitButton: {\n      gridColumn: -2,\n      alignSelf: 'flex-end',\n    },\n    result: {\n      marginTop: spacing(4),\n      paddingTop: spacing(2),\n      fontFamily: 'monospace',\n      borderTopColor: palette.grey[500],\n      borderTopWidth: 1,\n      borderTopStyle: 'solid',\n      whiteSpace: 'pre',\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'IntlLayout' });\n\nexport default useStyles;\n","import React, { memo, ReactElement, ComponentType, ReactNode } from 'react';\nimport { FormContextValues } from 'react-hook-form';\nimport { Box, Button, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useHandleSubmit, OnSubmit } from './utils';\nimport useStyles from './styles';\n\nexport function ExperimentComponent<TFormData>({\n  children,\n  className,\n  form,\n  onSubmit,\n}: ExperimentProps<TFormData>): ReactElement | null {\n  const classes = useStyles();\n  const { result, handleSubmitForm } = useHandleSubmit({ form, onSubmit });\n\n  return (\n    <Box className={clsx(classes.root, className)}>\n      <form className={classes.form} onSubmit={handleSubmitForm}>\n        {children}\n        <Button\n          className={classes.submitButton}\n          color=\"default\"\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Apply\n        </Button>\n      </form>\n      {!!result && (\n        <Typography\n          className={classes.result}\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          {JSON.stringify(result, null, 2)}\n        </Typography>\n      )}\n    </Box>\n  );\n}\n\nconst Experiment = memo(ExperimentComponent) as typeof ExperimentComponent &\n  ComponentType<any>;\nExperiment.displayName = 'Experiment';\nexport default Experiment;\n\nexport interface ExperimentProps<TFormData> {\n  children?: ReactNode;\n  className?: string;\n  form: FormContextValues<TFormData>;\n  onSubmit: OnSubmit<TFormData>;\n}\n","import React, { memo, ReactElement, ComponentType, ReactNode } from 'react';\nimport { FieldError, FormContextValues } from 'react-hook-form';\nimport {\n  FormControl,\n  FormControlProps,\n  FormHelperText,\n} from '@material-ui/core';\n\nexport function InputControlLayoutComponent<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>\n>({\n  children,\n  error,\n  errorMessage,\n  form,\n  name,\n  ...props\n}: InputControlLayoutProps<TName, TFormData>): ReactElement | null {\n  const inputError =\n    !!form && name !== undefined ? (form.errors[name] as FieldError) : error;\n  const inputErrorMessage = errorMessage || inputError?.message;\n\n  return (\n    <FormControl {...props} error={!!inputError}>\n      {children}\n      {inputError && <FormHelperText>{inputErrorMessage}</FormHelperText>}\n    </FormControl>\n  );\n}\n\nconst InputControlLayout = memo(\n  InputControlLayoutComponent,\n) as typeof InputControlLayoutComponent & ComponentType<any>;\nInputControlLayout.displayName = 'InputControlLayout';\nexport default InputControlLayout;\n\nexport interface InputControlLayoutProps<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>\n> extends OmitFrom<FormControlProps, 'error'> {\n  error?: FieldError;\n  errorMessage?: ReactNode;\n  form: FormContextValues<TFormData>;\n  name: TName;\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO To remove in v5?\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: {\n      dense: classes.dense\n    },\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(newChecked);\n    }\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"disabled\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref,\n    disabled: disabled\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import React, {\n  memo,\n  ReactElement,\n  ComponentType,\n  ElementType,\n  ReactNode,\n  ComponentProps,\n} from 'react';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport { FieldError, FormContextValues } from 'react-hook-form';\nimport InputControlLayout from 'components/InputControlLayout';\n\nexport function CheckboxControlComponent<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>,\n  TElement extends ElementType\n>(\n  props: CheckboxControlProps<TName, TFormData, TElement>,\n): ReactElement | null {\n  const {\n    className,\n    children,\n    component: Component = Checkbox,\n    error,\n    errorMessage,\n    form,\n    fullWidth = true,\n    label,\n    name,\n    ...rest\n  } = props as CheckboxControlOwnProps<TName, TFormData, TElement>;\n  const componentProps = { ...rest, form, name } as ComponentProps<TElement>;\n\n  return (\n    <InputControlLayout\n      className={className}\n      error={error}\n      errorMessage={errorMessage}\n      form={form}\n      name={name}\n      fullWidth={fullWidth}\n    >\n      <FormControlLabel\n        control={<Component {...componentProps} />}\n        label={label}\n      />\n      {children}\n    </InputControlLayout>\n  );\n}\n\nconst CheckboxControl = memo(\n  CheckboxControlComponent,\n) as typeof CheckboxControlComponent & ComponentType<any>;\nCheckboxControl.displayName = 'CheckboxControl';\nexport default CheckboxControl;\n\ninterface CheckboxControlOwnProps<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>,\n  TElement extends ElementType\n> {\n  children?: ReactNode;\n  className?: string;\n  component?: TElement;\n  error?: FieldError;\n  errorMessage?: ReactNode;\n  form: FormContextValues<TFormData>;\n  fullWidth?: boolean;\n  label?: ReactNode;\n  name: TName;\n}\n\nexport type CheckboxControlProps<\n  TName extends string,\n  TFormData extends Partial<Record<TName, unknown>>,\n  TElement extends ElementType\n> = CheckboxControlOwnProps<TName, TFormData, TElement> &\n  Omit<\n    ComponentProps<TElement>,\n    keyof CheckboxControlOwnProps<TName, TFormData, TElement>\n  >;\n","import React, { FC, memo } from 'react';\nimport {\n  Select as MuiSelect,\n  SelectProps as MuiSelectProps,\n} from '@material-ui/core';\nimport { FormContextValues, ValidationOptions } from 'react-hook-form';\nimport { useSelect } from './utils';\n\nexport const SelectComponent: FC<SelectProps> = ({\n  defaultValue,\n  form,\n  name,\n  validationOptions,\n  ...props\n}) => {\n  const { handleChange, value } = useSelect({\n    defaultValue,\n    form,\n    name,\n    validationOptions,\n  });\n  return (\n    <MuiSelect\n      defaultValue={defaultValue}\n      onChange={handleChange}\n      value={value}\n      {...props}\n    />\n  );\n};\n\nconst Select = memo(SelectComponent);\nSelect.displayName = 'Select';\nexport default Select;\n\nexport interface SelectProps\n  extends OmitFrom<MuiSelectProps, 'defaultValue' | 'onChange' | 'value'> {\n  defaultValue?: string;\n  form: FormContextValues;\n  name: string;\n  validationOptions?: ValidationOptions;\n}\n","import { useEffect, useCallback, ChangeEventHandler } from 'react';\nimport { FormContextValues, ValidationOptions } from 'react-hook-form';\n\nexport const useSelect = ({\n  defaultValue,\n  form: { register, setValue, watch },\n  name,\n  validationOptions,\n}: {\n  defaultValue: string | undefined;\n  form: FormContextValues;\n  name: string;\n  validationOptions: ValidationOptions | undefined;\n}) => {\n  const handleChange = useCallback<ChangeEventHandler<{ value: unknown }>>(\n    ({ target: { value } }) => setValue(name, value),\n    [name, setValue],\n  );\n\n  useEffect(() => {\n    register(name, validationOptions);\n  }, [name, register, validationOptions]);\n\n  useEffect(() => {\n    setValue(name, defaultValue);\n  }, [defaultValue, name, setValue]);\n\n  return { value: watch(name, ''), handleChange };\n};\n","/* eslint-disable react/jsx-indent */\nimport React from 'react';\nimport { MenuItem } from '@material-ui/core';\n\nexport const renderOptions = (\n  values: readonly string[] | Readonly<Record<string, string>>,\n  {\n    noValueLabel = '(no value)',\n    renderNoValue = true,\n  }: RenderOptionsSettings = {},\n) => {\n  const valueOptions = Array.isArray(values)\n    ? values.map(item => (\n        <MenuItem key={item} value={item}>\n          {item}\n        </MenuItem>\n      ))\n    : Object.entries(values).map(([value, name]) => (\n        <MenuItem key={value} value={value}>\n          {name}\n        </MenuItem>\n      ));\n  return renderNoValue\n    ? [\n        <MenuItem key=\"no-value\" value=\"\">\n          {noValueLabel}\n        </MenuItem>,\n        ...valueOptions,\n      ]\n    : valueOptions;\n};\n\nexport interface RenderOptionsSettings {\n  renderNoValue?: boolean;\n  noValueLabel?: string;\n}\n","import { OnSubmit } from '../../../../components/Experiment/utils';\n\nexport const handleSubmit: OnSubmit<CollatorFormData> = ({\n  caseFirst,\n  ignorePunctuation,\n  listText,\n  locale,\n  localeMatcher,\n  numeric,\n  sensitivity,\n  usage,\n}) => {\n  const collator = new Intl.Collator(locale, {\n    caseFirst,\n    ignorePunctuation,\n    localeMatcher,\n    numeric,\n    sensitivity,\n    usage,\n  });\n  const list = listText.split(/\\s*,\\s*/);\n  return list.sort(collator.compare).join(', ');\n};\n\nexport interface CollatorFormData {\n  caseFirst?: string;\n  ignorePunctuation?: boolean;\n  listText: string;\n  locale?: string;\n  localeMatcher?: string;\n  numeric?: boolean;\n  sensitivity?: string;\n  usage?: string;\n}\n","import { renderOptions } from 'utils/render';\n\nexport const localeValues = {\n  'en-US': 'English',\n  'fr-FR': 'French',\n  'vi-VN': 'Vietnamese',\n  'de-DE': 'German',\n};\nexport const localeOptions = renderOptions(localeValues);\n\nexport const localeMatcherValues = ['lookup', 'best fit'] as const;\nexport const localeMatcherOptions = renderOptions(localeMatcherValues);\n\nexport const formatMatcherValues = ['basic', 'best fit'] as const;\nexport const formatMatcherOptions = renderOptions(formatMatcherValues);\n\nexport const textStyleValues = ['long', 'short', 'narrow'] as const;\nexport const textStyleOptions = renderOptions(textStyleValues);\n\nexport const numberStyleValues = ['numeric', '2-digit'] as const;\nexport const numberStyleOptions = renderOptions(numberStyleValues);\n","import React, { FC, memo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Input } from '@material-ui/core';\nimport InputControl from 'components/InputControl';\nimport CheckboxControl from 'components/CheckboxControl';\nimport Select from 'components/Select';\nimport Experiment from 'components/Experiment';\nimport { renderOptions } from 'utils/render';\nimport { CollatorFormData, handleSubmit } from './utils';\nimport { localeOptions, localeMatcherOptions } from '../common';\n\nconst usageValues = ['sort', 'search'] as const;\nconst sensitivityValues = ['base', 'accent', 'case', 'variant'] as const;\nconst caseFirstValues = ['upper', 'lower', 'false'] as const;\n\nconst usageOptions = renderOptions(usageValues);\nconst sensitivityOptions = renderOptions(sensitivityValues);\nconst caseFirstOptions = renderOptions(caseFirstValues);\n\nexport const CollatorComponent: FC = () => {\n  const form = useForm<CollatorFormData>();\n  const { register } = form;\n\n  return (\n    <Experiment form={form} onSubmit={handleSubmit}>\n      <InputControl\n        component={Input}\n        form={form}\n        inputRef={register({ required: 'Required' })}\n        label=\"List\"\n        name=\"listText\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={localeOptions}\n        form={form}\n        label=\"Locale\"\n        name=\"locale\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={localeMatcherOptions}\n        form={form}\n        label=\"Locale Matcher\"\n        name=\"localeMatcher\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={usageOptions}\n        form={form}\n        label=\"Usage\"\n        name=\"usage\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={sensitivityOptions}\n        form={form}\n        label=\"Sensitivity\"\n        name=\"sensitivity\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={caseFirstOptions}\n        form={form}\n        label=\"Case First\"\n        name=\"caseFirst\"\n      />\n      <CheckboxControl\n        form={form}\n        inputRef={register}\n        label=\"Ignore Punctuation\"\n        name=\"ignorePunctuation\"\n      />\n      <CheckboxControl\n        form={form}\n        inputRef={register}\n        label=\"Numeric\"\n        name=\"numeric\"\n      />\n    </Experiment>\n  );\n};\n\nconst Collator = memo(CollatorComponent);\nCollator.displayName = 'Collator';\nexport default Collator;\n","import { OnSubmit } from '../../../../components/Experiment/utils';\n\nexport const handleSubmit: OnSubmit<DateTimeFormatFormData> = ({\n  day,\n  era,\n  formatMatcher,\n  hour,\n  hour12,\n  locale,\n  localeMatcher,\n  minute,\n  month,\n  second,\n  timeZone,\n  timeZoneName,\n  weekday,\n  year,\n}) => {\n  const dateTimeFormat = new Intl.DateTimeFormat(locale, {\n    day,\n    era,\n    formatMatcher,\n    hour,\n    hour12,\n    localeMatcher,\n    minute,\n    month,\n    second,\n    timeZone,\n    timeZoneName,\n    weekday,\n    year,\n  });\n  return dateTimeFormat.format(new Date());\n};\n\nexport interface DateTimeFormatFormData {\n  day?: string;\n  era?: string;\n  formatMatcher?: string;\n  hour?: string;\n  hour12?: boolean;\n  locale?: string;\n  localeMatcher?: string;\n  minute?: string;\n  month?: string;\n  second?: string;\n  timeZone?: string;\n  timeZoneName?: string;\n  weekday?: string;\n  year?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport InputControl from 'components/InputControl';\nimport Select from 'components/Select';\nimport CheckboxControl from 'components/CheckboxControl';\nimport Experiment from 'components/Experiment';\nimport { renderOptions } from 'utils/render';\nimport { DateTimeFormatFormData, handleSubmit } from './utils';\nimport {\n  localeOptions,\n  localeMatcherOptions,\n  formatMatcherOptions,\n  textStyleOptions,\n  numberStyleOptions,\n} from '../common';\n\nconst timeZoneValues = [\n  'America/New_York',\n  'Asia/Kuala_Lumpur',\n  'Asia/Saigon',\n  'Asia/Tokyo',\n  'Canada/Pacific',\n] as const;\nconst formatTimeZoneValues = ['long', 'short'] as const;\nconst formatTextNumericValues = [\n  'long',\n  'short',\n  'narrow',\n  'numeric',\n  '2-digit',\n];\n\nconst timeZoneOptions = renderOptions(timeZoneValues);\nconst formatTimeZoneOptions = renderOptions(formatTimeZoneValues);\nconst formatTextNumericOptions = renderOptions(formatTextNumericValues);\n\nexport const DateTimeFormatComponent: FC = () => {\n  const form = useForm<DateTimeFormatFormData>();\n  const { register } = form;\n\n  return (\n    <Experiment form={form} onSubmit={handleSubmit}>\n      <InputControl\n        component={Select}\n        componentChildren={localeOptions}\n        form={form}\n        label=\"Locale\"\n        name=\"locale\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={localeMatcherOptions}\n        form={form}\n        label=\"Locale Matcher\"\n        name=\"localeMatcher\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={timeZoneOptions}\n        form={form}\n        label=\"Time Zone\"\n        name=\"timeZone\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={formatMatcherOptions}\n        form={form}\n        label=\"Format Matcher\"\n        name=\"formatMatcher\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={textStyleOptions}\n        form={form}\n        label=\"Weekday\"\n        name=\"weekday\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={textStyleOptions}\n        form={form}\n        label=\"Era\"\n        name=\"era\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={numberStyleOptions}\n        form={form}\n        label=\"Year\"\n        name=\"year\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={formatTextNumericOptions}\n        form={form}\n        label=\"Month\"\n        name=\"month\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={numberStyleOptions}\n        form={form}\n        label=\"Day\"\n        name=\"day\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={numberStyleOptions}\n        form={form}\n        label=\"Hour\"\n        name=\"hour\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={numberStyleOptions}\n        form={form}\n        label=\"Minute\"\n        name=\"minute\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={numberStyleOptions}\n        form={form}\n        label=\"Second\"\n        name=\"second\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={formatTimeZoneOptions}\n        form={form}\n        label=\"Time Zone Name\"\n        name=\"timeZoneName\"\n      />\n      <CheckboxControl\n        form={form}\n        inputRef={register}\n        label=\"Hour 12\"\n        name=\"hour12\"\n      />\n    </Experiment>\n  );\n};\n\nconst DateTimeFormat = memo(DateTimeFormatComponent);\nDateTimeFormat.displayName = 'DateTimeFormat';\nexport default DateTimeFormat;\n","import { OnSubmit } from '../../../../components/Experiment/utils';\n\nexport const handleSubmit: OnSubmit<ListFormatFormData> = ({\n  listText,\n  locale,\n  localeMatcher,\n  style,\n  type,\n}) => {\n  const listFormat = new Intl.ListFormat(locale, {\n    localeMatcher,\n    style,\n    type,\n  });\n  const list = listText.split(/\\s*,\\s*/);\n  return listFormat.format(list);\n};\n\nexport interface ListFormatFormData {\n  listText: string;\n  locale?: string;\n  localeMatcher?: string;\n  style?: string;\n  type?: string;\n}\n","import React, { FC, memo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Input } from '@material-ui/core';\nimport InputControl from 'components/InputControl';\nimport Select from 'components/Select';\nimport Experiment from 'components/Experiment';\nimport { renderOptions } from 'utils/render';\nimport { ListFormatFormData, handleSubmit } from './utils';\nimport {\n  localeOptions,\n  localeMatcherOptions,\n  textStyleOptions,\n} from '../common';\n\nconst typeValues = ['conjunction', 'disjunction', 'unit'] as const;\nconst typeOptions = renderOptions(typeValues);\n\nexport const ListFormatComponent: FC = () => {\n  const form = useForm<ListFormatFormData>();\n  const { register } = form;\n\n  return (\n    <Experiment form={form} onSubmit={handleSubmit}>\n      <InputControl\n        component={Input}\n        form={form}\n        inputRef={register({ required: 'Required' })}\n        label=\"List\"\n        name=\"listText\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={localeOptions}\n        form={form}\n        label=\"Locale\"\n        name=\"locale\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={localeMatcherOptions}\n        form={form}\n        label=\"Locale Matcher\"\n        name=\"localeMatcher\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={typeOptions}\n        form={form}\n        label=\"Type\"\n        name=\"type\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={textStyleOptions}\n        form={form}\n        label=\"Style\"\n        name=\"style\"\n      />\n    </Experiment>\n  );\n};\n\nconst ListFormat = memo(ListFormatComponent);\nListFormat.displayName = 'ListFormat';\nexport default ListFormat;\n","import { OnSubmit } from '../../../../components/Experiment/utils';\n\nexport const handleSubmit: OnSubmit<RelativeTimeFormatFormData> = ({\n  locale,\n  localeMatcher,\n  numeric,\n  style,\n  unit,\n  value,\n}) => {\n  const relativeTimeFormat = new Intl.RelativeTimeFormat(locale, {\n    localeMatcher,\n    numeric,\n    style,\n  });\n  return relativeTimeFormat.format(Number(value), unit);\n};\n\nexport interface RelativeTimeFormatFormData {\n  locale?: string;\n  localeMatcher?: string;\n  numeric?: string;\n  style?: string;\n  unit: string;\n  value: number | string;\n}\n","import React, { FC, memo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Input } from '@material-ui/core';\nimport InputControl from 'components/InputControl';\nimport Select from 'components/Select';\nimport Experiment from 'components/Experiment';\nimport { renderOptions } from 'utils/render';\nimport { RelativeTimeFormatFormData, handleSubmit } from './utils';\nimport {\n  localeOptions,\n  localeMatcherOptions,\n  textStyleOptions,\n} from '../common';\n\nconst numericValues = ['always', 'auto'] as const;\nconst numericOptions = renderOptions(numericValues);\n\nconst unitValues = [\n  'second',\n  'minute',\n  'hour',\n  'day',\n  'month',\n  'year',\n] as const;\nconst unitOptions = renderOptions(unitValues);\n\nexport const RelativeTimeFormatComponent: FC = () => {\n  const form = useForm<RelativeTimeFormatFormData>();\n  const { register } = form;\n\n  return (\n    <Experiment form={form} onSubmit={handleSubmit}>\n      <InputControl\n        component={Input}\n        form={form}\n        inputRef={register({ required: 'Required' })}\n        label=\"Value\"\n        name=\"value\"\n        type=\"number\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={unitOptions}\n        form={form}\n        label=\"Unit\"\n        name=\"unit\"\n        validationOptions={{ required: 'Required' }}\n      />\n      <InputControl\n        component={Select}\n        componentChildren={localeOptions}\n        form={form}\n        label=\"Locale\"\n        name=\"locale\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={localeMatcherOptions}\n        form={form}\n        label=\"Locale Matcher\"\n        name=\"localeMatcher\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={numericOptions}\n        form={form}\n        label=\"Numeric\"\n        name=\"numeric\"\n      />\n      <InputControl\n        component={Select}\n        componentChildren={textStyleOptions}\n        form={form}\n        label=\"Style\"\n        name=\"style\"\n      />\n    </Experiment>\n  );\n};\n\nconst RelativeTimeFormat = memo(RelativeTimeFormatComponent);\nRelativeTimeFormat.displayName = 'RelativeTimeFormat';\nexport default RelativeTimeFormat;\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport CodeViewer from 'components/CodeViewer';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to enable language-sensitive string comparison?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>Intl.Collator</code>\n        </p>\n        <CodeViewer language=\"typescript\">\n          {`const collator = new Intl.Collator(locale, {\n  caseFirst,\n  ignorePunctuation,\n  localeMatcher,\n  numeric,\n  sensitivity,\n  usage,\n});\nreturn list.sort(collator.compare).join(', ');`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Intl.Collator`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator`,\n      },\n    ],\n  },\n  {\n    question: `How to enable language-sensitive date and time formatting?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>Intl.DateTimeFormat</code>\n        </p>\n        <CodeViewer language=\"typescript\">\n          {`const dateTimeFormat = new Intl.DateTimeFormat(locale, {\n  day,\n  era,\n  formatMatcher,\n  hour,\n  hour12,\n  localeMatcher,\n  minute,\n  month,\n  second,\n  timeZone,\n  timeZoneName,\n  weekday,\n  year,\n});\nreturn dateTimeFormat.format(new Date());`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Intl.DateTimeFormat`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat`,\n      },\n    ],\n  },\n  {\n    question: `How to enable language-sensitive list formatting?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>Intl.ListFormat</code>\n        </p>\n        <CodeViewer language=\"typescript\">\n          {`const listFormat = new Intl.ListFormat(locale, {\n  localeMatcher,\n  style,\n  type,\n});\nreturn listFormat.format(list);`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Intl.ListFormat`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ListFormat`,\n      },\n    ],\n  },\n  {\n    question: `How to enable language-sensitive relative time formatting?`,\n    answer: (\n      <div>\n        <p>\n          Use <code>Intl.RelativeTimeFormat</code>\n        </p>\n        <CodeViewer language=\"typescript\">\n          {`const relativeTimeFormat = new Intl.RelativeTimeFormat(locale, {\n  localeMatcher,\n  numeric,\n  style,\n});\nreturn relativeTimeFormat.format(Number(value), unit);`}\n        </CodeViewer>\n      </div>\n    ),\n    references: [\n      {\n        name: '[MDN] Intl.RelativeTimeFormat',\n        url: `https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport Section from 'components/Section';\nimport Collator from './Collator';\nimport DateTimeFormat from './DateTimeFormat';\nimport ListFormat from './ListFormat';\nimport RelativeTimeFormat from './RelativeTimeFormat';\nimport questions from './questions';\n\nexport const Intl1Component: FC = () => (\n  <QuestionPage title=\"Intl 1\" questions={questions}>\n    <Section title=\"Collator\">\n      <Collator />\n    </Section>\n    <Section title=\"DateTimeFormat\">\n      <DateTimeFormat />\n    </Section>\n    <Section title=\"ListFormat\">\n      <ListFormat />\n    </Section>\n    <Section title=\"RelativeTimeFormat\">\n      <RelativeTimeFormat />\n    </Section>\n  </QuestionPage>\n);\n\nconst Intl1 = memo(Intl1Component);\nIntl1.displayName = 'Intl1';\nexport default Intl1;\n"],"sourceRoot":""}