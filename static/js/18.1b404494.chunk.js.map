{"version":3,"sources":["questions/react/Element1/styles.module.scss","components/Question/index.tsx","questions/react/Element1/hooks.ts","questions/react/Element1/questions.tsx","questions/react/Element1/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss"],"names":["module","exports","Question","memo","title","questions","children","className","classes","Container","Title","Content","Questions","map","index","question","answer","references","key","Index","Answer","length","References","name","url","href","target","rel","displayName","useForm","initialData","useState","data","setData","onChange","useCallback","e","prevData","nextValue","get","Number","value","String","Boolean","checked","console","warn","nextData","cloneDeep","set","element","props","cloneElement","id","Code","language","Element1Impl","active","getFieldDecorator","Form","InputGroup","InputLabel","htmlFor","InputControl","type","Checkbox","Data","JSON","stringify","Element1","style","okaidia","classnames"],"mappings":"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","file":"static/js/18.1b404494.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"styles_Form__1rZ8s\",\"InputGroup\":\"styles_InputGroup__22x65\",\"InputLabel\":\"styles_InputLabel__1qYdK\",\"InputControl\":\"styles_InputControl__a8_bX\",\"Checkbox\":\"styles_Checkbox__3xscn\",\"Data\":\"styles_Data__3jVds\"};","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import {\n  useState,\n  ChangeEvent,\n  useCallback,\n  FormEvent,\n  cloneElement,\n  ReactElement,\n} from 'react';\nimport { get, cloneDeep, set } from 'lodash';\n\nconst useForm = <TData extends FormData>(initialData: TData) => {\n  const [data, setData] = useState(initialData);\n  const onChange = useCallback(\n    (\n      e:\n        | ChangeEvent<HTMLInputElement | HTMLSelectElement>\n        | FormEvent<HTMLFormElement>,\n    ) => {\n      const target = e.target as EventTarget & HTMLInputElement;\n\n      setData(prevData => {\n        const prevDataValue = get(prevData, target.name);\n        let nextValue: number | string | boolean;\n\n        switch (typeof prevDataValue) {\n          case 'number':\n            nextValue = Number(target.value);\n            break;\n\n          case 'string':\n            nextValue = String(target.value);\n            break;\n\n          case 'boolean':\n            nextValue = Boolean((target as HTMLInputElement).checked);\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn(`Cannot find field with name ${target.name}`);\n            return prevData;\n        }\n\n        const nextData = cloneDeep(prevData);\n        set(nextData, target.name, nextValue);\n        return nextData;\n      });\n    },\n    [],\n  );\n\n  const getFieldDecorator = (name: string) => <TProps extends FieldProps>(\n    element: ReactElement<TProps>,\n  ) => {\n    const value = get(data, name);\n    let props: Partial<FieldProps> = {};\n\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n        props = { value };\n        break;\n\n      case 'boolean':\n        props = { checked: value };\n        break;\n\n      default:\n        // eslint-disable-next-line no-console\n        console.warn(`Cannot find field with name ${name}`);\n        break;\n    }\n\n    return cloneElement<FieldProps>(element, {\n      ...props,\n      name,\n      id: name,\n      onChange,\n    });\n  };\n\n  return [data, getFieldDecorator] as const;\n};\n\nexport default useForm;\n\nexport interface FormData {\n  [k: string]: string | number | boolean | FormData;\n  [k: number]: string | number | boolean | FormData;\n}\n\nexport interface FieldProps {\n  name?: string;\n  id?: string;\n  value?: string | number;\n  checked?: boolean;\n  onChange?: (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: (\n      <span>\n        How to change/add/remove props of an <code>ReactElement</code>?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Using <code>cloneElement()</code>\n        </p>\n        <Code language=\"tsx\">\n          {`cloneElement<FieldProps>(element, {\n  ...props,\n  name,\n  id: name,\n  onChange,\n});`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[React] cloneElement()`,\n        url: `https://reactjs.org/docs/react-api.html#cloneelement`,\n      },\n      {\n        name: `[Medium] Transforming Elements In React`,\n        url: `https://medium.com/javascript-inside/transforming-elements-in-react-8e411c0f1bba`,\n      },\n      {\n        name: `[Medium] How to change or add React Component properties â€” clone element with React.cloneElement`,\n        url: `https://medium.com/@vygandas/how-to-change-or-add-react-component-properties-clone-element-with-react-cloneelement-be060097a44a`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport Question from 'components/Question';\nimport useForm from './hooks';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Element1Impl: FC = () => {\n  const [data, getFieldDecorator] = useForm({\n    name: '',\n    value: 0,\n    active: false,\n  });\n\n  return (\n    <Question title=\"Element 1\" questions={questions}>\n      <form className={classes.Form}>\n        <div className={classes.InputGroup}>\n          <label className={classes.InputLabel} htmlFor=\"name\">\n            Name\n          </label>\n          {getFieldDecorator('name')(\n            <input className={classes.InputControl} type=\"text\" />,\n          )}\n        </div>\n\n        <div className={classes.InputGroup}>\n          <label className={classes.InputLabel} htmlFor=\"value\">\n            Value\n          </label>\n          {getFieldDecorator('value')(\n            <input className={classes.InputControl} type=\"number\" />,\n          )}\n        </div>\n        <div className={classes.InputGroup}>\n          <label className={classes.Checkbox} htmlFor=\"active\">\n            {getFieldDecorator('active')(<input type=\"checkbox\" />)}\n            Active\n          </label>\n        </div>\n      </form>\n\n      <div className={classes.Data}>\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </div>\n    </Question>\n  );\n};\n\nconst Element1 = memo(Element1Impl);\nElement1.displayName = 'Element1';\nexport default Element1;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};"],"sourceRoot":""}