{"version":3,"sources":["questions/dom/DeviceDetection1/questions.tsx","questions/dom/DeviceDetection1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss"],"names":["questions","question","answer","Code","language","references","name","url","DeviceDetection1Component","useState","status","setStatus","useEffect","mobileDetect","MobileDetect","navigator","userAgent","mobile","phone","tablet","userAgents","os","mobileGrade","Question","title","JSON","stringify","DeviceDetection1","memo","children","className","classes","Container","Title","Content","Questions","map","index","key","Index","Answer","length","References","href","target","rel","displayName","module","exports","style","okaidia","classnames"],"mappings":"gLAgCeA,EA5BmB,CAChC,CACEC,SAAS,4BACTC,OACE,kBAACC,EAAA,EAAD,CAAMC,SAAS,OAAf,8XAeFC,WAAY,CACV,CACEC,KAAK,4BACLC,IAAI,iD,wDCrBL,IAAMC,EAAgC,WAAO,IAAD,EACrBC,qBADqB,mBAC1CC,EAD0C,KAClCC,EADkC,KAiBjD,OAdAC,oBAAU,WACR,IAAMC,EAAe,IAAIC,IAAaC,UAAUC,WAEhDL,EAAU,CACRM,OAAQJ,EAAaI,SACrBC,MAAOL,EAAaK,QACpBC,OAAQN,EAAaM,SACrBH,UAAWH,EAAaG,YACxBI,WAAYP,EAAaO,aACzBC,GAAIR,EAAaQ,KACjBC,YAAaT,EAAaS,iBAE3B,IAGD,kBAACC,EAAA,EAAD,CAAUC,MAAM,qBAAqBxB,UAAWA,GAC9C,6BAAMyB,KAAKC,UAAUhB,EAAQ,KAAM,MAKnCiB,EAAmBC,eAAKpB,GACfmB,a,gCC9Bf,qCA4CMJ,EAAWK,eAzC8B,SAAC,GAAD,IAC7CJ,EAD6C,EAC7CA,MACAxB,EAF6C,EAE7CA,UACA6B,EAH6C,EAG7CA,SAH6C,OAK7C,yBAAKC,UAAWC,IAAQC,WACtB,wBAAIF,UAAWC,IAAQE,OAAQT,GAC/B,yBAAKM,UAAWC,IAAQG,SAAUL,GAClC,yBAAKC,UAAWC,IAAQI,WACtB,yCACA,6BACGnC,EAAUoC,IAAI,WAAmCC,GAAnC,IAAGpC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQG,EAArB,EAAqBA,WAArB,OAEb,6BAASiC,IAAKD,GACZ,6BAASP,UAAWC,IAAQR,UAC1B,0BAAMO,UAAWC,IAAQQ,OAAQF,EAAQ,EAAzC,KADF,IACuDpC,GAGvD,yBAAK6B,UAAWC,IAAQS,QAAStC,GAEhCG,GAAcA,EAAWoC,QACxB,yBAAKX,UAAWC,IAAQW,YACtB,0CACA,4BACGrC,EAAW+B,IAAI,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACd,wBAAI+B,IAAK/B,GACP,uBAAGoC,KAAMpC,EAAKqC,OAAO,SAASC,IAAI,uBAC/BvC,gBAezBiB,EAASuB,YAAc,WACRvB,O,mBC7CfwB,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,QAAU,wBAAwB,UAAY,0BAA0B,SAAW,yBAAyB,MAAQ,sBAAsB,OAAS,uBAAuB,WAAa,6B,gCCD7Q,wEAmBM7C,EAAOyB,eAb0B,SAAC,GAAD,IACrCE,EADqC,EACrCA,UACAD,EAFqC,EAErCA,SAFqC,IAGrCoB,aAHqC,MAG7BC,IAH6B,EAIrC9C,EAJqC,EAIrCA,SAJqC,OAMrC,yBAAK0B,UAAWqB,IAAWpB,IAAQ5B,KAAM2B,IACvC,kBAAC,IAAD,CAAmB1B,SAAUA,EAAU6C,MAAOA,GAC3CpB,MAMP1B,EAAK2C,YAAc,OACJ3C,O,mBCpBf4C,EAAOC,QAAU,CAAC,KAAO","file":"static/js/19.977fd7bc.chunk.js","sourcesContent":["import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to detect the device?`,\n    answer: (\n      <Code language=\"tsx\">\n        {`import MobileDetect from 'mobile-detect';\n\nconst mobileDetect = new MobileDetect(navigator.userAgent);\nconst status = {\n  mobile: mobileDetect.mobile(),\n  phone: mobileDetect.phone(),\n  tablet: mobileDetect.tablet(),\n  userAgent: mobileDetect.userAgent(),\n  userAgents: mobileDetect.userAgents(),\n  os: mobileDetect.os(),\n  mobileGrade: mobileDetect.mobileGrade(),\n};`}\n      </Code>\n    ),\n    references: [\n      {\n        name: `[GitHub] mobile-detect.js`,\n        url: `https://github.com/hgoebl/mobile-detect.js`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState, useEffect } from 'react';\nimport MobileDetect from 'mobile-detect';\nimport Question from 'components/Question';\nimport questions from './questions';\n\nexport const DeviceDetection1Component: FC = () => {\n  const [status, setStatus] = useState<DeviceDetectionStatus>();\n\n  useEffect(() => {\n    const mobileDetect = new MobileDetect(navigator.userAgent);\n\n    setStatus({\n      mobile: mobileDetect.mobile(),\n      phone: mobileDetect.phone(),\n      tablet: mobileDetect.tablet(),\n      userAgent: mobileDetect.userAgent(),\n      userAgents: mobileDetect.userAgents(),\n      os: mobileDetect.os(),\n      mobileGrade: mobileDetect.mobileGrade(),\n    });\n  }, []);\n\n  return (\n    <Question title=\"Device Detection 1\" questions={questions}>\n      <pre>{JSON.stringify(status, null, 2)}</pre>\n    </Question>\n  );\n};\n\nconst DeviceDetection1 = memo(DeviceDetection1Component);\nexport default DeviceDetection1;\n\nexport interface DeviceDetectionStatus {\n  mobile: string | null;\n  phone: string | null;\n  tablet: string | null;\n  userAgent: string | null;\n  userAgents: string[];\n  os: string | null;\n  mobileGrade: string | null;\n}\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};"],"sourceRoot":""}