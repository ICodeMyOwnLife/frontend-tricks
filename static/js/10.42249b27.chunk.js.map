{"version":3,"sources":["questions/dom/CancelRequest1/styles.module.scss","questions/dom/CancelRequest1/Request.tsx","questions/dom/CancelRequest1/questions.tsx","questions/dom/CancelRequest1/hooks.ts","questions/dom/CancelRequest1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss","components/Button/index.tsx","components/Button/styles.module.scss","constants/urls.ts"],"names":["module","exports","Request","memo","name","initialize","send","cancel","result","className","classes","Button","onClick","JSON","stringify","displayName","questions","question","answer","Code","language","references","url","BASE_URL","params","URLSearchParams","set","getXMLHttpResult","loading","status","statusText","readyState","response","responseText","body","parse","getFetchResult","a","clone","json","text","CancelRequest1Impl","xmlHttpRequest","useState","setResult","requestRef","useRef","abortableRef","useCallback","request","XMLHttpRequest","open","onload","onerror","onabort","current","undefined","abort","useXMLHttpRequest","fetchRequest","abortControllerRef","abortController","AbortController","method","signal","fetch","error","message","code","useFetch","axiosRequest","instanceRef","cancelTokenSourceRef","cancelTokenSource","Axios","CancelToken","source","instance","create","cancelToken","token","data","isCancel","useAxios","Question","title","CancelRequest1","children","Container","Title","Content","Questions","map","index","key","Index","Answer","length","References","href","target","rel","style","okaidia","classnames","id","download","type"],"mappings":"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","file":"static/js/10.42249b27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Request\":\"styles_Request__28ARP\"};","import React, { FC, memo } from 'react';\nimport Button from 'components/Button';\nimport classes from './styles.module.scss';\n\nexport const RequestImpl: FC<RequestProps> = ({\n  name,\n  initialize,\n  send,\n  cancel,\n  result,\n}) => (\n  <div className={classes.Request}>\n    <h4>{name}</h4>\n\n    <div>\n      <Button className=\"mr-4\" onClick={initialize}>\n        Initialize\n      </Button>\n\n      <Button className=\"mr-4\" onClick={send}>\n        Send\n      </Button>\n\n      <Button className=\"mr-4\" onClick={cancel}>\n        Cancel\n      </Button>\n    </div>\n\n    <h6>Result:</h6>\n    <pre>{JSON.stringify(result, null, 2)}</pre>\n  </div>\n);\n\nconst Request = memo(RequestImpl);\nRequest.displayName = 'Request';\nexport default Request;\n\nexport interface RequestProps {\n  name: string;\n  initialize: VoidFunction;\n  send: VoidFunction;\n  cancel: VoidFunction;\n  result: any;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: (\n      <span>\n        How to cancel an <code>XMLHttpRequest</code>?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Call <code>XMLHttpRequest.abort()</code>\n        </p>\n        <Code language=\"tsx\">\n          {`const request = new XMLHttpRequest();\nrequest.open('GET', url);\nrequest.send(params);\n\nif (SHOULD_CANCEL_REQUEST) request.abort();`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] XMLHttpRequest`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest`,\n      },\n      {\n        name: `[MDN] XMLHttpRequest.readyState`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState`,\n      },\n      {\n        name: `[MDN] XMLHttpRequest.abort()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort`,\n      },\n      {\n        name: `[MDN] Using XMLHttpRequest`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest`,\n      },\n    ],\n  },\n  {\n    question: (\n      <span>\n        How to cancel a <code>fetch</code> request?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Specify an <code>AbortSignal</code> when calling <code>fetch()</code>{' '}\n          and call <code>AbortController.abort()</code> when needed\n        </p>\n        <Code language=\"tsx\">\n          {`const request = new Request(url);\nconst abortController = new AbortController();\nconst response = await fetch(request, {\n  method: 'GET',\n  signal: abortController.signal,\n  body: params,\n});\n\nif (SHOULD_CANCEL_REQUEST) abortController.abort();`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Fetch API`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API`,\n      },\n      {\n        name: `[MDN] WindowOrWorkerGlobalScope.fetch()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch`,\n      },\n      {\n        name: `[MDN] AbortSignal`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal`,\n      },\n      {\n        name: `[MDN] AbortController`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/AbortController`,\n      },\n    ],\n  },\n  {\n    question: (\n      <span>\n        How to cancel an <code>axios</code> request?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Specify a <code>CancelToken</code> when calling{' '}\n          <code>Axios.request()</code> and call{' '}\n          <code>CancelTokenSource.cancel()</code> when needed\n        </p>\n        <Code language=\"tsx\">\n          {`  const cancelTokenSource = Axios.CancelToken.source();\nconst response = await Axios.request({\n  url,\n  method: 'GET',\n  params,\n  cancelToken: cancelTokenSource.token,\n});\n\nif (SHOULD_CANCEL_REQUEST) cancelTokenSource.cancel();`}\n        </Code>\n      </div>\n    ),\n  },\n];\n\nexport default questions;\n","import { BASE_URL } from 'constants/urls';\nimport { useCallback, useRef, useState } from 'react';\nimport Axios, { CancelTokenSource, AxiosResponse, AxiosInstance } from 'axios';\n\nconst url = `${BASE_URL}/long`;\nconst params = new URLSearchParams();\nparams.set('duration', '5000');\n\nconst getXMLHttpResult = (\n  { status, statusText, readyState, response, responseText }: XMLHttpRequest,\n  loading: boolean,\n): XMLHttpResult => ({\n  loading,\n  status,\n  statusText,\n  readyState,\n  body: response && JSON.parse(response),\n  responseText,\n});\n\nconst getFetchResult = async (\n  response: Response,\n  loading: boolean,\n): Promise<FetchResult> => {\n  const { status, statusText } = response;\n\n  return {\n    loading,\n    status,\n    statusText,\n    body: await response.clone().json(),\n    responseText: await response.clone().text(),\n  };\n};\n\nconst getFetchError = ({ message, code, name }: DOMException): FetchError => ({\n  message,\n  code,\n  name,\n});\n\nconst getAxiosResult = (\n  { data, status, statusText }: AxiosResponse,\n  loading: boolean,\n): AxiosResult => ({ loading, data, status, statusText });\n\nconst getAxiosError = (error: any) => ({\n  message: Axios.isCancel(error) ? 'Cancelled' : error.message,\n});\n\nexport const useXMLHttpRequest = () => {\n  const [result, setResult] = useState<XMLHttpResult>({ loading: false });\n  const requestRef = useRef<XMLHttpRequest>();\n  const abortableRef = useRef<XMLHttpRequest>();\n\n  const initialize = useCallback(() => {\n    const request = new XMLHttpRequest();\n    request.open('POST', url);\n    request.onload = () => setResult(getXMLHttpResult(request, false));\n    request.onerror = () => setResult(getXMLHttpResult(request, false));\n    request.onabort = () => setResult(getXMLHttpResult(request, false));\n    requestRef.current = request;\n    abortableRef.current = request;\n  }, []);\n\n  const send = useCallback(() => {\n    const request = requestRef.current;\n\n    if (request) {\n      setResult(getXMLHttpResult(request, true));\n      request.send(params);\n      requestRef.current = undefined;\n    }\n  }, []);\n\n  const cancel = useCallback(() => {\n    if (abortableRef.current) abortableRef.current.abort();\n  }, []);\n\n  return { initialize, send, cancel, result };\n};\n\nexport const useFetch = () => {\n  const [result, setResult] = useState<FetchResult>({ loading: false });\n  const requestRef = useRef<Request>();\n  const abortControllerRef = useRef<AbortController>();\n\n  const initialize = useCallback(() => {\n    const abortController = new AbortController();\n    const request = new Request(url, {\n      method: 'POST',\n      body: params,\n      signal: abortController.signal,\n    });\n    abortControllerRef.current = abortController;\n    requestRef.current = request;\n  }, []);\n\n  const send = useCallback(async () => {\n    const request = requestRef.current;\n\n    if (!request) return;\n\n    setResult({ loading: true });\n\n    try {\n      const response = await fetch(request);\n      setResult(await getFetchResult(response, false));\n      requestRef.current = undefined;\n    } catch (error) {\n      setResult({ loading: false, error: getFetchError(error) });\n    }\n  }, []);\n\n  const cancel = useCallback(() => {\n    if (abortControllerRef.current) abortControllerRef.current.abort();\n  }, []);\n\n  return { initialize, send, cancel, result };\n};\n\nexport const useAxios = () => {\n  const [result, setResult] = useState<AxiosResult>({ loading: false });\n  const instanceRef = useRef<AxiosInstance>();\n  const cancelTokenSourceRef = useRef<CancelTokenSource>();\n\n  const initialize = useCallback(() => {\n    const cancelTokenSource = Axios.CancelToken.source();\n    cancelTokenSourceRef.current = cancelTokenSource;\n    const instance = Axios.create({\n      cancelToken: cancelTokenSource.token,\n    });\n    instanceRef.current = instance;\n  }, []);\n\n  const send = useCallback(async () => {\n    const instance = instanceRef.current;\n\n    if (!instance) return;\n\n    setResult({ loading: true });\n\n    try {\n      const response = await instance.request({\n        url,\n        method: 'POST',\n        params,\n      });\n      setResult(getAxiosResult(response, false));\n      instanceRef.current = undefined;\n    } catch (error) {\n      setResult({ loading: false, error: getAxiosError(error) });\n    }\n  }, []);\n\n  const cancel = useCallback(() => {\n    if (cancelTokenSourceRef.current) cancelTokenSourceRef.current.cancel();\n  }, []);\n\n  return { initialize, send, cancel, result };\n};\n\nconst SHOULD_CANCEL_REQUEST = true;\n\nexport function test1() {\n  const request = new XMLHttpRequest();\n  request.open('GET', url);\n  request.send(params);\n\n  if (SHOULD_CANCEL_REQUEST) request.abort();\n}\n\nexport async function test2() {\n  const request = new Request(url);\n  const abortController = new AbortController();\n  const response = await fetch(request, {\n    method: 'GET',\n    signal: abortController.signal,\n    body: params,\n  });\n\n  if (SHOULD_CANCEL_REQUEST) abortController.abort();\n  console.log(response);\n}\n\nexport async function test3() {\n  const cancelTokenSource = Axios.CancelToken.source();\n  const response = await Axios.request({\n    url,\n    method: 'GET',\n    params,\n    cancelToken: cancelTokenSource.token,\n  });\n\n  if (SHOULD_CANCEL_REQUEST) cancelTokenSource.cancel();\n  console.log(response);\n}\n\nexport interface XMLHttpResult\n  extends Partial<\n    Pick<\n      XMLHttpRequest,\n      'status' | 'statusText' | 'readyState' | 'responseText'\n    >\n  > {\n  loading: boolean;\n  body?: any;\n}\n\nexport interface FetchResult\n  extends Partial<Pick<Response, 'status' | 'statusText'>> {\n  loading: boolean;\n  body?: any;\n  responseText?: any;\n  error?: FetchError;\n}\n\nexport type FetchError = Pick<DOMException, 'message' | 'code' | 'name'>;\n\nexport interface AxiosResult\n  extends Partial<Pick<AxiosResponse, 'data' | 'status' | 'statusText'>> {\n  loading: boolean;\n  error?: AxiosError;\n}\n\nexport interface AxiosError {\n  message: string;\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport Question from 'components/Question';\nimport Request from './Request';\nimport questions from './questions';\nimport { useXMLHttpRequest, useFetch, useAxios } from './hooks';\n\nexport const CancelRequest1Impl: FC = () => {\n  const xmlHttpRequest = useXMLHttpRequest();\n  const fetchRequest = useFetch();\n  const axiosRequest = useAxios();\n\n  return (\n    <Question title=\"Cancel Request 1\" questions={questions}>\n      <Request name=\"XMLHttpRequest\" {...xmlHttpRequest} />\n      <Request name=\"Fetch\" {...fetchRequest} />\n      <Request name=\"Axios\" {...axiosRequest} />\n    </Question>\n  );\n};\n\nconst CancelRequest1 = memo(CancelRequest1Impl);\nCancelRequest1.displayName = 'CancelRequest1';\nexport default CancelRequest1;\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import React, {\n  FC,\n  memo,\n  ReactNode,\n  ButtonHTMLAttributes,\n  SyntheticEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const ButtonImpl: FC<ButtonProps> = ({\n  className,\n  id,\n  href,\n  target,\n  rel,\n  download,\n  type = 'button',\n  onClick,\n  children,\n}) =>\n  href ? (\n    <a\n      className={classnames(classes.Button, className)}\n      id={id}\n      href={href}\n      target={target}\n      rel={rel}\n      download={download}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  ) : (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      className={classnames(classes.Button, className)}\n      id={id}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n\nconst Button = memo(ButtonImpl);\nButton.displayName = 'Button';\nexport default Button;\n\nexport interface ButtonProps {\n  className?: string;\n  id?: string;\n  href?: string;\n  target?: string;\n  rel?: string;\n  download?: string;\n  type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  onClick?: (e: SyntheticEvent) => void;\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonBase\":\"styles_ButtonBase__3uhxr\",\"Button\":\"styles_Button__1Ekk8\"};","export const BASE_URL = `http://localhost:1333`;\n\nexport default BASE_URL;\n"],"sourceRoot":""}