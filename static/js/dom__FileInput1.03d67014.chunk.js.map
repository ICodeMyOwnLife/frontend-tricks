{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","components/FileInput/hooks.ts","components/FileInput/styles.ts","components/FileInput/ButtonFileInput.tsx","components/FileInput/LabelFileInput.tsx","components/FileInput/PreviewContainer.tsx","components/FileInput/ImagePreview.tsx","components/FileInput/InputContainer.tsx","components/FileInput/DataUrlImageInput.tsx","components/FileInput/ObjectUrlImageInput.tsx","components/FileInput/CommonPreview.tsx","components/FileInput/CommonInput.tsx","components/Section/styles.ts","components/Section/index.tsx","questions/dom/FileInput1/questions.tsx","questions/dom/FileInput1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","getFileName","files","preventDefaults","e","preventDefault","stopPropagation","useInputChangeHandler","onChange","useCallback","useDragDrop","draggable","containerRef","useRef","onChangeRef","useEffect","current","container","unhighlight","classList","remove","handleDragEnter","add","handleDragLeave","handleDrop","dataTransfer","addEventListener","removeEventListener","useObjectUrl","supportedFileTypes","useState","src","setSrc","error","setError","cleanupRef","cleanupCallback","file","includes","type","undefined","objectUrl","URL","createObjectURL","cleanup","revokeObjectURL","PreviewContainer","Preview","width","height","borderWidth","objectFit","objectPosition","FileInput","display","flexDirection","justifyContent","alignItems","borderColor","borderStyle","HiddenInput","position","overflow","clip","Filename","flex","marginLeft","whiteSpace","textOverflow","ButtonFileInput","props","handleInputChange","inputRef","triggerInputClick","click","useTriggerInputClick","filename","ref","Button","size","hidden","LabelFileInput","id","component","htmlFor","errorClassName","clsx","ImagePreview","previewClassName","onLoad","alt","InputContainer","triggerComponent","InputElement","getInputElement","DataUrlImageInput","fileReader","FileReader","onload","dataUrl","result","onerror","message","readAsDataURL","useDataUrl","ObjectUrlImageInput","CommonPreview","CommonInput","Section","Title","titleVariant","titleClassName","Paper","FileInput1Impl","buttonFiles","setButtonFiles","buttonDraggable","setButtonDraggable","labelFiles","setLabelFiles","labelDraggable","setLabelDraggable","dataUrlFiles","setDataUrlFiles","objectUrlFiles","setObjectUrlFiles","pdfFiles","setPdfFiles","videoFiles","setVideoFiles","FormControlLabel","label","control","Checkbox","checked","multiple","accept","FileInput1"],"mappings":"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","file":"static/js/dom__FileInput1.03d67014.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","/* eslint-disable no-console */\nimport { useCallback, ChangeEvent, useRef, useEffect, useState } from 'react';\nimport { FilesChangeListener } from './types';\n\nexport const getFileName = (files: FileList | null | undefined) => {\n  if (!files) {\n    return null;\n  }\n\n  if (files.length === 1) {\n    return files[0].name;\n  }\n\n  return `${files.length} files`;\n};\n\nexport const preventDefaults = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n\nexport const useInputChangeHandler = ({\n  onChange,\n}: {\n  onChange: FilesChangeListener | undefined;\n}) =>\n  useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => onChange && onChange(e.target.files),\n    [onChange],\n  );\n\nexport const useTriggerInputClick = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const triggerInputClick = useCallback(\n    () => inputRef.current && inputRef.current.click(),\n    [],\n  );\n\n  return { inputRef, triggerInputClick };\n};\n\nexport const useDragDrop = ({\n  onChange,\n  draggable,\n}: {\n  onChange: FilesChangeListener | undefined;\n  draggable: boolean | undefined;\n}) => {\n  const draggingClass = 'dragging';\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onChangeRef = useRef<FilesChangeListener>();\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n\n    if (!container || !draggable) return undefined;\n\n    const highlight = () => container.classList.add(draggingClass);\n\n    const unhighlight = () => container.classList.remove(draggingClass);\n\n    const handleDragEnter = (e: Event) => {\n      preventDefaults(e);\n      highlight();\n    };\n\n    const handleDragLeave = (e: Event) => {\n      preventDefaults(e);\n      unhighlight();\n    };\n\n    const handleDrop = (e: DragEvent) => {\n      preventDefaults(e);\n      unhighlight();\n      if (onChangeRef.current)\n        onChangeRef.current(e.dataTransfer && e.dataTransfer.files);\n    };\n\n    container.addEventListener('dragenter', handleDragEnter);\n    container.addEventListener('dragover', handleDragEnter);\n    container.addEventListener('dragleave', handleDragLeave);\n    container.addEventListener('drop', handleDrop);\n\n    return () => {\n      container.removeEventListener('dragenter', handleDragEnter);\n      container.removeEventListener('dragover', handleDragEnter);\n      container.removeEventListener('dragleave', handleDragLeave);\n      container.removeEventListener('drop', handleDrop);\n    };\n  }, [draggable]);\n\n  return containerRef;\n};\n\nexport const useDataUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | null | undefined;\n  supportedFileTypes?: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) return;\n\n    if (supportedFileTypes && !supportedFileTypes.includes(file.type)) {\n      setError('Unsupported file type');\n      setSrc(undefined);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const dataUrl = fileReader.result as string;\n      setSrc(dataUrl);\n    };\n    fileReader.onerror = () => {\n      if (fileReader.error) setError(fileReader.error.message);\n    };\n    fileReader.readAsDataURL(file);\n  }, [files, supportedFileTypes]);\n\n  return { src, error };\n};\n\nexport const useObjectUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | undefined | null;\n  supportedFileTypes?: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n  const cleanupRef = useRef<VoidFunction>();\n  const cleanupCallback = useCallback(() => {\n    if (cleanupRef.current) {\n      cleanupRef.current();\n    }\n  }, []);\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) {\n      setSrc(undefined);\n      return undefined;\n    }\n\n    if (supportedFileTypes && !supportedFileTypes.includes(file.type)) {\n      setError('Unsupported file type');\n      setSrc(undefined);\n      return undefined;\n    }\n\n    let objectUrl: string | undefined;\n\n    try {\n      objectUrl = URL.createObjectURL(file);\n      setSrc(objectUrl);\n    } catch (e) {\n      setError(e);\n    }\n\n    const cleanup = () => {\n      if (objectUrl) URL.revokeObjectURL(objectUrl);\n    };\n    cleanupRef.current = cleanup;\n    return cleanup;\n  }, [files, supportedFileTypes]);\n\n  return { src, error, cleanupCallback };\n};\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst border = `1px solid ${grey[300]}`;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  PreviewContainer: {\n    maxWidth: '100%',\n    marginTop: theme.spacing(1),\n  },\n  Preview: {\n    width: '100%',\n    height: 320,\n    padding: theme.spacing(1.5),\n    borderWidth: 1,\n    border,\n    objectFit: 'contain',\n    objectPosition: 'center',\n  },\n  FileInput: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'stretch',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n    border,\n\n    '&.dragging': {\n      backgroundColor: grey[100],\n      borderColor: grey[600],\n      borderStyle: 'dotted',\n    },\n  },\n  HiddenInput: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    overflow: 'hidden',\n    clip: 'rect(1px, 1px, 1px, 1px)',\n  },\n  Filename: {\n    flex: 1,\n    marginLeft: theme.spacing(2),\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Button, Typography } from '@material-ui/core';\nimport {\n  useTriggerInputClick,\n  useInputChangeHandler,\n  useDragDrop,\n  getFileName,\n} from './hooks';\nimport { FileInputProps } from './types';\nimport useStyles from './styles';\n\nexport const ButtonFileInputImpl: FC<FileInputProps> = ({\n  className,\n  files,\n  onChange,\n  draggable,\n  children = 'Choose File',\n  ...props\n}) => {\n  const classes = useStyles();\n  const handleInputChange = useInputChangeHandler({ onChange });\n  const { inputRef, triggerInputClick } = useTriggerInputClick();\n  const containerRef = useDragDrop({ onChange, draggable });\n  const filename = getFileName(files);\n\n  return (\n    <div\n      className={classnames(classes.FileInput, className)}\n      ref={containerRef}\n    >\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={triggerInputClick}\n      >\n        {children}\n      </Button>\n\n      <input\n        ref={inputRef}\n        type=\"file\"\n        onChange={handleInputChange}\n        hidden\n        {...props}\n      />\n\n      {filename && (\n        <Typography\n          className={classes.Filename}\n          title={filename}\n          variant=\"body1\"\n        >\n          {filename}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nconst ButtonFileInput = memo(ButtonFileInputImpl);\nButtonFileInput.displayName = 'ButtonFileInput';\nexport default ButtonFileInput;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Button, Typography } from '@material-ui/core';\nimport { useInputChangeHandler, useDragDrop, getFileName } from './hooks';\nimport { FileInputProps } from './types';\nimport useStyles from './styles';\n\nexport const LabelFileInputImpl: FC<FileInputProps> = ({\n  className,\n  files,\n  id,\n  onChange,\n  draggable,\n  children = 'Choose File',\n  ...props\n}) => {\n  const classes = useStyles();\n  const handleInputChange = useInputChangeHandler({ onChange });\n  const containerRef = useDragDrop({ onChange, draggable });\n  const filename = getFileName(files);\n\n  return (\n    <div\n      className={classnames(classes.FileInput, className)}\n      ref={containerRef}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        component=\"label\"\n        htmlFor={id}\n      >\n        {children}\n      </Button>\n\n      <input\n        className={classnames(classes.HiddenInput)}\n        id={id}\n        type=\"file\"\n        onChange={handleInputChange}\n        {...props}\n      />\n\n      {filename && (\n        <Typography\n          className={classes.Filename}\n          title={filename}\n          variant=\"body1\"\n        >\n          {filename}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nconst LabelFileInput = memo(LabelFileInputImpl);\nLabelFileInput.displayName = 'LabelFileInput';\nexport default LabelFileInput;\n","import React, { FC, memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { PreviewContainerProps } from './types';\nimport useStyles from './styles';\n\nexport const PreviewContainerComponent: FC<PreviewContainerProps> = ({\n  className,\n  errorClassName,\n  error,\n  hidden,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.PreviewContainer, className)} hidden={hidden}>\n      <Typography className={errorClassName} variant=\"subtitle1\" color=\"error\">\n        {error}\n      </Typography>\n      {children}\n    </Box>\n  );\n};\n\nconst PreviewContainer = memo(PreviewContainerComponent);\nPreviewContainer.displayName = 'PreviewContainer';\nexport default PreviewContainer;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport PreviewContainer from './PreviewContainer';\nimport { PreviewProps } from './types';\nimport useStyles from './styles';\n\nexport const ImagePreviewImpl: FC<PreviewProps> = ({\n  className,\n  previewClassName,\n  src,\n  error,\n  errorClassName,\n  title,\n  onLoad,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PreviewContainer\n      className={className}\n      error={error}\n      errorClassName={errorClassName}\n      hidden={!src && !error}\n    >\n      <img\n        className={clsx(classes.Preview, previewClassName)}\n        src={src}\n        alt={title}\n        onLoad={onLoad}\n      />\n    </PreviewContainer>\n  );\n};\n\nconst ImagePreview = memo(ImagePreviewImpl);\nImagePreview.displayName = 'ImagePreview';\nexport default ImagePreview;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box } from '@material-ui/core';\nimport ButtonFileInput from './ButtonFileInput';\nimport LabelFileInput from './LabelFileInput';\nimport { FileInputProps, TriggerComponent } from './types';\n\nconst getInputElement = (triggerComponent: TriggerComponent) => {\n  switch (triggerComponent) {\n    case 'label':\n      return LabelFileInput;\n\n    default:\n      return ButtonFileInput;\n  }\n};\n\nexport const InputContainerComponent: FC<InputContainerProps> = ({\n  triggerComponent = 'button',\n  children,\n  ...props\n}) => {\n  const InputElement = getInputElement(triggerComponent);\n\n  return (\n    <Box>\n      <InputElement {...props} />\n      {children}\n    </Box>\n  );\n};\n\nconst InputContainer = memo(InputContainerComponent);\nInputContainer.displayName = 'InputContainer';\nexport default InputContainer;\n\nexport interface InputContainerProps extends FileInputProps {\n  triggerComponent?: TriggerComponent;\n  children?: ReactNode;\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport { useDataUrl } from './hooks';\nimport ImagePreview from './ImagePreview';\nimport InputContainer from './InputContainer';\nimport { WrappedInputProps } from './types';\n\nexport const DataUrlImageInputImpl: FC<WrappedInputProps> = ({\n  title,\n  triggerComponent = 'button',\n  files,\n  supportedFileTypes,\n  ...props\n}) => {\n  const { src, error } = useDataUrl({ files, supportedFileTypes });\n\n  return (\n    <InputContainer\n      triggerComponent={triggerComponent}\n      files={files}\n      {...props}\n    >\n      <ImagePreview title={title} src={src} error={error} />\n    </InputContainer>\n  );\n};\n\nconst DataUrlImageInput = memo(DataUrlImageInputImpl);\nDataUrlImageInput.displayName = 'DataUrlImageInput';\nexport default DataUrlImageInput;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport { useObjectUrl } from './hooks';\nimport ImagePreview from './ImagePreview';\nimport InputContainer from './InputContainer';\nimport { WrappedInputProps } from './types';\n\nexport const ObjectUrlImageInputImpl: FC<WrappedInputProps> = ({\n  title,\n  triggerComponent = 'button',\n  files,\n  supportedFileTypes,\n  ...props\n}) => {\n  const { src, error, cleanupCallback } = useObjectUrl({\n    files,\n    supportedFileTypes,\n  });\n\n  return (\n    <InputContainer\n      triggerComponent={triggerComponent}\n      files={files}\n      {...props}\n    >\n      <ImagePreview\n        title={title}\n        src={src}\n        error={error}\n        onLoad={cleanupCallback}\n      />\n    </InputContainer>\n  );\n};\n\nconst ObjectUrlImageInput = memo(ObjectUrlImageInputImpl);\nObjectUrlImageInput.displayName = 'ObjectUrlImageInput';\nexport default ObjectUrlImageInput;\n","import React, { FC, memo } from 'react';\nimport clsx from 'clsx';\nimport PreviewContainer from './PreviewContainer';\nimport { PreviewProps } from './types';\nimport useStyles from './styles';\n\nexport const CommonPreviewComponent: FC<PreviewProps> = ({\n  className,\n  previewClassName,\n  src,\n  error,\n  errorClassName,\n  title,\n  onLoad,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <PreviewContainer\n      className={className}\n      error={error}\n      errorClassName={errorClassName}\n      hidden={!src && !error}\n    >\n      <iframe\n        className={clsx(classes.Preview, previewClassName)}\n        title={title}\n        src={src}\n        onLoad={onLoad}\n      />\n    </PreviewContainer>\n  );\n};\n\nconst CommonPreview = memo(CommonPreviewComponent);\nCommonPreview.displayName = 'CommonPreview';\nexport default CommonPreview;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport { useObjectUrl } from './hooks';\nimport CommonPreview from './CommonPreview';\nimport InputContainer from './InputContainer';\nimport { WrappedInputProps } from './types';\n\nexport const CommonInputComponent: FC<WrappedInputProps> = ({\n  title,\n  triggerComponent = 'button',\n  files,\n  supportedFileTypes,\n  ...props\n}) => {\n  const { src, error, cleanupCallback } = useObjectUrl({\n    files,\n    supportedFileTypes,\n  });\n\n  return (\n    <InputContainer\n      triggerComponent={triggerComponent}\n      files={files}\n      {...props}\n    >\n      <CommonPreview\n        title={title}\n        src={src}\n        error={error}\n        onLoad={cleanupCallback}\n      />\n    </InputContainer>\n  );\n};\n\nconst CommonInput = memo(CommonInputComponent);\nCommonInput.displayName = 'CommonInput';\nexport default CommonInput;\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Section: {\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  Title: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport { Paper, Typography } from '@material-ui/core';\nimport { TypographyProps } from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nexport const SectionComponent: FC<SectionProps> = ({\n  className,\n  title,\n  titleVariant = 'h6',\n  titleClassName,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={clsx(classes.Section, className)}>\n      <Typography\n        className={clsx(classes.Title, titleClassName)}\n        variant={titleVariant}\n      >\n        {title}\n      </Typography>\n      {children}\n    </Paper>\n  );\n};\n\nconst Section = memo(SectionComponent);\nSection.displayName = 'Section';\nexport default Section;\n\nexport interface SectionProps {\n  className?: string;\n  title: string;\n  titleVariant?: TypographyProps['variant'];\n  titleClassName?: string;\n  children?: ReactNode;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to create a custom file input?`,\n    answer: (\n      <div>\n        <p>\n          Using a <code>button</code> to trigger the <code>click()</code> method\n          of a hidden file input\n        </p>\n        <Code language=\"tsx\">\n          {`<div\n  className={classnames(classes.FileInput, className)}\n  ref={containerRef}\n>\n  <Button\n    type=\"button\"\n    variant=\"contained\"\n    color=\"primary\"\n    size=\"small\"\n    onClick={triggerInputClick}\n  >\n    {children}\n  </Button>\n\n  <input\n    ref={inputRef}\n    type=\"file\"\n    onChange={handleInputChange}\n    hidden\n    {...props}\n  />\n\n  {filename && (\n    <Typography\n      className={classes.Filename}\n      title={filename}\n      variant=\"body1\"\n    >\n      {filename}\n    </Typography>\n  )}\n</div>`}\n        </Code>\n\n        <p>\n          Using a <code>label</code> to trigger a hidden file input\n        </p>\n        <Code language=\"tsx\">\n          {`<div\n  className={classnames(classes.FileInput, className)}\n  ref={containerRef}\n>\n  <Button\n    variant=\"contained\"\n    color=\"primary\"\n    size=\"small\"\n    component=\"label\"\n    htmlFor={id}\n  >\n    {children}\n  </Button>\n\n  <input\n    className={classnames(classes.HiddenInput)}\n    id={id}\n    type=\"file\"\n    onChange={handleInputChange}\n    {...props}\n  />\n\n  {filename && (\n    <Typography\n      className={classes.Filename}\n      title={filename}\n      variant=\"body1\"\n    >\n      {filename}\n    </Typography>\n  )}\n</div>`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Using hidden file input elements using the click() method`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Using_hidden_file_input_elements_using_the_click()_method`,\n      },\n      {\n        name: `[MDN] Using a label element to trigger a hidden file input element`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Using_a_label_element_to_trigger_a_hidden_file_input_element`,\n      },\n    ],\n  },\n  {\n    question: `How to select file(s) using drag and drop?`,\n    answer: (\n      <div>\n        <p>\n          Using the <b>Drag and Drop API</b>\n        </p>\n        <Code language=\"tsx\">\n          {`export const useDragDrop = ({\n  onChange,\n  draggable,\n}: {\n  onChange: FilesChangeListener | undefined;\n  draggable: boolean | undefined;\n}) => {\n  const draggingClass = 'dragging';\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onChangeRef = useRef<FilesChangeListener>();\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n\n    if (!container || !draggable) return undefined;\n\n    const highlight = () => container.classList.add(draggingClass);\n\n    const unhighlight = () => container.classList.remove(draggingClass);\n\n    const handleDragEnter = (e: Event) => {\n      preventDefaults(e);\n      highlight();\n    };\n\n    const handleDragLeave = (e: Event) => {\n      preventDefaults(e);\n      unhighlight();\n    };\n\n    const handleDrop = (e: DragEvent) => {\n      preventDefaults(e);\n      unhighlight();\n      if (onChangeRef.current)\n        onChangeRef.current(e.dataTransfer && e.dataTransfer.files);\n    };\n\n    container.addEventListener('dragenter', handleDragEnter);\n    container.addEventListener('dragover', handleDragEnter);\n    container.addEventListener('dragleave', handleDragLeave);\n    container.addEventListener('drop', handleDrop);\n\n    return () => {\n      container.removeEventListener('dragenter', handleDragEnter);\n      container.removeEventListener('dragover', handleDragEnter);\n      container.removeEventListener('dragleave', handleDragLeave);\n      container.removeEventListener('drop', handleDrop);\n    };\n  }, [draggable]);\n\n  return containerRef;\n};`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Selecting files using drag and drop`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Selecting_files_using_drag_and_drop`,\n      },\n      {\n        name: `[MDN] File drag and drop`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop`,\n      },\n      {\n        name: `[MDN] HTML Drag and Drop API`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API`,\n      },\n      {\n        name: `[CSS-TRICKS] Drag and Drop File Uploading`,\n        url: `https://css-tricks.com/drag-and-drop-file-uploading/`,\n      },\n      {\n        name: `[Smashing Magazine] How To Make A Drag-and-Drop File Uploader With Vanilla JavaScript`,\n        url: `https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/`,\n      },\n    ],\n  },\n  {\n    question: `How to view user-selected files?`,\n    answer: (\n      <div>\n        <p>Using data URL</p>\n        <Code language=\"tsx\">\n          {`export const useDataUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | null | undefined;\n  supportedFileTypes?: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) return;\n\n    if (supportedFileTypes && !supportedFileTypes.includes(file.type)) {\n      setError('Unsupported file type');\n      setSrc(undefined);\n      return;\n    }\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const dataUrl = fileReader.result as string;\n      setSrc(dataUrl);\n    };\n    fileReader.onerror = () => {\n      if (fileReader.error) setError(fileReader.error.message);\n    };\n    fileReader.readAsDataURL(file);\n  }, [files, supportedFileTypes]);\n\n  return { src, error };\n};`}\n        </Code>\n\n        <p>Using object URL</p>\n        <Code language=\"tsx\">\n          {`export const useObjectUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | undefined | null;\n  supportedFileTypes?: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n  const cleanupRef = useRef<VoidFunction>();\n  const cleanupCallback = useCallback(() => {\n    if (cleanupRef.current) {\n      cleanupRef.current();\n    }\n  }, []);\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) {\n      setSrc(undefined);\n      return undefined;\n    }\n\n    if (supportedFileTypes && !supportedFileTypes.includes(file.type)) {\n      setError('Unsupported file type');\n      setSrc(undefined);\n      return undefined;\n    }\n\n    let objectUrl: string | undefined;\n\n    try {\n      objectUrl = URL.createObjectURL(file);\n      setSrc(objectUrl);\n    } catch (e) {\n      setError(e);\n    }\n\n    const cleanup = () => {\n      if (objectUrl) URL.revokeObjectURL(objectUrl);\n    };\n    cleanupRef.current = cleanup;\n    return cleanup;\n  }, [files, supportedFileTypes]);\n\n  return { src, error, cleanupCallback };\n};`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Showing thumbnails of user-selected images`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Example_Showing_thumbnails_of_user-selected_images`,\n      },\n      {\n        name: `[MDN] Using object URLs to display images`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Example_Using_object_URLs_to_display_images`,\n      },\n      {\n        name: `[MDN] Using object URLs to display PDF`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Example_Using_object_URLs_to_display_PDF`,\n      },\n      {\n        name: `[MDN] Using object URLs with other file types`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Example_Using_object_URLs_with_other_file_types`,\n      },\n      {\n        name: `[MDN] URL.createObjectURL()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL`,\n      },\n      {\n        name: `[MDN] URL.revokeObjectURL()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState } from 'react';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\nimport QuestionPage from 'components/QuestionPage';\nimport {\n  ButtonFileInput,\n  LabelFileInput,\n  DataUrlImageInput,\n  ObjectUrlImageInput,\n  CommonInput,\n} from 'components/FileInput';\nimport Section from 'components/Section';\nimport questions from './questions';\n\nexport const FileInput1Impl: FC = () => {\n  const [buttonFiles, setButtonFiles] = useState<FileList | null>();\n  const [buttonDraggable, setButtonDraggable] = useState(false);\n  const [labelFiles, setLabelFiles] = useState<FileList | null>();\n  const [labelDraggable, setLabelDraggable] = useState(false);\n  const [dataUrlFiles, setDataUrlFiles] = useState<FileList | null>();\n  const [objectUrlFiles, setObjectUrlFiles] = useState<FileList | null>();\n  const [pdfFiles, setPdfFiles] = useState<FileList | null>();\n  const [videoFiles, setVideoFiles] = useState<FileList | null>();\n\n  return (\n    <QuestionPage title=\"File Input 1\" questions={questions}>\n      <Section title=\"Button File Input\">\n        <FormControlLabel\n          label=\"Draggable?\"\n          control={\n            <Checkbox\n              checked={buttonDraggable}\n              onChange={e => setButtonDraggable(e.target.checked)}\n            />\n          }\n        />\n        <ButtonFileInput\n          id=\"buttonFileInput\"\n          multiple\n          draggable={buttonDraggable}\n          files={buttonFiles}\n          onChange={setButtonFiles}\n        />\n      </Section>\n\n      <Section title=\"Label File Input\">\n        <FormControlLabel\n          label=\"Draggable?\"\n          control={\n            <Checkbox\n              id=\"labelDraggable\"\n              checked={labelDraggable}\n              onChange={e => setLabelDraggable(e.target.checked)}\n            />\n          }\n        />\n        <LabelFileInput\n          id=\"labelFileInput\"\n          multiple\n          draggable={labelDraggable}\n          files={labelFiles}\n          onChange={setLabelFiles}\n        />\n      </Section>\n\n      <Section title=\"Data URL Image Input\">\n        <DataUrlImageInput\n          id=\"dataUrlImageInput\"\n          title=\"Data URL Image Input\"\n          draggable\n          files={dataUrlFiles}\n          onChange={setDataUrlFiles}\n          accept=\"image/*\"\n        />\n      </Section>\n\n      <Section title=\"Object URL Image Input\">\n        <ObjectUrlImageInput\n          id=\"objectUrlImageInput\"\n          title=\"Object URL Image Input\"\n          draggable\n          files={objectUrlFiles}\n          onChange={setObjectUrlFiles}\n          accept=\"image/*\"\n        />\n      </Section>\n\n      <Section title=\"PDF Input\">\n        <CommonInput\n          id=\"pdfInput\"\n          title=\"PDF Input\"\n          draggable\n          files={pdfFiles}\n          onChange={setPdfFiles}\n          accept=\"application/pdf,.pdf\"\n        />\n      </Section>\n\n      <Section title=\"Video Input\">\n        <CommonInput\n          id=\"videoInput\"\n          title=\"Video Input\"\n          draggable\n          files={videoFiles}\n          onChange={setVideoFiles}\n          accept=\"video/*,.mp4,.flv,.mov,.avi,.wmv,.3pg\"\n        />\n      </Section>\n    </QuestionPage>\n  );\n};\n\nconst FileInput1 = memo(FileInput1Impl);\nFileInput1.displayName = 'FileInput1';\nexport default FileInput1;\n"],"sourceRoot":""}