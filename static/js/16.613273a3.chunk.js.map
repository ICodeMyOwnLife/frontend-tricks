{"version":3,"sources":["questions/css/TextEllipsis1/styles.module.scss","components/Question/index.tsx","questions/css/TextEllipsis1/questions.tsx","questions/css/TextEllipsis1/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss"],"names":["module","exports","Question","memo","title","questions","children","className","classes","Container","Title","Content","Questions","map","index","question","answer","references","key","Index","Answer","length","References","name","url","href","target","rel","displayName","Code","language","TextEllipsis1Impl","classnames","Table","Table1","Col1","Col2","Col3","Col4","n","Td1","Td4","Table2","TextEllipsis1","style","okaidia"],"mappings":"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","file":"static/js/16.613273a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"styles_Table__2tf1x\",\"Table1\":\"styles_Table1__2Liu2\",\"Col2\":\"styles_Col2__1vFtl\",\"Col3\":\"styles_Col3__3VxyS\",\"Col4\":\"styles_Col4__27qnj\",\"Td1\":\"styles_Td1__AfMRn\",\"Td4\":\"styles_Td4__23_G7\",\"Table2\":\"styles_Table2__p9Ysn\"};","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `Truncate long text in table column and replace with ellipsis?`,\n    answer: (\n      <div>\n        <p>Case 1: Other columns are fixed-width</p>\n        <Code language=\"scss\">\n          {`td {\n    white-space: nowrap;\n    \n  &.Td1 {\n    max-width: 0; // this column will take the remaining width\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  \n  &.Td4 {\n    max-width: 100px; // this column will take 100px\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}`}\n        </Code>\n\n        <p>Case 2: Other columns are flexible-width</p>\n        <Code language=\"scss\">\n          {`td {\n    white-space: nowrap;\n    \n  &.Td1 {\n    width: 100%;\n    max-width: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[CSS-TRICKS] Truncate String with Ellipsis`,\n        url: `https://css-tricks.com/snippets/css/truncate-string-with-ellipsis/`,\n      },\n      {\n        name: `[CSS-TRICKS] text-overflow`,\n        url: `https://css-tricks.com/almanac/properties/t/text-overflow/`,\n      },\n      {\n        name: `[MDN] text-overflow`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport Question from 'components/Question';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const TextEllipsis1Impl: FC = () => (\n  <Question title=\"Text Ellipsis 1\" questions={questions}>\n    <table className={classnames(classes.Table, classes.Table1)}>\n      <colgroup>\n        <col className={classes.Col1} />\n        <col className={classes.Col2} />\n        <col className={classes.Col3} />\n        <col className={classes.Col4} />\n      </colgroup>\n      <thead>\n        <tr>\n          <th>Col 1</th>\n          <th>Col 2</th>\n          <th>Col 3</th>\n          <th>Col 4</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {[1, 2, 3, 4, 5].map(n => (\n          <tr key={n}>\n            <td className={classes.Td1}>\n              This a very long text and a part of it should be truncated and\n              replaced with ellipsis or else the layout is broken.\n            </td>\n            <td>This is a small text.</td>\n            <td>This is a small text.</td>\n            <td className={classes.Td4}>This is another quite long text.</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n\n    <table className={classnames(classes.Table, classes.Table2)}>\n      <thead>\n        <tr>\n          <th>Column 1</th>\n          <th>Col 2</th>\n          <th>Column Header 3</th>\n          <th>4</th>\n          <th>C5</th>\n          <th>#6</th>\n          <th>No. 7</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {[1, 2, 3, 4, 5].map(n => (\n          <tr key={n}>\n            <td className={classes.Td1}>\n              This a very long text and a part of it should be truncated and\n              replaced with ellipsis or else the layout is broken.\n            </td>\n            <td />\n            <td />\n            <td />\n            <td />\n            <td />\n            <td />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </Question>\n);\n\nconst TextEllipsis1 = memo(TextEllipsis1Impl);\nTextEllipsis1.displayName = 'TextEllipsis1';\nexport default TextEllipsis1;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};"],"sourceRoot":""}