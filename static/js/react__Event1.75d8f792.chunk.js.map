{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","components/Button/index.tsx","components/Button/styles.module.scss","questions/react/Event1/styles.module.scss","questions/react/Event1/hooks.ts","questions/react/Event1/questions.tsx","questions/react/Event1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","Button","id","download","type","getEventInfo","currentTarget","eventPhase","bubbles","toString","updateEventInfo","e","setEventInfo","nativeEvent","Event","handleNotStopPropagationClick","console","log","handleReactStopPropagationClick","stopPropagation","handleNativeStopPropagationClick","stopImmediatePropagation","handleReactParentClick","handleDomParentClick","handleDomStopPropagationClick","handleDocumentClick","Event1Impl","useState","text","setText","eventInfo","handleClickSync","useCallback","useClickSyncHandler","handleClickAsync","setTimeout","useClickAsyncHandler","handleClickAsyncPersisted","persist","useClickAsyncPersistedHandler","handleChangeTextSync","value","useChangeTextSyncHandler","handleChangeTextAsync","useChangeTextAsyncHandler","handleChangeTextAsyncPersisted","useChangeTextAsyncPersistedHandler","useEffect","domClickElement","document","getElementById","parentClickElement","addEventListener","removeEventListener","Group","InputGroup","htmlFor","onChange","JSON","stringify","Event1"],"mappings":"oNA0CeA,EAvCGC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,SAAU,CACRC,WAAY,KAEdC,OAAQ,CACNC,UAAWJ,EAAMK,QAAQ,KACzBC,QAAS,EACTC,SAAU,GACVC,gBAAiBC,IAAK,IACtBC,OAAO,aAAD,OAAeD,IAAK,MAC1BE,aAAc,EAEd,MAAO,CACLL,QAASN,EAAMK,QAAQ,EAAG,MAG5B,UAAW,CACTO,OAAQZ,EAAMK,QAAQ,IAAK,IAG7B,QAAS,CACPQ,SAAU,SAGdC,WAAY,CACVF,OAAQZ,EAAMK,QAAQ,EAAG,EAAG,GAE5B,OAAQ,CACND,UAAWJ,EAAMK,QAAQ,IAG3B,OAAQ,CACNE,SAAU,GACVL,WAAY,IACZa,aAAcf,EAAMK,QAAQ,SCY5BW,EAAeC,gBArCuC,SAAC,GAKtD,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,WAEMC,EAAUxB,IADZ,EAEuByB,aAAU,GAFjC,mBAEGC,EAFH,KAESC,EAFT,KAIJ,OACE,oCACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAASH,GACxB,kBAACI,EAAA,EAAD,CAAcP,QAAS,CAAEQ,QAASR,EAAQrB,WACvCiB,EADH,KACYC,IAGd,kBAACY,EAAA,EAAD,CAAUC,GAAIR,EAAMS,QAAQ,QAC1B,kBAACC,EAAA,EAAD,CAAKC,UAAWb,EAAQnB,QAASiB,KAC9BC,GAAcA,EAAWe,QAC1B,kBAACF,EAAA,EAAD,CAAKC,UAAWb,EAAQR,YACtB,kBAACuB,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACA,4BACGjB,EAAWkB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACd,wBAAIC,IAAKD,GACP,uBAAGE,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAC/BL,cAarBxB,EAAa8B,YAAc,eACZ9B,QC9BAlB,EAnBGC,aAAW,SAACC,GAAD,MAAmB,CAC9C+C,UAAW,CACT3C,UAAWJ,EAAMK,QAAQ,IAE3B2C,QAAS,CACP5C,UAAWJ,EAAMK,QAAQ,MAE3B4C,UAAW,CACT7C,UAAWJ,EAAMK,QAAQ,GAEzB,SAAU,CACR6C,WAAW,oCACX3C,SAAU,GACVL,WAAY,IACZiD,MAAM,0BCiBNC,EAAenC,gBAzBkC,SAAC,GAIjD,IAHLoC,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEMjC,EAAUxB,IAEhB,OACE,kBAACoC,EAAA,EAAD,CAAKC,UAAWb,EAAQyB,WACtB,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAAMe,GAC1B,kBAACnB,EAAA,EAAD,CAAKC,UAAWb,EAAQ0B,SAAUO,GAClC,kBAACrB,EAAA,EAAD,CAAKC,UAAWb,EAAQ2B,WACtB,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,MAApB,aACA,kBAACJ,EAAA,EAAD,KACE,kBAACsB,EAAA,EAAD,KACGF,EAAUf,KAAI,SAACkB,EAAcvC,GAAf,OACb,kBAAC,EAAD,eAAcwB,IAAKxB,EAAOA,MAAOA,EAAQ,GAAOuC,cAU9DL,EAAaN,YAAc,eACZM,O,iCCnCf,0EAmBMM,EAAOzC,gBAb0B,SAAC,GAAD,IACrCkB,EADqC,EACrCA,UACAoB,EAFqC,EAErCA,SAFqC,IAGrCI,aAHqC,MAG7BC,IAH6B,EAIrCC,EAJqC,EAIrCA,SAJqC,OAMrC,yBAAK1B,UAAW2B,IAAWxC,IAAQoC,KAAMvB,IACvC,kBAAC,IAAD,CAAmB0B,SAAUA,EAAUF,MAAOA,GAC3CJ,OAMPG,EAAKZ,YAAc,OACJY,O,oBCpBfK,EAAOC,QAAU,CAAC,KAAO,uB,iCCDzB,wDA6CMC,EAAShD,gBAnC4B,SAAC,GAAD,IACzCkB,EADyC,EACzCA,UACA+B,EAFyC,EAEzCA,GACAvB,EAHyC,EAGzCA,KACAC,EAJyC,EAIzCA,OACAC,EALyC,EAKzCA,IACAsB,EANyC,EAMzCA,SANyC,IAOzCC,YAPyC,MAOlC,SAPkC,EAQzCxC,EARyC,EAQzCA,QACA2B,EATyC,EASzCA,SATyC,OAWzCZ,EACE,uBACER,UAAW2B,IAAWxC,IAAQ2C,OAAQ9B,GACtC+B,GAAIA,EACJvB,KAAMA,EACNC,OAAQA,EACRC,IAAKA,EACLsB,SAAUA,EACVvC,QAASA,GAER2B,GAIH,4BACEpB,UAAW2B,IAAWxC,IAAQ2C,OAAQ9B,GACtC+B,GAAIA,EACJE,KAAMA,EACNxC,QAASA,GAER2B,MAKPU,EAAOnB,YAAc,SACNmB,O,oBC9CfF,EAAOC,QAAU,CAAC,WAAa,2BAA2B,OAAS,yB,oBCAnED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,WAAa,6B,4TCE7D,IAAMK,EAAe,SAAC,GAAD,IACnBC,EADmB,EACnBA,cACA1B,EAFmB,EAEnBA,OACA2B,EAHmB,EAGnBA,WACAC,EAJmB,EAInBA,QACAJ,EALmB,EAKnBA,KALmB,MAMc,CACjCE,cAAeA,GAAiBA,EAAcG,WAC9C7B,OAAQA,GAAUA,EAAO6B,WACzBF,aACAC,UACAJ,SAGIM,EAAkB,SACtBC,EACAC,GAKAA,E,yVADe,EAAKC,YADlBF,EAAEE,uBAAuBC,MAAQT,EAAaM,EAAEE,aAAe,IAC7BR,EAAaM,MA8EtCI,EAAgC,WAC3CC,QAAQC,IAAR,+BAGWC,EAAkC,SAACP,GAC9CK,QAAQC,IAAR,0BACAN,EAAEQ,mBAGSC,EAAmC,SAC9CT,GAEAK,QAAQC,IAAR,iCACAN,EAAEQ,kBACFR,EAAEE,YAAYQ,4BAGHC,EAAyB,kBAAMN,QAAQC,IAAR,yBAE/BM,EAAuB,kBAAMP,QAAQC,IAAR,uBAEpCO,EAAgC,SAACb,GACrCK,QAAQC,IAAR,8BACAN,EAAEQ,mBAGEM,EAAsB,kBAAMT,QAAQC,IAAR,mB,SClBnB3B,EAzGmB,CAChC,CACEnC,SAAS,0EACTC,OACE,6BACE,2BACE,gDADF,+IAG0B,mDAH1B,OAG6D,IAC3D,kDAJF,6DAOA,kCACM,gDADN,kCACiE,IAC/D,gDAFF,0GAKA,iHAEc,iDAFd,qIAMA,yCACa,oDADb,yCAEc,yCAFd,KAEoC,0CAFpC,sRAM0D,IACxD,6CAPF,4JASmC,+CATnC,oDAcJC,WAAY,CACV,CACEmB,KAAK,yBACLC,IAAI,wCAEN,CACED,KAAK,oDACLC,IAAI,8EAEN,CACED,KAAK,sCACLC,IAAI,sEAIV,CACEtB,SAAS,uDACTC,OACE,6BACE,mDACuB,gDADvB,+BAEQ,yCAFR,WAEoC,mDAFpC,MAEsE,IACpE,gDAHF,WAKA,kBAACsC,EAAA,EAAD,CAAMG,SAAS,OAAf,uFAMA,0DAC8B,uCAD9B,+BAEQ,kDAFR,kBAEqD,IACnD,0CAHF,UAG8B,0DAH9B,cAIS,uCAJT,WAMA,kBAACH,EAAA,EAAD,CAAMG,SAAS,OAAf,4GAMA,0DAC8B,uCAD9B,+BAEQ,kDAFR,gCAEmE,IACjE,0CAHF,oDAGyE,IACvE,gDAJF,4CAIuE,IACrE,kDALF,cAK0C,iDAA6B,IALvE,aAMY,uCANZ,WAQA,kBAACH,EAAA,EAAD,CAAMG,SAAS,OAAf,uHASJxC,WAAY,CACV,CACEmB,KAAK,yFACLC,IAAI,uH,6DClFL,IAAMiD,EAAiB,WAAO,IAAD,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,OAEAF,qBAFA,mBAE3BG,EAF2B,KAEhBlB,EAFgB,KAG5BmB,EFG2B,SAACnB,GAAD,OACjCoB,uBACE,SAACrB,GACCD,EAAgBC,EAAGC,KAErB,CAACA,IERqBqB,CAAoBrB,GACtCsB,EFU4B,SAACtB,GAAD,OAClCoB,uBACE,SAACrB,GACCwB,YAAW,WACTzB,EAAgBC,EAAGC,KAClB,KAEL,CAACA,IEjBsBwB,CAAqBxB,GACxCyB,EFmBqC,SAC3CzB,GAD2C,OAG3CoB,uBACE,SAACrB,GACCA,EAAE2B,UAEFH,YAAW,WACTzB,EAAgBC,EAAGC,KAClB,KAEL,CAACA,IE9B+B2B,CAA8B3B,GAC1D4B,EFgCgC,SACtCX,EACAjB,GAFsC,OAItCoB,uBACE,SAACrB,GACKA,EAAE/B,QAAQiD,EAAQlB,EAAE/B,OAAO6D,OAC/B/B,EAAgBC,EAAGC,KAErB,CAACA,EAAciB,IEzCYa,CAAyBb,EAASjB,GACzD+B,EF2CiC,SACvCd,EACAjB,GAFuC,OAIvCoB,uBACE,SAACrB,GACCwB,YAAW,WACLxB,EAAE/B,QAAQiD,EAAQlB,EAAE/B,OAAO6D,OAC/B/B,EAAgBC,EAAGC,KAClB,KAEL,CAACA,EAAciB,IEtDae,CAC5Bf,EACAjB,GAEIiC,EFqD0C,SAChDhB,EACAjB,GAFgD,OAIhDoB,uBACE,SAACrB,GACCA,EAAE2B,UAEFH,YAAW,WACLxB,EAAE/B,QAAQiD,EAAQlB,EAAE/B,OAAO6D,OAC/B/B,EAAgBC,EAAGC,KAClB,KAEL,CAACA,EAAciB,IElEsBiB,CACrCjB,EACAjB,GAIF,OF4FAmC,qBAAU,WACR,IAAMC,EAAkBC,SAASC,eAAe,YAC1CC,EAAqBF,SAASC,eAAe,eAKnD,OAJAF,EAAgBI,iBAAiB,QAAS5B,GAC1C2B,EAAmBC,iBAAiB,QAAS7B,GAC7C0B,SAASG,iBAAiB,QAAS3B,GAE5B,WACLuB,EAAgBK,oBACd,QACA7B,GAEF2B,EAAmBE,oBAAoB,QAAS9B,GAChD0B,SAASI,oBAAoB,QAAS5B,MAEvC,IE1GD,kBAACrC,EAAA,EAAD,CAAcC,MAAM,UAAUC,UAAWA,GACvC,yBAAKnB,UAAWb,IAAQgG,OACtB,kBAACrD,EAAA,EAAD,CAAQrC,QAASmE,GAAjB,cACA,kBAAC9B,EAAA,EAAD,CAAQrC,QAASsE,GAAjB,eACA,kBAACjC,EAAA,EAAD,CAAQrC,QAASyE,GAAjB,0BAKF,yBAAKlE,UAAWb,IAAQgG,OACtB,yBAAKnF,UAAWb,IAAQiG,YACtB,2BAAOC,QAAQ,YAAf,QACA,2BACEpD,KAAK,OACL5B,KAAK,OACL0B,GAAG,WACHuC,MAAOb,EACP6B,SAAUjB,KAId,yBAAKrE,UAAWb,IAAQiG,YACtB,2BAAOC,QAAQ,aAAf,SACA,2BACEpD,KAAK,OACL5B,KAAK,OACL0B,GAAG,YACHuC,MAAOb,EACP6B,SAAUd,KAId,yBAAKxE,UAAWb,IAAQiG,YACtB,2BAAOC,QAAQ,sBAAf,mBACA,2BACEpD,KAAK,OACL5B,KAAK,OACL0B,GAAG,qBACHuC,MAAOb,EACP6B,SAAUZ,MAKff,GAAa,6BAAM4B,KAAKC,UAAU7B,EAAW,KAAM,IAEpD,yBACE3D,UAAWb,IAAQgG,MACnBpD,GAAG,cACHtC,QAAS0D,GAET,kBAACrB,EAAA,EAAD,CAAQrC,QAASmD,GAAjB,wBAIA,kBAACd,EAAA,EAAD,CAAQrC,QAASsD,GAAjB,0BAIA,kBAACjB,EAAA,EAAD,CAAQrC,QAASwD,GAAjB,2BAIA,kBAACnB,EAAA,EAAD,CAAQC,GAAG,YAAX,2BAMF0D,EAAS3G,eAAKyE,GACpBkC,EAAO9E,YAAc,SACN8E","file":"static/js/react__Event1.75d8f792.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import React, {\n  FC,\n  memo,\n  ReactNode,\n  ButtonHTMLAttributes,\n  SyntheticEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport classes from './styles.module.scss';\n\nexport const ButtonImpl: FC<ButtonProps> = ({\n  className,\n  id,\n  href,\n  target,\n  rel,\n  download,\n  type = 'button',\n  onClick,\n  children,\n}) =>\n  href ? (\n    <a\n      className={classnames(classes.Button, className)}\n      id={id}\n      href={href}\n      target={target}\n      rel={rel}\n      download={download}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  ) : (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      className={classnames(classes.Button, className)}\n      id={id}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n\nconst Button = memo(ButtonImpl);\nButton.displayName = 'Button';\nexport default Button;\n\nexport interface ButtonProps {\n  className?: string;\n  id?: string;\n  href?: string;\n  target?: string;\n  rel?: string;\n  download?: string;\n  type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  onClick?: (e: SyntheticEvent) => void;\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonBase\":\"styles_ButtonBase__3uhxr\",\"Button\":\"styles_Button__1Ekk8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Group\":\"styles_Group__25Abc\",\"InputGroup\":\"styles_InputGroup__2MPiq\"};","/* eslint-disable no-console */\nimport { BaseSyntheticEvent, useCallback, ChangeEvent, useEffect } from 'react';\n\nconst getEventInfo = ({\n  currentTarget,\n  target,\n  eventPhase,\n  bubbles,\n  type,\n}: Event | BaseSyntheticEvent) => ({\n  currentTarget: currentTarget && currentTarget.toString(),\n  target: target && target.toString(),\n  eventPhase,\n  bubbles,\n  type,\n});\n\nconst updateEventInfo = (\n  e: BaseSyntheticEvent,\n  setEventInfo: (eventInfo: any) => void,\n) => {\n  const nativeEvent =\n    e.nativeEvent instanceof Event ? getEventInfo(e.nativeEvent) : {};\n  const eventInfo = { nativeEvent, ...getEventInfo(e) };\n  setEventInfo(eventInfo);\n};\n\nexport const useClickSyncHandler = (setEventInfo: (eventInfo: any) => void) =>\n  useCallback(\n    (e: BaseSyntheticEvent) => {\n      updateEventInfo(e, setEventInfo);\n    },\n    [setEventInfo],\n  );\n\nexport const useClickAsyncHandler = (setEventInfo: (eventInfo: any) => void) =>\n  useCallback(\n    (e: BaseSyntheticEvent) => {\n      setTimeout(() => {\n        updateEventInfo(e, setEventInfo);\n      }, 0);\n    },\n    [setEventInfo],\n  );\n\nexport const useClickAsyncPersistedHandler = (\n  setEventInfo: (eventInfo: any) => void,\n) =>\n  useCallback(\n    (e: BaseSyntheticEvent) => {\n      e.persist();\n\n      setTimeout(() => {\n        updateEventInfo(e, setEventInfo);\n      }, 0);\n    },\n    [setEventInfo],\n  );\n\nexport const useChangeTextSyncHandler = (\n  setText: (text: string) => void,\n  setEventInfo: (eventInfo: any) => void,\n) =>\n  useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (e.target) setText(e.target.value);\n      updateEventInfo(e, setEventInfo);\n    },\n    [setEventInfo, setText],\n  );\n\nexport const useChangeTextAsyncHandler = (\n  setText: (text: string) => void,\n  setEventInfo: (eventInfo: any) => void,\n) =>\n  useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setTimeout(() => {\n        if (e.target) setText(e.target.value);\n        updateEventInfo(e, setEventInfo);\n      }, 0);\n    },\n    [setEventInfo, setText],\n  );\n\nexport const useChangeTextAsyncPersistedHandler = (\n  setText: (text: string) => void,\n  setEventInfo: (eventInfo: any) => void,\n) =>\n  useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      e.persist();\n\n      setTimeout(() => {\n        if (e.target) setText(e.target.value);\n        updateEventInfo(e, setEventInfo);\n      }, 0);\n    },\n    [setEventInfo, setText],\n  );\n\nexport const handleNotStopPropagationClick = () => {\n  console.log(`Not Stop Propagation Click`);\n};\n\nexport const handleReactStopPropagationClick = (e: BaseSyntheticEvent) => {\n  console.log(`Stop Propagation Click`);\n  e.stopPropagation();\n};\n\nexport const handleNativeStopPropagationClick = (\n  e: BaseSyntheticEvent<Event>,\n) => {\n  console.log(`Native Stop Propagation Click`);\n  e.stopPropagation();\n  e.nativeEvent.stopImmediatePropagation();\n};\n\nexport const handleReactParentClick = () => console.log(`[React] Parent Click`);\n\nexport const handleDomParentClick = () => console.log(`[DOM] Parent Click`);\n\nconst handleDomStopPropagationClick = (e: Event) => {\n  console.log(`Dom Stop Propagation Click`);\n  e.stopPropagation();\n};\n\nconst handleDocumentClick = () => console.log(`Document Click`);\n\nexport const useClickEvents = () =>\n  useEffect(() => {\n    const domClickElement = document.getElementById('domClick')!;\n    const parentClickElement = document.getElementById('parentClick')!;\n    domClickElement.addEventListener('click', handleDomStopPropagationClick);\n    parentClickElement.addEventListener('click', handleDomParentClick);\n    document.addEventListener('click', handleDocumentClick);\n\n    return () => {\n      domClickElement.removeEventListener(\n        'click',\n        handleDomStopPropagationClick,\n      );\n      parentClickElement.removeEventListener('click', handleDomParentClick);\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, []);\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `What is the difference between React event object and DOM event object?`,\n    answer: (\n      <div>\n        <p>\n          <code>SyntheticEvent</code> is a cross-browser wrapper around the\n          browser’s native event. It has the same interface as the browser’s\n          native event, including <code>stopPropagation()</code> and{' '}\n          <code>preventDefault()</code>, except the events work identically\n          across all browsers.\n        </p>\n        <p>\n          The <code>SyntheticEvent</code> is pooled. This means that the{' '}\n          <code>SyntheticEvent</code> object will be reused and all properties\n          will be nullified after the event callback has been invoked.\n        </p>\n        <p>\n          If you want to access the event properties in an asynchronous way, you\n          should call <code>event.persist()</code> on the event, which will\n          remove the synthetic event from the pool and allow references to the\n          event to be retained by user code.\n        </p>\n        <p>\n          There is a <b>single global handler</b>: Whenever we use the on*\n          attributes (<code>onClick</code>, <code>onChange</code>, etc), we are\n          describing to React the behavior we want to achieve, but the library\n          does not attach the actual event handler to the underlying DOM nodes.\n          What it does instead is attach a single event handler to the root\n          element, which listens to all the events, thanks to the{' '}\n          <b>event bubbling</b>. When an event we are interested in is fired by\n          the browser, React calls the handler on the specific components on its\n          behalf. This technique is called <b>event delegation</b> and is used\n          for memory and speed optimization.\n        </p>\n      </div>\n    ),\n    references: [\n      {\n        name: `[React] SyntheticEvent`,\n        url: `https://reactjs.org/docs/events.html`,\n      },\n      {\n        name: `[React Design Patterns and Best Practices] Events`,\n        url: `https://www.amazon.com/React-Design-Patterns-Best-Practices/dp/1786464535/`,\n      },\n      {\n        name: `[Medium] React SyntheticEvent reuse`,\n        url: `https://medium.com/trabe/react-syntheticevent-reuse-889cd52981b6`,\n      },\n    ],\n  },\n  {\n    question: `How to stop an event from propagating to its parent?`,\n    answer: (\n      <div>\n        <p>\n          If parent event is a <code>SyntheticEvent</code> one (e.g. registered\n          using <code>onClick</code>): Call <code>stopPropagation()</code> on{' '}\n          <code>SyntheticEvent</code> object\n        </p>\n        <Code language=\"tsx\">\n          {`const handleClick = (e: BaseSyntheticEvent<Event>) => {\n  e.stopPropagation();\n};`}\n        </Code>\n\n        <p>\n          If parent event is a native <code>Event</code> one (e.g. registered\n          using <code>addEventListener</code>) and parent is{' '}\n          <code>document</code>: Call <code>stopImmediatePropagation</code> on\n          native <code>Event</code> object\n        </p>\n        <Code language=\"tsx\">\n          {`const handleClick = (e: BaseSyntheticEvent<Event>) => {\n  e.nativeEvent.stopImmediatePropagation();\n};`}\n        </Code>\n\n        <p>\n          If parent event is a native <code>Event</code> one (e.g. registered\n          using <code>addEventListener</code>) and parent is descendant of{' '}\n          <code>document</code>: There is no way to stop propagation using React{' '}\n          <code>SyntheticEvent</code>, child event must to be registered using{' '}\n          <code>addEventListener</code> then call <code>stopPropagation</code>{' '}\n          on native <code>Event</code> object\n        </p>\n        <Code language=\"tsx\">\n          {`const handleClick = (e: Event) => {\n  e.stopPropagation();\n};\n\nelement.addEventListener('click', handleClick);`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Stack Overflow] ReactJS SyntheticEvent stopPropagation() only works with React events`,\n        url: `https://stackoverflow.com/questions/24415631/reactjs-syntheticevent-stoppropagation-only-works-with-react-events`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { FC, memo, useState } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport Button from 'components/Button';\nimport {\n  useClickSyncHandler,\n  useClickAsyncHandler,\n  useClickAsyncPersistedHandler,\n  useChangeTextSyncHandler,\n  useChangeTextAsyncHandler,\n  useChangeTextAsyncPersistedHandler,\n  handleReactParentClick,\n  handleReactStopPropagationClick,\n  handleNativeStopPropagationClick,\n  useClickEvents,\n  handleNotStopPropagationClick,\n} from './hooks';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Event1Impl: FC = () => {\n  const [text, setText] = useState('');\n  const [eventInfo, setEventInfo] = useState<any>();\n  const handleClickSync = useClickSyncHandler(setEventInfo);\n  const handleClickAsync = useClickAsyncHandler(setEventInfo);\n  const handleClickAsyncPersisted = useClickAsyncPersistedHandler(setEventInfo);\n  const handleChangeTextSync = useChangeTextSyncHandler(setText, setEventInfo);\n  const handleChangeTextAsync = useChangeTextAsyncHandler(\n    setText,\n    setEventInfo,\n  );\n  const handleChangeTextAsyncPersisted = useChangeTextAsyncPersistedHandler(\n    setText,\n    setEventInfo,\n  );\n  useClickEvents();\n\n  return (\n    <QuestionPage title=\"Event 1\" questions={questions}>\n      <div className={classes.Group}>\n        <Button onClick={handleClickSync}>Click Sync</Button>\n        <Button onClick={handleClickAsync}>Click Async</Button>\n        <Button onClick={handleClickAsyncPersisted}>\n          Click Async Persisted\n        </Button>\n      </div>\n\n      <div className={classes.Group}>\n        <div className={classes.InputGroup}>\n          <label htmlFor=\"textSync\">Sync</label>\n          <input\n            type=\"text\"\n            name=\"text\"\n            id=\"textSync\"\n            value={text}\n            onChange={handleChangeTextSync}\n          />\n        </div>\n\n        <div className={classes.InputGroup}>\n          <label htmlFor=\"textAsync\">Async</label>\n          <input\n            type=\"text\"\n            name=\"text\"\n            id=\"textAsync\"\n            value={text}\n            onChange={handleChangeTextAsync}\n          />\n        </div>\n\n        <div className={classes.InputGroup}>\n          <label htmlFor=\"textAsyncPersisted\">Async Persisted</label>\n          <input\n            type=\"text\"\n            name=\"text\"\n            id=\"textAsyncPersisted\"\n            value={text}\n            onChange={handleChangeTextAsyncPersisted}\n          />\n        </div>\n      </div>\n\n      {eventInfo && <pre>{JSON.stringify(eventInfo, null, 2)}</pre>}\n\n      <div\n        className={classes.Group}\n        id=\"parentClick\"\n        onClick={handleReactParentClick}\n      >\n        <Button onClick={handleNotStopPropagationClick}>\n          Not Stop Propagation\n        </Button>\n\n        <Button onClick={handleReactStopPropagationClick}>\n          React Stop Propagation\n        </Button>\n\n        <Button onClick={handleNativeStopPropagationClick}>\n          Native Stop Propagation\n        </Button>\n\n        <Button id=\"domClick\">DOM Stop Propagation</Button>\n      </div>\n    </QuestionPage>\n  );\n};\n\nconst Event1 = memo(Event1Impl);\nEvent1.displayName = 'Event1';\nexport default Event1;\n"],"sourceRoot":""}