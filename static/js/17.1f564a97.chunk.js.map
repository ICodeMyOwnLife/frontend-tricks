{"version":3,"sources":["questions/dom/LiveEdit1/styles.module.scss","questions/dom/LiveEdit1/questions.tsx","questions/dom/LiveEdit1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss"],"names":["module","exports","questions","question","answer","Code","language","references","name","url","LiveEdit1Impl","Question","title","className","contentEditable","suppressContentEditableWarning","classes","StyleEditor","LiveEdit1","memo","displayName","children","Container","Title","Content","Questions","map","index","key","Index","Answer","length","References","href","target","rel","style","okaidia","classnames"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,YAAc,8B,4ECyDjBC,EAtDmB,CAChC,CACEC,SAAS,wCACTC,OACE,6BACE,sCACU,iDADV,6DAIA,kBAACC,EAAA,EAAD,CAAMC,SAAS,UAAf,sGAKA,kCACM,uCADN,wCAC8D,IAC5D,iDAEF,kBAACD,EAAA,EAAD,CAAMC,SAAS,QAAf,wPAeJC,WAAY,CACV,CACEC,KAAK,wBACLC,IAAI,uFAEN,CACED,KAAK,gCACLC,IAAI,4EAEN,CACED,KAAK,6DACLC,IAAI,kGAEN,CACED,KAAK,8GACLC,IAAI,oI,kBCpDZ,4CAKO,IAAMC,EAAoB,kBAC/B,kBAACC,EAAA,EAAD,CAAUC,MAAM,cAAcV,UAAWA,GACvC,yBACEW,UAAU,eACVC,iBAAe,EACfC,gCAA8B,GAE9B,2gBAUA,4bAQA,6bAUF,2BACEF,UAAWG,IAAQC,YACnBH,iBAAe,EACfC,gCAA8B,GAHhC,iJAmBEG,EAAYC,eAAKT,GACvBQ,EAAUE,YAAc,YACTF,a,gCC7Df,qCA4CMP,EAAWQ,eAzC8B,SAAC,GAAD,IAC7CP,EAD6C,EAC7CA,MACAV,EAF6C,EAE7CA,UACAmB,EAH6C,EAG7CA,SAH6C,OAK7C,yBAAKR,UAAWG,IAAQM,WACtB,wBAAIT,UAAWG,IAAQO,OAAQX,GAC/B,yBAAKC,UAAWG,IAAQQ,SAAUH,GAClC,yBAAKR,UAAWG,IAAQS,WACtB,yCACA,6BACGvB,EAAUwB,IAAI,WAAmCC,GAAnC,IAAGxB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQG,EAArB,EAAqBA,WAArB,OAEb,6BAASqB,IAAKD,GACZ,6BAASd,UAAWG,IAAQL,UAC1B,0BAAME,UAAWG,IAAQa,OAAQF,EAAQ,EAAzC,KADF,IACuDxB,GAGvD,yBAAKU,UAAWG,IAAQc,QAAS1B,GAEhCG,GAAcA,EAAWwB,QACxB,yBAAKlB,UAAWG,IAAQgB,YACtB,0CACA,4BACGzB,EAAWmB,IAAI,gBAAGlB,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACd,wBAAImB,IAAKnB,GACP,uBAAGwB,KAAMxB,EAAKyB,OAAO,SAASC,IAAI,uBAC/B3B,gBAezBG,EAASS,YAAc,WACRT,O,mBC7CfX,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,QAAU,wBAAwB,UAAY,0BAA0B,SAAW,yBAAyB,MAAQ,sBAAsB,OAAS,uBAAuB,WAAa,6B,gCCD7Q,wEAmBMI,EAAOc,eAb0B,SAAC,GAAD,IACrCN,EADqC,EACrCA,UACAQ,EAFqC,EAErCA,SAFqC,IAGrCe,aAHqC,MAG7BC,IAH6B,EAIrC/B,EAJqC,EAIrCA,SAJqC,OAMrC,yBAAKO,UAAWyB,IAAWtB,IAAQX,KAAMQ,IACvC,kBAAC,IAAD,CAAmBP,SAAUA,EAAU8B,MAAOA,GAC3Cf,MAMPhB,EAAKe,YAAc,OACJf,O,mBCpBfL,EAAOC,QAAU,CAAC,KAAO","file":"static/js/17.1f564a97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StyleEditor\":\"styles_StyleEditor__3Ea5_\"};","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to live edit elements and styles?`,\n    answer: (\n      <div>\n        <p>\n          Set the <code>contenteditable</code> attribute on nearly any HTML\n          element to make it editable\n        </p>\n        <Code language=\"markup\">\n          {`<div class=\"EditableText\" contenteditable=\"true\">\n  <p>Lorem ipsum dolor sit amet ...</p>\n</div>`}\n        </Code>\n        <p>\n          For <code>style</code> tag, we have to make it appear using{' '}\n          <code>display: block</code>\n        </p>\n        <Code language=\"scss\">\n          {`.StyleEditor {\n  display: block;\n  padding: 20px;\n  font-family: 'Courier New', Courier, monospace;\n  font-size: 16px;\n  font-weight: bold;\n  color: #ecffca;\n  background-color: black;\n  white-space: pre;\n  caret-color: aquamarine;\n}`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] contenteditable`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable`,\n      },\n      {\n        name: `[MDN] Making content editable`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Editable_content`,\n      },\n      {\n        name: `[Medium] Make a HTML element editable with contenteditable`,\n        url: `https://medium.com/@samanthaming/make-a-html-element-editable-with-contenteditable-abe7358640e`,\n      },\n      {\n        name: `[Stack Overflow] Why does React warn against an contentEditable component having children managed by React?`,\n        url: `https://stackoverflow.com/questions/49639144/why-does-react-warn-against-an-contenteditable-component-having-children-managed`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport Question from 'components/Question';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const LiveEdit1Impl: FC = () => (\n  <Question title=\"Live Edit 1\" questions={questions}>\n    <div\n      className=\"EditableText\"\n      contentEditable\n      suppressContentEditableWarning\n    >\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent ligula\n        risus, viverra ac porta non, volutpat sed est. Integer lectus odio,\n        convallis vitae tincidunt vitae, semper vitae tortor. Interdum et\n        malesuada fames ac ante ipsum primis in faucibus. Suspendisse quis\n        aliquet nibh. Pellentesque erat metus, congue ut dui quis, dapibus porta\n        sem. Cras porttitor nisl arcu, in rutrum est ornare eget. Fusce quis\n        eleifend purus, et interdum sapien. Etiam rutrum est a erat accumsan\n        auctor.\n      </p>\n      <p>\n        Aliquam non ornare turpis. Pellentesque laoreet efficitur libero euismod\n        molestie. Quisque imperdiet arcu nunc, ut cursus tellus elementum eu.\n        Nullam id dui nisi. Quisque maximus enim libero, eleifend faucibus quam\n        porta tincidunt. Quisque vestibulum, libero vitae viverra luctus, ligula\n        metus elementum ex, ut varius dui elit in nunc. Morbi elementum faucibus\n        aliquam. Sed commodo sapien eu odio maximus pretium.\n      </p>\n      <p>\n        Morbi ut ligula sollicitudin, fringilla orci vel, lobortis est. Fusce\n        consequat tellus eget dolor egestas, sit amet suscipit ex luctus. Nulla\n        venenatis finibus sapien eu blandit. Nunc porttitor nulla ac hendrerit\n        gravida. Pellentesque non tristique turpis, at aliquet tellus.\n        Suspendisse potenti. Fusce tempus turpis non fermentum placerat. Nunc\n        hendrerit mi velit. Duis ultricies facilisis lorem vel scelerisque.\n      </p>\n    </div>\n\n    <style\n      className={classes.StyleEditor}\n      contentEditable\n      suppressContentEditableWarning\n    >\n      {`.EditableText {\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid lightgray;\n}\n\n.EditableText p {\n  margin: 0 0 12px;\n}\n`}\n    </style>\n  </Question>\n);\n\nconst LiveEdit1 = memo(LiveEdit1Impl);\nLiveEdit1.displayName = 'LiveEdit1';\nexport default LiveEdit1;\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};"],"sourceRoot":""}