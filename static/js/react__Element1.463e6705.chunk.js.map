{"version":3,"sources":["components/QuestionItem/styles.ts","components/QuestionItem/index.tsx","components/QuestionPage/styles.ts","components/QuestionPage/index.tsx","components/Code/index.tsx","components/Code/styles.module.scss","questions/react/Element1/styles.module.scss","questions/react/Element1/hooks.ts","questions/react/Element1/questions.tsx","questions/react/Element1/index.tsx"],"names":["useStyles","makeStyles","theme","Question","fontWeight","Answer","marginTop","spacing","padding","fontSize","backgroundColor","grey","border","borderRadius","margin","maxWidth","References","marginBottom","QuestionItem","memo","index","question","answer","references","classes","useToggle","open","toggleOpen","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","Box","className","length","Typography","variant","map","name","url","key","href","target","rel","displayName","Container","Content","Questions","fontFamily","color","QuestionPage","title","questions","children","List","questionInfo","Code","style","okaidia","language","classnames","module","exports","useForm","initialData","useState","data","setData","onChange","useCallback","e","prevData","nextValue","get","Number","value","String","Boolean","checked","console","warn","nextData","cloneDeep","set","element","props","cloneElement","id","Element1Impl","active","getFieldDecorator","Form","InputGroup","InputLabel","htmlFor","InputControl","type","Checkbox","Data","JSON","stringify","Element1"],"mappings":"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","file":"static/js/react__Element1.463e6705.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Question: {\n    fontWeight: 500,\n  },\n  Answer: {\n    marginTop: theme.spacing(1.5),\n    padding: 0,\n    fontSize: 14,\n    backgroundColor: grey[50],\n    border: `1px solid ${grey[400]}`,\n    borderRadius: 6,\n\n    '& p': {\n      padding: theme.spacing(0, 2.5),\n    },\n\n    '& ol,ul': {\n      margin: theme.spacing(1.5, 0),\n    },\n\n    '& img': {\n      maxWidth: '100%',\n    },\n  },\n  References: {\n    margin: theme.spacing(3, 0, 0),\n\n    '& ol': {\n      marginTop: theme.spacing(1),\n    },\n\n    '& li': {\n      fontSize: 14,\n      fontWeight: 500,\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport useToggle from 'hooks/useToggle';\nimport useStyles from './styles';\n\nexport const QuestionItemComponent: FC<QuestionItemProps> = ({\n  index,\n  question,\n  answer,\n  references,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n\n  return (\n    <>\n      <ListItem button onClick={toggleOpen}>\n        <ListItemText classes={{ primary: classes.Question }}>\n          {index}. {question}\n        </ListItemText>\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <Box className={classes.Answer}>{answer}</Box>\n        {!!references && references.length && (\n          <Box className={classes.References}>\n            <Typography variant=\"h4\">References</Typography>\n            <ol>\n              {references.map(({ name, url }) => (\n                <li key={url}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </Box>\n        )}\n      </Collapse>\n    </>\n  );\n};\n\nconst QuestionItem = memo(QuestionItemComponent);\nQuestionItem.displayName = 'QuestionItem';\nexport default QuestionItem;\n\nexport interface QuestionItemProps extends QuestionInfo {\n  index: number;\n}\n","import { Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Container: {\n    marginTop: theme.spacing(4),\n  },\n  Content: {\n    marginTop: theme.spacing(2.5),\n  },\n  Questions: {\n    marginTop: theme.spacing(4),\n\n    '& code': {\n      fontFamily: `'Courier New', Courier, monospace`,\n      fontSize: 14,\n      fontWeight: 600,\n      color: `rgb(219, 104, 27)`,\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ReactNode } from 'react';\nimport { Box, Typography, List } from '@material-ui/core';\nimport QuestionItem from 'components/QuestionItem';\nimport { QuestionInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const QuestionPageImpl: FC<QuestionPageProps> = ({\n  title,\n  questions,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.Container}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Box className={classes.Content}>{children}</Box>\n      <Box className={classes.Questions}>\n        <Typography variant=\"h3\">Questions</Typography>\n        <Box>\n          <List>\n            {questions.map((questionInfo, index) => (\n              <QuestionItem key={index} index={index + 1} {...questionInfo} />\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst QuestionPage = memo(QuestionPageImpl);\nQuestionPage.displayName = 'QuestionPage';\nexport default QuestionPage;\n\nexport interface QuestionPageProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"styles_Form__1rZ8s\",\"InputGroup\":\"styles_InputGroup__22x65\",\"InputLabel\":\"styles_InputLabel__1qYdK\",\"InputControl\":\"styles_InputControl__a8_bX\",\"Checkbox\":\"styles_Checkbox__3xscn\",\"Data\":\"styles_Data__3jVds\"};","import {\n  useState,\n  ChangeEvent,\n  useCallback,\n  FormEvent,\n  cloneElement,\n  ReactElement,\n} from 'react';\nimport { get, cloneDeep, set } from 'lodash';\n\nconst useForm = <TData extends FormData>(initialData: TData) => {\n  const [data, setData] = useState(initialData);\n  const onChange = useCallback(\n    (\n      e:\n        | ChangeEvent<HTMLInputElement | HTMLSelectElement>\n        | FormEvent<HTMLFormElement>,\n    ) => {\n      const target = e.target as EventTarget & HTMLInputElement;\n\n      setData(prevData => {\n        const prevDataValue = get(prevData, target.name);\n        let nextValue: number | string | boolean;\n\n        switch (typeof prevDataValue) {\n          case 'number':\n            nextValue = Number(target.value);\n            break;\n\n          case 'string':\n            nextValue = String(target.value);\n            break;\n\n          case 'boolean':\n            nextValue = Boolean((target as HTMLInputElement).checked);\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn(`Cannot find field with name ${target.name}`);\n            return prevData;\n        }\n\n        const nextData = cloneDeep(prevData);\n        set(nextData, target.name, nextValue);\n        return nextData;\n      });\n    },\n    [],\n  );\n\n  const getFieldDecorator = (name: string) => <TProps extends FieldProps>(\n    element: ReactElement<TProps>,\n  ) => {\n    const value = get(data, name);\n    let props: Partial<FieldProps> = {};\n\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n        props = { value };\n        break;\n\n      case 'boolean':\n        props = { checked: value };\n        break;\n\n      default:\n        // eslint-disable-next-line no-console\n        console.warn(`Cannot find field with name ${name}`);\n        break;\n    }\n\n    return cloneElement<FieldProps>(element, {\n      ...props,\n      name,\n      id: name,\n      onChange,\n    });\n  };\n\n  return [data, getFieldDecorator] as const;\n};\n\nexport default useForm;\n\nexport interface FormData {\n  [k: string]: string | number | boolean | FormData;\n  [k: number]: string | number | boolean | FormData;\n}\n\nexport interface FieldProps {\n  name?: string;\n  id?: string;\n  value?: string | number;\n  checked?: boolean;\n  onChange?: (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void;\n}\n","import React from 'react';\nimport { QuestionInfo } from 'types/app-common';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: (\n      <span>\n        How to change/add/remove props of an <code>ReactElement</code>?\n      </span>\n    ),\n    answer: (\n      <div>\n        <p>\n          Using <code>cloneElement()</code>\n        </p>\n        <Code language=\"tsx\">\n          {`cloneElement<FieldProps>(element, {\n  ...props,\n  name,\n  id: name,\n  onChange,\n});`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[React] cloneElement()`,\n        url: `https://reactjs.org/docs/react-api.html#cloneelement`,\n      },\n      {\n        name: `[Medium] Transforming Elements In React`,\n        url: `https://medium.com/javascript-inside/transforming-elements-in-react-8e411c0f1bba`,\n      },\n      {\n        name: `[Medium] How to change or add React Component properties — clone element with React.cloneElement`,\n        url: `https://medium.com/@vygandas/how-to-change-or-add-react-component-properties-clone-element-with-react-cloneelement-be060097a44a`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport QuestionPage from 'components/QuestionPage';\nimport useForm from './hooks';\nimport questions from './questions';\nimport classes from './styles.module.scss';\n\nexport const Element1Impl: FC = () => {\n  const [data, getFieldDecorator] = useForm({\n    name: '',\n    value: 0,\n    active: false,\n  });\n\n  return (\n    <QuestionPage title=\"Element 1\" questions={questions}>\n      <form className={classes.Form}>\n        <div className={classes.InputGroup}>\n          <label className={classes.InputLabel} htmlFor=\"name\">\n            Name\n          </label>\n          {getFieldDecorator('name')(\n            <input className={classes.InputControl} type=\"text\" />,\n          )}\n        </div>\n\n        <div className={classes.InputGroup}>\n          <label className={classes.InputLabel} htmlFor=\"value\">\n            Value\n          </label>\n          {getFieldDecorator('value')(\n            <input className={classes.InputControl} type=\"number\" />,\n          )}\n        </div>\n        <div className={classes.InputGroup}>\n          <label className={classes.Checkbox} htmlFor=\"active\">\n            {getFieldDecorator('active')(<input type=\"checkbox\" />)}\n            Active\n          </label>\n        </div>\n      </form>\n\n      <div className={classes.Data}>\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </div>\n    </QuestionPage>\n  );\n};\n\nconst Element1 = memo(Element1Impl);\nElement1.displayName = 'Element1';\nexport default Element1;\n"],"sourceRoot":""}