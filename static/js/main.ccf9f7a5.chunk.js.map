{"version":3,"sources":["hooks/useToggle.ts","constants/common.ts","components/AppLink/index.tsx","components/MenuBar/styles.ts","components/MenuBar/index.tsx","components/NestableLinkItem/styles.ts","components/NestableLinkItem/index.tsx","hooks/useRouter.ts","components/SideBar/styles.ts","components/SideBar/index.tsx","components/AppRouter/index.tsx","helpers/routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useToggle","initialValue","useState","flag","setFlag","toggle","useCallback","prevValue","BASE_URL","process","APP_NAME","ForwardRefRouterLink","forwardRef","props","ref","innerRef","displayName","AppLink","memo","component","useStyles","makeStyles","theme","AppBar","borderBottom","palette","divider","Toolbar","flexWrap","HomeLink","color","textDecoration","MenuBar","toggleDrawerVisible","classes","className","position","elevation","IconButton","aria-label","edge","onClick","Menu","variant","to","Title","fontWeight","ListPadding","padding","SelectedLinkItem","primary","main","NestableLinkItem","NestableLinkItemComponent","name","path","nestedLevel","pathname","childRoutes","open","toggleOpen","useTheme","paddingLeft","spacing","ListItem","button","style","ListItemText","Collapse","in","timeout","List","map","key","selected","localeCompare","MISSING_ROUTER_ERROR","Error","useRouter","routerContext","__RouterContext","router","useContext","Drawer","width","SideBar","drawerVisible","routes","location","anchor","direction","onClose","ModalProps","keepMounted","Divider","renderRoute","exact","r","AppRouter","fallback","ROUTES","lazy","createMuiTheme","App","Box","CssBaseline","basename","Container","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccf9f7a5.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useToggle = (initialValue: UseStateInitialValue<boolean> = false) => {\n  const [flag, setFlag] = useState(initialValue);\n  const toggle = useCallback(() => setFlag(prevValue => !prevValue), []);\n  return [flag, toggle, setFlag] as const;\n};\n\nexport default useToggle;\n","export const BASE_URL = process.env.REACT_APP_BASE_URL;\nexport const APP_NAME = process.env.REACT_APP_APP_NAME;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, FC, memo } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\nimport { Link as MuiLink } from '@material-ui/core';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\n\nexport const ForwardRefRouterLink = forwardRef<\n  HTMLAnchorElement,\n  RouterLinkProps\n>((props, ref) => <RouterLink innerRef={ref} {...props} />);\n\nForwardRefRouterLink.displayName = 'ForwardRefRouterLink';\n\nexport const AppLinkComponent: FC<AppLinkProps> = props => (\n  <MuiLink component={ForwardRefRouterLink} {...props} />\n);\n\nconst AppLink = memo(AppLinkComponent);\nAppLink.displayName = 'AppLink';\nexport default AppLink;\n\nexport type AppLinkProps = OmitFrom<RouterLinkProps, 'innerRef'> & MuiLinkProps;\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  AppBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  Toolbar: {\n    flexWrap: 'wrap',\n  },\n  HomeLink: {\n    color: 'white',\n\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport { Menu as MenuIcon } from '@material-ui/icons';\nimport AppLink from 'components/AppLink';\nimport { APP_NAME } from 'constants/common';\nimport useStyles from './styles';\n\nexport const MenuBarComponent: FC<MenuBarProps> = ({ toggleDrawerVisible }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={classes.AppBar}\n      position=\"sticky\"\n      color=\"primary\"\n      elevation={1}\n    >\n      <Toolbar className={classes.Toolbar}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={toggleDrawerVisible}\n        >\n          <MenuIcon />\n        </IconButton>\n        <AppLink className={classes.HomeLink} variant=\"button\" to=\"/\">\n          {APP_NAME}\n        </AppLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst MenuBar = memo(MenuBarComponent);\nMenuBar.displayName = 'MenuBar';\nexport default MenuBar;\n\nexport interface MenuBarProps {\n  toggleDrawerVisible: VoidFunction;\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  Title: {\n    fontWeight: 500,\n  },\n  ListPadding: {\n    padding: 0,\n  },\n  SelectedLinkItem: {\n    color: theme.palette.primary.main,\n\n    '& .MuiListItemText-primary': {\n      fontWeight: 'bold',\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { memo, FC } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Collapse,\n  List,\n  useTheme,\n} from '@material-ui/core';\nimport { ForwardRefRouterLink } from 'components/AppLink';\nimport useToggle from 'hooks/useToggle';\nimport { LinkInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const NestableLinkItemComponent: FC<NestableLinkItemProps> = ({\n  name,\n  path,\n  nestedLevel,\n  pathname,\n  childRoutes,\n}) => {\n  const classes = useStyles();\n  const [open, toggleOpen] = useToggle(false);\n  const theme = useTheme();\n  const paddingLeft = `${theme.spacing(3 + 1.5 * nestedLevel)}px`;\n\n  return childRoutes ? (\n    <>\n      <ListItem button onClick={toggleOpen} style={{ paddingLeft }}>\n        <ListItemText classes={{ primary: classes.Title }} primary={name} />\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\">\n        <List classes={{ padding: classes.ListPadding }}>\n          {childRoutes.map(props => (\n            <NestableLinkItemComponent\n              key={props.path}\n              nestedLevel={nestedLevel + 1}\n              pathname={pathname}\n              {...props}\n            />\n          ))}\n        </List>\n      </Collapse>\n    </>\n  ) : (\n    <ListItem\n      button\n      classes={{ selected: classes.SelectedLinkItem }}\n      component={ForwardRefRouterLink}\n      to={path}\n      selected={!pathname.localeCompare(path)}\n      style={{ paddingLeft }}\n    >\n      <ListItemText primary={name} />\n    </ListItem>\n  );\n};\n\nexport interface NestableLinkItemProps extends LinkInfo {\n  childRoutes?: LinkInfo[];\n  pathname: string;\n  nestedLevel: number;\n}\n\nconst NestableLinkItem = memo(NestableLinkItemComponent);\nNestableLinkItem.displayName = 'NestableLinkItem';\nexport default NestableLinkItem;\n","import { useContext } from 'react';\nimport { __RouterContext } from 'react-router';\n\nconst MISSING_ROUTER_ERROR = new Error(\n  'useRouter may only be called within a <Router /> context.',\n);\n\nconst useRouter = (routerContext = __RouterContext) => {\n  const router = useContext(routerContext);\n  if (!router) {\n    throw MISSING_ROUTER_ERROR;\n  }\n  return router;\n};\n\nexport default useRouter;\n","import { makeStyles } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(() => ({\n  Drawer: {\n    width: drawerWidth,\n  },\n  Toolbar: {\n    width: drawerWidth,\n  },\n  HomeLink: {\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport { Drawer, useTheme, Toolbar, Divider, List } from '@material-ui/core';\nimport AppLink from 'components/AppLink';\nimport NestableLinkItem from 'components/NestableLinkItem';\nimport useRouter from 'hooks/useRouter';\nimport { APP_NAME } from 'constants/common';\nimport { LinkInfo } from 'types/app-common';\nimport useStyles from './styles';\n\nexport const SideBarComponent: FC<SideBarProps> = ({\n  drawerVisible,\n  toggleDrawerVisible,\n  routes,\n}) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const {\n    location: { pathname },\n  } = useRouter();\n\n  return (\n    <Drawer\n      className={classes.Drawer}\n      variant=\"temporary\"\n      color=\"black\"\n      anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n      open={drawerVisible}\n      onClose={toggleDrawerVisible}\n      ModalProps={{ keepMounted: true }}\n    >\n      <Toolbar className={classes.Toolbar}>\n        <AppLink className={classes.HomeLink} variant=\"button\" to=\"/\">\n          {APP_NAME}\n        </AppLink>\n      </Toolbar>\n      <Divider />\n      <List component=\"nav\">\n        {routes.map(props => (\n          <NestableLinkItem\n            key={props.path}\n            nestedLevel={0}\n            pathname={pathname}\n            {...props}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nconst SideBar = memo(SideBarComponent);\nSideBar.displayName = 'SideBar';\nexport default SideBar;\n\nexport interface SideBarProps {\n  drawerVisible: boolean;\n  toggleDrawerVisible: VoidFunction;\n  routes: LinkInfo[];\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, Suspense, Fragment, ReactNode } from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\nimport { RouteInfo } from 'types/app-common';\n\nconst renderRoute = ({\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  name,\n  path,\n  exact = true,\n  childRoutes,\n  ...props\n}: RouteInfo): ReactNode =>\n  childRoutes ? (\n    <Fragment key={path}>{childRoutes.map(r => renderRoute(r))}</Fragment>\n  ) : (\n    <Route<RouteProps> key={path} path={path} exact={exact} {...props} />\n  );\n\nexport const AppRouterComponent: FC<AppRouterProps> = ({ routes }) => (\n  <Suspense fallback=\"Loading...\">{routes.map(renderRoute)}</Suspense>\n);\n\nconst AppRouter = memo(AppRouterComponent);\nAppRouter.displayName = 'AppRouter';\nexport default AppRouter;\n\nexport interface AppRouterProps {\n  routes: RouteInfo[];\n}\n","import { lazy } from 'react';\nimport { RouteInfo } from 'types/app-common';\n\nconst ROUTES: RouteInfo[] = [\n  {\n    name: 'Architecture',\n    path: 'architecture',\n    childRoutes: [\n      {\n        name: 'Single Page App',\n        path: '/architecture/single-page-app',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"architecture__SinglePageApp1\" */ 'questions/architecture/SinglePageApp1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'CI/CD',\n    path: 'ci-cd',\n    childRoutes: [\n      {\n        name: 'GitLab',\n        path: '/ci-cd/gitlab',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"ci_cd__GitLab1\" */ 'questions/ci_cd/GitLab1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'CSS',\n    path: 'css',\n    childRoutes: [\n      {\n        name: 'Clipping',\n        path: '/css/clipping',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__Clipping1\" */ 'questions/css/Clipping1'\n          ),\n        ),\n      },\n      {\n        name: 'Content',\n        path: '/css/content',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__Content1\" */ 'questions/css/Content1'\n          ),\n        ),\n      },\n      {\n        name: 'Flex Overflow',\n        path: '/css/flex-overflow',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__FlexOverflow1\" */ 'questions/css/FlexOverflow1'\n          ),\n        ),\n      },\n      {\n        name: 'Full Page',\n        path: '/css/full-page',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__FullPage\" */ 'questions/css/FullPage'\n          ),\n        ),\n      },\n      {\n        name: 'Newline',\n        path: '/css/newline',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__Newline1\" */ 'questions/css/Newline1'\n          ),\n        ),\n      },\n      {\n        name: 'Replaced Elements',\n        path: '/css/replaced-elements',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__ReplacedElements1\" */ 'questions/css/ReplacedElements1'\n          ),\n        ),\n      },\n      {\n        name: 'Shapes',\n        path: '/css/shapes',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__Shapes1\" */ 'questions/css/Shapes1'\n          ),\n        ),\n      },\n      {\n        name: 'Text Background',\n        path: '/css/text-background',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__TextBackground1\" */ 'questions/css/TextBackground1'\n          ),\n        ),\n      },\n      {\n        name: 'Text Ellipsis',\n        path: '/css/text-ellipsis',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"css__TextEllipsis1\" */ 'questions/css/TextEllipsis1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'DOM',\n    path: 'dom',\n    childRoutes: [\n      {\n        name: 'Cancel Request',\n        path: '/dom/cancel-request',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__CancelRequest1\" */ 'questions/dom/CancelRequest1'\n          ),\n        ),\n      },\n      {\n        name: 'Device Detection',\n        path: '/dom/device-detection',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__DeviceDetection1\" */ 'questions/dom/DeviceDetection1'\n          ),\n        ),\n      },\n      {\n        name: 'Download',\n        path: '/dom/download',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__Download1\" */ 'questions/dom/Download1'\n          ),\n        ),\n      },\n      {\n        name: 'Drag Drop',\n        path: '/dom/drag-drop',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__DragDrop1\" */ 'questions/dom/DragDrop1'\n          ),\n        ),\n      },\n      {\n        name: 'Excluded Input',\n        path: '/dom/excluded-input',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__ExcludedInput1\" */ 'questions/dom/ExcludedInput1'\n          ),\n        ),\n      },\n      {\n        name: 'File Input',\n        path: '/dom/file-input',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__FileInput1\" */ 'questions/dom/FileInput1'\n          ),\n        ),\n      },\n      {\n        name: 'Live Edit',\n        path: '/dom/live-edit',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__LiveEdit1\" */ 'questions/dom/LiveEdit1'\n          ),\n        ),\n      },\n      {\n        name: 'Upload',\n        path: '/dom/upload',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"dom__Upload1\" */ 'questions/dom/Upload1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'Git',\n    path: 'git',\n    childRoutes: [\n      {\n        name: 'Pre-Commit',\n        path: '/git/pre-commit',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"git__PreCommit1\" */ 'questions/git/PreCommit1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'JavaScript',\n    path: 'js',\n    childRoutes: [\n      {\n        name: 'Array',\n        path: '/js/array',\n        component: lazy(() =>\n          import(/* webpackChunkName: \"js__Array1\" */ 'questions/js/Array1'),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'NodeJS',\n    path: 'nodejs',\n    childRoutes: [\n      {\n        name: 'Memory',\n        path: '/nodejs/memory',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"nodejs__Memory1\" */ 'questions/nodejs/Memory1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'Performance',\n    path: 'performance',\n    childRoutes: [\n      {\n        name: 'Memory',\n        path: '/performance/memory',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"performance__Memory1\" */ 'questions/performance/Memory1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'React',\n    path: 'react',\n    childRoutes: [\n      {\n        name: 'Bundle Size',\n        path: '/react/bundle-size',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"react__BundleSize1\" */ 'questions/react/BundleSize1'\n          ),\n        ),\n      },\n      {\n        name: 'Deployment',\n        path: '/react/deployment',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"react__Deployment1\" */ 'questions/react/Deployment1'\n          ),\n        ),\n      },\n      {\n        name: 'Element',\n        path: '/react/element',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"react__Element1\" */ 'questions/react/Element1'\n          ),\n        ),\n      },\n      {\n        name: 'Event',\n        path: '/react/event',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"react__Event1\" */ 'questions/react/Event1'\n          ),\n        ),\n      },\n      {\n        name: 'Jest',\n        path: '/react/jest',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"react__Jest1\" */ 'questions/react/Jest1'\n          ),\n        ),\n      },\n      {\n        name: 'Raw HTML',\n        path: '/react/raw-html',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"react__RawHtml1\" */ 'questions/react/RawHtml1'\n          ),\n        ),\n      },\n      {\n        name: 'TypeScript',\n        path: '/react/typescript',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"react__TypeScript1\" */ 'questions/react/TypeScript1'\n          ),\n        ),\n      },\n    ],\n  },\n  {\n    name: 'Webpack',\n    path: 'webpack',\n    childRoutes: [\n      {\n        name: 'Languages',\n        path: '/webpack/languages',\n        component: lazy(() =>\n          import(\n            /* webpackChunkName: \"webpack__Languages1\" */ 'questions/webpack/Languages1'\n          ),\n        ),\n      },\n    ],\n  },\n];\n\nexport default ROUTES;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, CssBaseline, Box, Container } from '@material-ui/core';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport MenuBar from 'components/MenuBar';\nimport SideBar from 'components/SideBar';\nimport AppRouter from 'components/AppRouter';\nimport useToggle from 'hooks/useToggle';\nimport ROUTES from 'helpers/routes';\n\nconst theme = createMuiTheme({});\n\nconst App: React.FC = () => {\n  const [drawerVisible, toggleDrawerVisible] = useToggle(false);\n\n  return (\n    <Box>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <MenuBar toggleDrawerVisible={toggleDrawerVisible} />\n          <SideBar\n            drawerVisible={drawerVisible}\n            toggleDrawerVisible={toggleDrawerVisible}\n            routes={ROUTES}\n          />\n          <Container>\n            <AppRouter routes={ROUTES} />\n          </Container>\n        </BrowserRouter>\n      </ThemeProvider>\n    </Box>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}