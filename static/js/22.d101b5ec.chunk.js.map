{"version":3,"sources":["questions/react/Deployment1/gh-pages.png","questions/react/Deployment1/questions.tsx","questions/react/Deployment1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss"],"names":["module","exports","questions","question","answer","Code","language","references","name","url","src","ghPagesSrc","alt","width","href","Deployment1Component","Question","title","Deployment1","memo","children","className","classes","Container","Title","Content","Questions","map","index","key","Index","Answer","length","References","target","rel","displayName","style","okaidia","classnames"],"mappings":"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","file":"static/js/22.d101b5ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gh-pages.2f41f509.png\";","/* eslint-disable react/no-unescaped-entities */\nimport { QuestionInfo } from 'components/Question';\nimport React from 'react';\nimport Code from 'components/Code';\nimport ghPagesSrc from './gh-pages.png';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to setup a static server for React app?`,\n    answer: (\n      <div>\n        <p>\n          In <code>NodeJS</code> environment, use <code>serve</code>:\n        </p>\n\n        <Code language=\"bash\">\n          {`npm install -g serve\nserve -s build -l 4000`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#static-server`,\n      },\n      {\n        name: `[GitHub] serve`,\n        url: `https://github.com/zeit/serve`,\n      },\n      {\n        name: `Serve 7: Middleware`,\n        url: `https://zeit.co/blog/serve-7`,\n      },\n    ],\n  },\n  {\n    question: `How to setup an Express server for React app?`,\n    answer: (\n      <Code language=\"typescript\">\n        {`import { join, resolve } from 'path';\nimport express from 'express';\nimport morgan from 'morgan';\n\nconst DIR_BUILD = resolve('../build');\nconst app = express();\n\napp.use(morgan('common'));\napp.use(express.static(DIR_BUILD));\n\n// serve index.html for any unknown paths\napp.get('/*', (_req, res) => {\n  res.sendFile(join(DIR_BUILD, 'index.html'));\n});\n\napp.listen(Number(process.env.PORT) || 4000);`}\n      </Code>\n    ),\n    references: [\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#serving-apps-with-client-side-routing`,\n      },\n    ],\n  },\n  {\n    question: `How to deploy to GitHub Pages?`,\n    answer: (\n      <div>\n        <p>\n          (Refer to <code>github-pages</code> branch)\n        </p>\n\n        <p>\n          Install <code>gh-pages</code>\n        </p>\n\n        <Code language=\"bash\">yarn add gh-pages</Code>\n\n        <p>\n          Add <code>homepage</code> entry and scripts to{' '}\n          <code>package.json</code>.\n        </p>\n\n        <p>\n          <b>Note:</b> The <code>homepage</code> entry is very important for\n          GitHub pages to work properly. React will build paths to static files\n          based on <code>homepage</code>, (e.g.{' '}\n          <code>\n            {`<script src=\"/frontend-tricks/static/js/4.3e25585d.chunk.js\"></script>`}\n          </code>\n          ), which may cause problems with other deployment methods.\n        </p>\n\n        <Code language=\"json\">\n          {`{\n  \"homepage\": \"https://icodemyownlife.github.io/frontend-tricks/\",\n  \"scripts\": {\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\",\n  }\n}`}\n        </Code>\n\n        <p>\n          Run <code>deploy</code> script\n        </p>\n\n        <Code language=\"bash\">yarn deploy</Code>\n\n        <p>\n          Make sure GitHub Pages option in your GitHub project settings is set\n          to use the <code>gh-pages</code> branch\n        </p>\n\n        <p>\n          <img src={ghPagesSrc} alt=\"gh-pages\" width={400} />\n        </p>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#github-pages-https-pagesgithubcom`,\n      },\n      {\n        name: `[Medium] So you want to host your Single Page React App on GitHub Pages?`,\n        url: `https://itnext.io/so-you-want-to-host-your-single-age-react-app-on-github-pages-a826ab01e48`,\n      },\n\n      {\n        name: `[Medium] Deploying React Applications to Github Pages`,\n        url: `https://medium.com/the-andela-way/how-to-deploy-your-react-application-to-github-pages-in-less-than-5-minutes-8c5f665a2d2a`,\n      },\n\n      {\n        name: `[GitHub] Deploying a React App* to GitHub Pages`,\n        url: `https://github.com/gitname/react-gh-pages`,\n      },\n\n      {\n        name: `How to deploy a create react app to Github pages`,\n        url: `https://reactgo.com/deploy-react-app-github-pages/`,\n      },\n\n      {\n        name: `[Medium] React-router problem with gh-pages`,\n        url: `https://medium.com/@Dragonza/react-router-problem-with-gh-pages-c93a5e243819`,\n      },\n\n      {\n        name: `[GitHub] Gh-pages deployment problems with react-router`,\n        url: `https://github.com/facebook/create-react-app/issues/1765`,\n      },\n    ],\n  },\n  {\n    question: `How to deploy to Heroku?`,\n    answer: (\n      <div>\n        <p>\n          <a href=\"https://devcenter.heroku.com/articles/heroku-cli\">\n            Download and install <code>heroku</code>\n          </a>\n        </p>\n\n        <p>\n          Create an Heroku app using <code>create-react-app-buildpack</code>\n        </p>\n\n        <Code language=\"bash\">\n          heroku create frontend-tricks-web -b\n          https://github.com/mars/create-react-app-buildpack.git\n        </Code>\n\n        <p>Deploy</p>\n\n        <Code language=\"bash\">git push heroku master</Code>\n\n        <p>Open website</p>\n\n        <Code language=\"bash\">heroku open</Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Heroku] Deploying React with Zero Configuration`,\n        url: `https://blog.heroku.com/deploying-react-with-zero-configuration`,\n      },\n      {\n        name: `[GitHub] Heroku Buildpack for create-react-app`,\n        url: `https://github.com/mars/create-react-app-buildpack`,\n      },\n      {\n        name: `[Create React App] Deployment`,\n        url: `https://create-react-app.dev/docs/deployment#heroku-https-wwwherokucom`,\n      },\n    ],\n  },\n  {\n    question: `How to create a staging build (with customizing environment variables)?`,\n    answer: (\n      <div>\n        <p>\n          Create a file called <code>.env.staging</code> in root project\n          directory\n        </p>\n\n        <Code language=\"yaml\">\n          {`NODE_ENV = \"staging\"\nREACT_APP_BASE_URL=http://127.0.0.1:1333`}\n        </Code>\n\n        <p>\n          Install <code>env-cmd</code>\n        </p>\n\n        <Code language=\"bash\">yarn add -D env-cmd</Code>\n\n        <p>\n          Add <code>build:staging</code> script to <code>package.json</code>\n        </p>\n\n        <Code language=\"json\">\n          {`{\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"build:staging\": \"env-cmd -f .env.staging yarn build\"\n  }\n}`}\n        </Code>\n\n        <p>Create a build for staging</p>\n\n        <Code language=\"bash\">yarn build:staging</Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[Create React App] Customizing Environment Variables for Arbitrary Build Environments`,\n        url: `https://create-react-app.dev/docs/deployment#customizing-environment-variables-for-arbitrary-build-environments`,\n      },\n      {\n        name: `[DEV] Managing .env variables for provisional builds with Create React App`,\n        url: `https://dev.to/jam3/managing-env-variables-for-provisional-builds-h37`,\n      },\n      {\n        name: `[GitHub] env-cmd`,\n        url: `https://github.com/toddbluhm/env-cmd`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo } from 'react';\nimport Question from 'components/Question';\nimport questions from './questions';\n\nexport const Deployment1Component: FC = () => (\n  <Question title=\"Deployment 1\" questions={questions} />\n);\n\nconst Deployment1 = memo(Deployment1Component);\nexport default Deployment1;\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};"],"sourceRoot":""}