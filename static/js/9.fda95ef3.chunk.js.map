{"version":3,"sources":["components/Checkbox/styles.module.scss","components/Checkbox/index.tsx","components/FileInput/hooks.ts","components/FileInput/ButtonFileInput.tsx","components/FileInput/LabelFileInput.tsx","components/FileInput/ImagePreview.tsx","components/FileInput/constants.ts","components/FileInput/DataUrlImagePreview.tsx","components/FileInput/ObjectUrlImagePreview.tsx","components/FileInput/DataUrlImageInput.tsx","components/FileInput/ObjectUrlImageInput.tsx","components/FileInput/PdfPreview.tsx","components/FileInput/PdfInput.tsx","questions/dom/FileInput1/questions.tsx","questions/dom/FileInput1/index.tsx","components/Question/index.tsx","components/Question/styles.module.scss","components/Code/index.tsx","components/Code/styles.module.scss","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/FileInput/styles.module.scss"],"names":["module","exports","Checkbox","memo","className","labelClassName","inputClassName","id","label","onChange","props","handleChange","useCallback","e","target","checked","classnames","classes","InputGroup","Label","htmlFor","Input","type","displayName","getFileName","files","length","name","preventDefaults","preventDefault","stopPropagation","useInputChangeHandler","useDragDrop","draggable","containerRef","useRef","onChangeRef","useEffect","current","container","unhighlight","classList","remove","dragging","handleDragEnter","add","handleDragLeave","handleDrop","dataTransfer","addEventListener","removeEventListener","console","log","a","aa","ButtonFileInput","children","handleInputChange","inputRef","triggerInputClick","click","useTriggerInputClick","filename","FileInput","ref","Button","onClick","displayNone","Filename","title","visuallyHidden","ImagePreview","imageClassName","errorClassName","src","error","imgRef","hidden","Error","Image","alt","defaultSupportedFileTypes","DataUrlImagePreview","supportedFileTypes","useState","setSrc","setError","file","includes","fileReader","FileReader","handleLoad","dataUrl","result","handleError","message","undefined","readAsDataURL","useImageDataUrl","ObjectUrlImagePreview","img","objectUrl","URL","createObjectURL","revokeObjectURL","useImageObjectUrl","DataUrlImageInput","ObjectUrlImageInput","LabelFileInput","PdfPreview","pdfClassName","iframeRef","iframe","usePdfIframe","pdf","frameBorder","PdfInput","questions","question","answer","Code","language","references","url","FileInput1Impl","buttonFiles","setButtonFiles","buttonDraggable","setButtonDraggable","labelFiles","setLabelFiles","labelDraggable","setLabelDraggable","dataUrlFiles","setDataUrlFiles","objectUrlFiles","setObjectUrlFiles","pdfFiles","setPdfFiles","Question","multiple","FileInput1","Container","Title","Content","Questions","map","index","key","Index","Answer","References","href","rel","style","okaidia","_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","value","err","TypeError","_objectWithoutProperties","source","excluded","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"mappings":"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","file":"static/js/9.fda95ef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroupBase\":\"styles_InputGroupBase__2FtS7\",\"InputGroup\":\"styles_InputGroup__3iD19\",\"LabelBase\":\"styles_LabelBase__2O1W5\",\"Label\":\"styles_Label__1mVaU\",\"InputBase\":\"styles_InputBase__mV-7F\",\"Input\":\"styles_Input__3lBFG\"};","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo, ChangeEvent, useCallback } from 'react';\nimport classnames from 'classnames';\nimport { InputProps } from 'components/Input';\nimport classes from './styles.module.scss';\n\nexport const CheckboxImpl: FC<CheckboxProps> = ({\n  className,\n  labelClassName,\n  inputClassName,\n  id,\n  label,\n  onChange,\n  ...props\n}) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) =>\n      onChange && onChange(e.target.checked),\n    [onChange],\n  );\n\n  return (\n    <div className={classnames(classes.InputGroup, className)}>\n      <label className={classnames(classes.Label, labelClassName)} htmlFor={id}>\n        <input\n          className={classnames(classes.Input, inputClassName)}\n          type=\"checkbox\"\n          id={id}\n          onChange={handleChange}\n          {...props}\n        />\n        {label}\n      </label>\n    </div>\n  );\n};\n\nconst Checkbox = memo(CheckboxImpl);\nCheckbox.displayName = 'Checkbox';\nexport default Checkbox;\n\nexport interface CheckboxProps extends Omit<InputProps, 'onChange' | 'type'> {\n  onChange?: (value: boolean) => void;\n}\n","/* eslint-disable no-console */\nimport { useCallback, ChangeEvent, useRef, useEffect, useState } from 'react';\nimport { FilesChangeListener } from './types';\nimport classes from './styles.module.scss';\n\nexport const getFileName = (files: FileList | null | undefined) => {\n  if (!files) {\n    return null;\n  }\n\n  if (files.length === 1) {\n    return files[0].name;\n  }\n\n  return `${files.length} files`;\n};\n\nexport const preventDefaults = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n\nexport const useInputChangeHandler = ({\n  onChange,\n}: {\n  onChange: FilesChangeListener | undefined;\n}) =>\n  useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => onChange && onChange(e.target.files),\n    [onChange],\n  );\n\nexport const useTriggerInputClick = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const triggerInputClick = useCallback(\n    () => inputRef.current && inputRef.current.click(),\n    [],\n  );\n\n  return { inputRef, triggerInputClick };\n};\n\nexport const useDragDrop = ({\n  onChange,\n  draggable,\n}: {\n  onChange: FilesChangeListener | undefined;\n  draggable: boolean | undefined;\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onChangeRef = useRef<FilesChangeListener>();\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n\n    if (!container || !draggable) return undefined;\n\n    const highlight = () => container.classList.add(classes.dragging);\n\n    const unhighlight = () => container.classList.remove(classes.dragging);\n\n    const handleDragEnter = (e: Event) => {\n      preventDefaults(e);\n      highlight();\n    };\n\n    const handleDragLeave = (e: Event) => {\n      preventDefaults(e);\n      unhighlight();\n    };\n\n    const handleDrop = (e: DragEvent) => {\n      preventDefaults(e);\n      unhighlight();\n      if (onChangeRef.current)\n        onChangeRef.current(e.dataTransfer && e.dataTransfer.files);\n    };\n\n    container.addEventListener('dragenter', handleDragEnter);\n    container.addEventListener('dragover', handleDragEnter);\n    container.addEventListener('dragleave', handleDragLeave);\n    container.addEventListener('drop', handleDrop);\n\n    return () => {\n      container.removeEventListener('dragenter', handleDragEnter);\n      container.removeEventListener('dragover', handleDragEnter);\n      container.removeEventListener('dragleave', handleDragLeave);\n      container.removeEventListener('drop', handleDrop);\n    };\n  }, [draggable]);\n\n  return containerRef;\n};\n\nexport const useImageDataUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | null | undefined;\n  supportedFileTypes: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) return undefined;\n\n    if (!supportedFileTypes.includes(file.type)) {\n      return setError('Invalid file type');\n    }\n\n    const fileReader = new FileReader();\n    const handleLoad = (e: ProgressEvent) => {\n      console.log(e);\n      const dataUrl = fileReader.result as string;\n      setSrc(dataUrl);\n    };\n    const handleError = (e: ProgressEvent) => {\n      console.log(e);\n      if (fileReader.error) setError(fileReader.error.message);\n    };\n    fileReader.addEventListener('load', handleLoad);\n    fileReader.addEventListener('error', handleError);\n    setSrc(undefined);\n    setError(undefined);\n    fileReader.readAsDataURL(file);\n\n    return () => {\n      fileReader.removeEventListener('load', handleLoad);\n      fileReader.removeEventListener('error', handleError);\n    };\n  }, [files, supportedFileTypes]);\n\n  return { src, error };\n};\n\nexport const useImageObjectUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | null | undefined;\n  supportedFileTypes: string[];\n}) => {\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n    const img = imgRef.current;\n\n    if (!file || !img) return undefined;\n\n    if (!supportedFileTypes.includes(file.type)) {\n      return setError('Invalid file type');\n    }\n\n    const objectUrl = URL.createObjectURL(file);\n    const handleLoad = () => URL.revokeObjectURL(objectUrl);\n    img.addEventListener('load', handleLoad);\n    setSrc(objectUrl);\n    setError(undefined);\n\n    return () => {\n      img.removeEventListener('load', handleLoad);\n      URL.revokeObjectURL(objectUrl);\n    };\n  }, [files, supportedFileTypes]);\n\n  return { src, error, imgRef };\n};\n\nexport const usePdfIframe = ({\n  files,\n}: {\n  files: FileList | null | undefined;\n}) => {\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const [src, setSrc] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n    const iframe = iframeRef.current;\n\n    if (!iframe) return;\n\n    if (!file) {\n      setSrc(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(file);\n    iframe.src = objectUrl;\n    setSrc(objectUrl);\n    URL.revokeObjectURL(objectUrl);\n  }, [files]);\n\n  return { src, iframeRef };\n};\n\ninterface A {\n  name: string;\n  a: number;\n  aa: string;\n}\n\ninterface B {\n  name: string;\n  b: number;\n  bb: string;\n}\n\ntype C = A | B;\n\nconst c: C = { a: 5, aa: '', name: '' };\n\nconsole.log(c);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport {\n  useTriggerInputClick,\n  useInputChangeHandler,\n  useDragDrop,\n  getFileName,\n} from './hooks';\nimport { FileInputProps } from './types';\nimport classes from './styles.module.scss';\n\nexport const ButtonFileInputImpl: FC<FileInputProps> = ({\n  className,\n  files,\n  onChange,\n  draggable,\n  children = 'Choose File',\n  ...props\n}) => {\n  const handleInputChange = useInputChangeHandler({ onChange });\n  const { inputRef, triggerInputClick } = useTriggerInputClick();\n  const containerRef = useDragDrop({ onChange, draggable });\n  const filename = getFileName(files);\n\n  return (\n    <div\n      className={classnames(classes.FileInput, className)}\n      ref={containerRef}\n    >\n      <button\n        className={classes.Button}\n        type=\"button\"\n        onClick={triggerInputClick}\n      >\n        {children}\n      </button>\n      <input\n        className={classnames(classes.Input, classes.displayNone)}\n        ref={inputRef}\n        type=\"file\"\n        onChange={handleInputChange}\n        {...props}\n      />\n      {filename && (\n        <span className={classes.Filename} title={filename}>\n          {filename}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst ButtonFileInput = memo(ButtonFileInputImpl);\nButtonFileInput.displayName = 'ButtonFileInput';\nexport default ButtonFileInput;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { useInputChangeHandler, useDragDrop, getFileName } from './hooks';\nimport { FileInputProps } from './types';\nimport classes from './styles.module.scss';\n\nexport const LabelFileInputImpl: FC<FileInputProps> = ({\n  className,\n  files,\n  id,\n  onChange,\n  draggable,\n  children = 'Choose File',\n  ...props\n}) => {\n  const handleInputChange = useInputChangeHandler({ onChange });\n  const containerRef = useDragDrop({ onChange, draggable });\n  const filename = getFileName(files);\n\n  return (\n    <div\n      className={classnames(classes.FileInput, className)}\n      ref={containerRef}\n    >\n      <label className={classes.Button} htmlFor={id}>\n        {children}\n      </label>\n      <input\n        className={classnames(classes.Input, classes.visuallyHidden)}\n        id={id}\n        type=\"file\"\n        onChange={handleInputChange}\n        {...props}\n      />\n      {filename && (\n        <span className={classes.Filename} title={filename}>\n          {filename}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst ButtonFileInput = memo(LabelFileInputImpl);\nButtonFileInput.displayName = 'ButtonFileInput';\nexport default ButtonFileInput;\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { ImagePreviewProps } from './types';\nimport classes from './styles.module.scss';\n\nexport const ImagePreviewImpl: FC<ImagePreviewProps> = ({\n  className,\n  imageClassName,\n  errorClassName,\n  src,\n  error,\n  imgRef,\n}) => (\n  <div\n    className={classnames(classes.ImagePreview, className)}\n    hidden={!src && !error}\n  >\n    <p className={classnames(classes.Error, errorClassName)} hidden={!error}>\n      {error}\n    </p>\n\n    <img\n      ref={imgRef}\n      className={classnames(classes.Image, imageClassName)}\n      src={src}\n      alt=\"Preview\"\n      hidden={!src}\n    />\n  </div>\n);\n\nconst ImagePreview = memo(ImagePreviewImpl);\nImagePreview.displayName = 'ImagePreview';\nexport default ImagePreview;\n","// eslint-disable-next-line import/prefer-default-export\nexport const defaultSupportedFileTypes = ['image/png'];\n","import React, { FC, memo } from 'react';\nimport { ImagePreview } from '.';\nimport { useImageDataUrl } from './hooks';\nimport { defaultSupportedFileTypes } from './constants';\nimport { UrlImagePreviewProps } from './types';\n\nexport const DataUrlImagePreviewImpl: FC<UrlImagePreviewProps> = ({\n  className,\n  imageClassName,\n  errorClassName,\n  files,\n  supportedFileTypes = defaultSupportedFileTypes,\n}) => {\n  const { src, error } = useImageDataUrl({ files, supportedFileTypes });\n\n  return (\n    <ImagePreview\n      className={className}\n      imageClassName={imageClassName}\n      errorClassName={errorClassName}\n      src={src}\n      error={error}\n    />\n  );\n};\n\nconst DataUrlImagePreview = memo(DataUrlImagePreviewImpl);\nDataUrlImagePreview.displayName = 'DataUrlImagePreview';\nexport default DataUrlImagePreview;\n","import React, { FC, memo } from 'react';\nimport { ImagePreview } from '.';\nimport { useImageObjectUrl } from './hooks';\nimport { defaultSupportedFileTypes } from './constants';\nimport { UrlImagePreviewProps } from './types';\n\nexport const ObjectUrlImagePreviewImpl: FC<UrlImagePreviewProps> = ({\n  className,\n  imageClassName,\n  errorClassName,\n  files,\n  supportedFileTypes = defaultSupportedFileTypes,\n}) => {\n  const { src, error, imgRef } = useImageObjectUrl({\n    files,\n    supportedFileTypes,\n  });\n\n  return (\n    <ImagePreview\n      className={className}\n      imageClassName={imageClassName}\n      errorClassName={errorClassName}\n      src={src}\n      error={error}\n      imgRef={imgRef}\n    />\n  );\n};\n\nconst ObjectUrlImagePreview = memo(ObjectUrlImagePreviewImpl);\nObjectUrlImagePreview.displayName = 'ObjectUrlImagePreview';\nexport default ObjectUrlImagePreview;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport { ButtonFileInput, DataUrlImagePreview } from '.';\nimport { ImageInputProps } from './types';\n\nexport const DataUrlImageInputImpl: FC<ImageInputProps> = ({\n  supportedFileTypes,\n  files,\n  ...props\n}) => (\n  <div>\n    <ButtonFileInput files={files} {...props} />\n    <DataUrlImagePreview\n      files={files}\n      supportedFileTypes={supportedFileTypes}\n    />\n  </div>\n);\n\nconst DataUrlImageInput = memo(DataUrlImageInputImpl);\nDataUrlImageInput.displayName = 'DataUrlImageInput';\nexport default DataUrlImageInput;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport { LabelFileInput, ObjectUrlImagePreview } from '.';\nimport { ImageInputProps } from './types';\n\nexport const ObjectUrlImageInputImpl: FC<ImageInputProps> = ({\n  supportedFileTypes,\n  files,\n  ...props\n}) => (\n  <div>\n    <LabelFileInput files={files} {...props} />\n    <ObjectUrlImagePreview\n      files={files}\n      supportedFileTypes={supportedFileTypes}\n    />\n  </div>\n);\n\nconst ObjectUrlImageInput = memo(ObjectUrlImageInputImpl);\nObjectUrlImageInput.displayName = 'ObjectUrlImageInput';\nexport default ObjectUrlImageInput;\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { usePdfIframe } from './hooks';\nimport classes from './styles.module.scss';\n\nexport const PdfPreviewImpl: FC<PdfPreviewProps> = ({\n  className,\n  pdfClassName,\n  files,\n}) => {\n  const { src, iframeRef } = usePdfIframe({ files });\n\n  return (\n    <div className={classnames(classes.PdfPreview, className)} hidden={!src}>\n      <iframe\n        ref={iframeRef}\n        className={classnames(classes.pdf, pdfClassName)}\n        title=\"PDF Preview\"\n        frameBorder={0}\n        hidden={!src}\n      />\n    </div>\n  );\n};\n\nconst PdfPreview = memo(PdfPreviewImpl);\nPdfPreview.displayName = 'PdfPreview';\nexport default PdfPreview;\n\nexport interface PdfPreviewProps {\n  className?: string;\n  pdfClassName?: string;\n  files: FileList | null | undefined;\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { FC, memo } from 'react';\nimport { ButtonFileInput, PdfPreview } from '.';\nimport { FileInputProps } from './types';\n\nexport const PdfInputImpl: FC<FileInputProps> = ({ files, ...props }) => (\n  <div>\n    <ButtonFileInput files={files} {...props} />\n    <PdfPreview files={files} />\n  </div>\n);\n\nconst PdfInput = memo(PdfInputImpl);\nPdfInput.displayName = 'PdfInput';\nexport default PdfInput;\n","import React from 'react';\nimport { QuestionInfo } from 'components/Question';\nimport Code from 'components/Code';\n\nconst questions: QuestionInfo[] = [\n  {\n    question: `How to create a custom file input?`,\n    answer: (\n      <div>\n        <p>\n          Using a <code>button</code> to trigger the <code>click()</code> method\n          of a hidden file input\n        </p>\n        <Code language=\"tsx\">\n          {`<div\n  className={classnames(classes.FileInput, className)}\n  ref={containerRef}\n>\n  <button\n    className={classes.Button}\n    type=\"button\"\n    onClick={triggerInputClick}\n  >\n    {children}\n  </button>\n  <input\n    className={classnames(classes.Input, classes.displayNone)}\n    ref={inputRef}\n    type=\"file\"\n    onChange={handleInputChange}\n    {...props}\n  />\n  {filename && (\n    <span className={classes.Filename} title={filename}>\n      {filename}\n    </span>\n  )}\n</div>`}\n        </Code>\n\n        <p>\n          Using a <code>label</code> to trigger a hidden file input\n        </p>\n        <Code language=\"tsx\">\n          {`<div\n  className={classnames(classes.FileInput, className)}\n  ref={containerRef}\n>\n  <label className={classes.Button} htmlFor={id}>\n    {children}\n  </label>\n  <input\n    className={classnames(classes.Input, classes.visuallyHidden)}\n    id={id}\n    type=\"file\"\n    onChange={handleInputChange}\n    {...props}\n  />\n  {filename && (\n    <span className={classes.Filename} title={filename}>\n      {filename}\n    </span>\n  )}\n</div>`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Using hidden file input elements using the click() method`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Using_hidden_file_input_elements_using_the_click()_method`,\n      },\n      {\n        name: `[MDN] Using a label element to trigger a hidden file input element`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Using_a_label_element_to_trigger_a_hidden_file_input_element`,\n      },\n    ],\n  },\n  {\n    question: `How to select file(s) using drag and drop?`,\n    answer: (\n      <div>\n        <p>\n          Using the <b>Drag and Drop API</b>\n        </p>\n        <Code language=\"tsx\">\n          {`export const useDragDrop = ({\n  onChange,\n  draggable,\n}: {\n  onChange: FilesChangeListener | undefined;\n  draggable: boolean | undefined;\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onChangeRef = useRef<FilesChangeListener>();\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n\n    if (!container || !draggable) return undefined;\n\n    const highlight = () => container.classList.add(classes.dragging);\n\n    const unhighlight = () => container.classList.remove(classes.dragging);\n\n    const handleDragEnter = (e: Event) => {\n      preventDefaults(e);\n      highlight();\n    };\n\n    const handleDragLeave = (e: Event) => {\n      preventDefaults(e);\n      unhighlight();\n    };\n\n    const handleDrop = (e: DragEvent) => {\n      preventDefaults(e);\n      unhighlight();\n      if (onChangeRef.current)\n        onChangeRef.current(e.dataTransfer && e.dataTransfer.files);\n    };\n\n    container.addEventListener('dragenter', handleDragEnter);\n    container.addEventListener('dragover', handleDragEnter);\n    container.addEventListener('dragleave', handleDragLeave);\n    container.addEventListener('drop', handleDrop);\n\n    return () => {\n      container.removeEventListener('dragenter', handleDragEnter);\n      container.removeEventListener('dragover', handleDragEnter);\n      container.removeEventListener('dragleave', handleDragLeave);\n      container.removeEventListener('drop', handleDrop);\n    };\n  }, [draggable]);\n\n  return containerRef;\n};`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Selecting files using drag and drop`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Selecting_files_using_drag_and_drop`,\n      },\n      {\n        name: `[MDN] File drag and drop`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop`,\n      },\n      {\n        name: `[MDN] HTML Drag and Drop API`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API`,\n      },\n      {\n        name: `[CSS-TRICKS] Drag and Drop File Uploading`,\n        url: `https://css-tricks.com/drag-and-drop-file-uploading/`,\n      },\n      {\n        name: `[Smashing Magazine] How To Make A Drag-and-Drop File Uploader With Vanilla JavaScript`,\n        url: `https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/`,\n      },\n    ],\n  },\n  {\n    question: `How to show user-selected images?`,\n    answer: (\n      <div>\n        <p>Using data URL</p>\n        <Code language=\"tsx\">\n          {`export const useImageDataUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | null | undefined;\n  supportedFileTypes: string[];\n}) => {\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n\n    if (!file) return undefined;\n\n    if (!supportedFileTypes.includes(file.type)) {\n      return setError('Invalid file type');\n    }\n\n    const fileReader = new FileReader();\n    const handleLoad = (e: ProgressEvent) => {\n      console.log(e);\n      const dataUrl = fileReader.result as string;\n      setSrc(dataUrl);\n    };\n    const handleError = (e: ProgressEvent) => {\n      console.log(e);\n      if (fileReader.error) setError(fileReader.error.message);\n    };\n    fileReader.addEventListener('load', handleLoad);\n    fileReader.addEventListener('error', handleError);\n    setSrc(undefined);\n    setError(undefined);\n    fileReader.readAsDataURL(file);\n\n    return () => {\n      fileReader.removeEventListener('load', handleLoad);\n      fileReader.removeEventListener('error', handleError);\n    };\n  }, [files, supportedFileTypes]);\n\n  return { src, error };\n};`}\n        </Code>\n\n        <p>Using object URL</p>\n        <Code language=\"tsx\">\n          {`export const useImageObjectUrl = ({\n  files,\n  supportedFileTypes,\n}: {\n  files: FileList | null | undefined;\n  supportedFileTypes: string[];\n}) => {\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [src, setSrc] = useState<string>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const file = files && files[0];\n    const img = imgRef.current;\n\n    if (!file || !img) return undefined;\n\n    if (!supportedFileTypes.includes(file.type)) {\n      return setError('Invalid file type');\n    }\n\n    const objectUrl = URL.createObjectURL(file);\n    const handleLoad = () => URL.revokeObjectURL(objectUrl);\n    img.addEventListener('load', handleLoad);\n    setSrc(objectUrl);\n    setError(undefined);\n\n    return () => {\n      img.removeEventListener('load', handleLoad);\n      URL.revokeObjectURL(objectUrl);\n    };\n  }, [files, supportedFileTypes]);\n\n  return { src, error, imgRef };\n};`}\n        </Code>\n      </div>\n    ),\n    references: [\n      {\n        name: `[MDN] Showing thumbnails of user-selected images`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Example_Showing_thumbnails_of_user-selected_images`,\n      },\n      {\n        name: `[MDN] Using object URLs to display imagesSection`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Example_Using_object_URLs_to_display_images`,\n      },\n      {\n        name: `[MDN] URL.createObjectURL()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL`,\n      },\n      {\n        name: `[MDN] URL.revokeObjectURL()`,\n        url: `https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL`,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React, { FC, memo, useState } from 'react';\nimport Question from 'components/Question';\nimport Checkbox from 'components/Checkbox';\nimport {\n  ButtonFileInput,\n  LabelFileInput,\n  DataUrlImageInput,\n  ObjectUrlImageInput,\n  PdfInput,\n} from 'components/FileInput';\nimport questions from './questions';\n\nexport const FileInput1Impl: FC = () => {\n  const [buttonFiles, setButtonFiles] = useState<FileList | null>();\n  const [buttonDraggable, setButtonDraggable] = useState(false);\n  const [labelFiles, setLabelFiles] = useState<FileList | null>();\n  const [labelDraggable, setLabelDraggable] = useState(false);\n  const [dataUrlFiles, setDataUrlFiles] = useState<FileList | null>();\n  const [objectUrlFiles, setObjectUrlFiles] = useState<FileList | null>();\n  const [pdfFiles, setPdfFiles] = useState<FileList | null>();\n\n  return (\n    <Question title=\"File Input 1\" questions={questions}>\n      <div className=\"mb-5\">\n        <h5>Button File Input</h5>\n        <Checkbox\n          label=\"Draggable?\"\n          id=\"buttonDraggable\"\n          checked={buttonDraggable}\n          onChange={setButtonDraggable}\n        />\n        <ButtonFileInput\n          id=\"buttonFileInput\"\n          multiple\n          draggable={buttonDraggable}\n          files={buttonFiles}\n          onChange={setButtonFiles}\n        />\n      </div>\n\n      <div className=\"mb-5\">\n        <h5>Label File Input</h5>\n        <Checkbox\n          label=\"Draggable?\"\n          id=\"labelDraggable\"\n          checked={labelDraggable}\n          onChange={setLabelDraggable}\n        />\n        <LabelFileInput\n          id=\"labelFileInput\"\n          multiple\n          draggable={labelDraggable}\n          files={labelFiles}\n          onChange={setLabelFiles}\n        />\n      </div>\n\n      <div className=\"mb-5\">\n        <h5>Data URL Image Input</h5>\n        <DataUrlImageInput\n          id=\"dataUrlImageInput\"\n          draggable\n          files={dataUrlFiles}\n          onChange={setDataUrlFiles}\n        />\n      </div>\n\n      <div className=\"mb-5\">\n        <h5>Object URL Image Input</h5>\n        <ObjectUrlImageInput\n          id=\"objectUrlImageInput\"\n          draggable\n          files={objectUrlFiles}\n          onChange={setObjectUrlFiles}\n        />\n      </div>\n\n      <div className=\"mb-5\">\n        <h5>PDF Input</h5>\n        <PdfInput\n          id=\"pdfInput\"\n          draggable\n          files={pdfFiles}\n          onChange={setPdfFiles}\n        />\n      </div>\n    </Question>\n  );\n};\n\nconst FileInput1 = memo(FileInput1Impl);\nFileInput1.displayName = 'FileInput1';\nexport default FileInput1;\n","import React, { FC, memo, ReactNode } from 'react';\nimport classes from './styles.module.scss';\n\nexport const QuestionImpl: FC<QuestionProps> = ({\n  title,\n  questions,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h2 className={classes.Title}>{title}</h2>\n    <div className={classes.Content}>{children}</div>\n    <div className={classes.Questions}>\n      <h3>Questions</h3>\n      <div>\n        {questions.map(({ question, answer, references }, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <details key={index}>\n            <summary className={classes.Question}>\n              <span className={classes.Index}>{index + 1}.</span> {question}\n            </summary>\n\n            <div className={classes.Answer}>{answer}</div>\n\n            {references && references.length && (\n              <div className={classes.References}>\n                <h4>References</h4>\n                <ol>\n                  {references.map(({ name, url }) => (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {name}\n                      </a>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            )}\n          </details>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nconst Question = memo(QuestionImpl);\nQuestion.displayName = 'Question';\nexport default Question;\n\nexport interface QuestionProps {\n  title: string;\n  questions: QuestionInfo[];\n  children?: ReactNode;\n}\n\nexport interface QuestionInfo {\n  question: ReactNode;\n  answer: ReactNode;\n  references?: ReferenceInfo[];\n}\n\nexport interface ReferenceInfo {\n  name: string;\n  url?: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__12Mbc\",\"Title\":\"styles_Title__2qxOI\",\"Content\":\"styles_Content__2wB8J\",\"Questions\":\"styles_Questions__1t11e\",\"Question\":\"styles_Question__3wRhS\",\"Index\":\"styles_Index__1JqtT\",\"Answer\":\"styles_Answer__2snZe\",\"References\":\"styles_References__2N6Wn\"};","import React, { FC, memo } from 'react';\nimport classnames from 'classnames';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classes from './styles.module.scss';\n\nexport const CodeImpl: FC<CodeProps> = ({\n  className,\n  children,\n  style = okaidia,\n  language,\n}) => (\n  <div className={classnames(classes.Code, className)}>\n    <SyntaxHighlighter language={language} style={style}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Code = memo(CodeImpl);\nCode.displayName = 'Code';\nexport default Code;\n\nexport interface CodeProps {\n  className?: string;\n  style?: object;\n  children: string;\n  language: Language;\n}\n\nexport type Language =\n  | 'abap'\n  | 'actionscript'\n  | 'ada'\n  | 'apacheconf'\n  | 'apl'\n  | 'applescript'\n  | 'arduino'\n  | 'arff'\n  | 'asciidoc'\n  | 'asm6502'\n  | 'aspnet'\n  | 'autohotkey'\n  | 'autoit'\n  | 'bash'\n  | 'basic'\n  | 'batch'\n  | 'bison'\n  | 'brainfuck'\n  | 'bro'\n  | 'c'\n  | 'clike'\n  | 'clojure'\n  | 'coffeescript'\n  | 'cpp'\n  | 'crystal'\n  | 'csharp'\n  | 'csp'\n  | 'cssExtras'\n  | 'css-extras'\n  | 'css'\n  | 'd'\n  | 'dart'\n  | 'diff'\n  | 'django'\n  | 'docker'\n  | 'eiffel'\n  | 'elixir'\n  | 'elm'\n  | 'erb'\n  | 'erlang'\n  | 'flow'\n  | 'fortran'\n  | 'fsharp'\n  | 'gedcom'\n  | 'gherkin'\n  | 'git'\n  | 'glsl'\n  | 'go'\n  | 'graphql'\n  | 'groovy'\n  | 'haml'\n  | 'handlebars'\n  | 'haskell'\n  | 'haxe'\n  | 'hpkp'\n  | 'hsts'\n  | 'http'\n  | 'ichigojam'\n  | 'icon'\n  | 'inform7'\n  | 'ini'\n  | 'io'\n  | 'j'\n  | 'java'\n  | 'javascript'\n  | 'jolie'\n  | 'json'\n  | 'jsx'\n  | 'julia'\n  | 'keyman'\n  | 'kotlin'\n  | 'latex'\n  | 'less'\n  | 'liquid'\n  | 'lisp'\n  | 'livescript'\n  | 'lolcode'\n  | 'lua'\n  | 'makefile'\n  | 'markdown'\n  | 'markupTemplating'\n  | 'markup-templating'\n  | 'markup'\n  | 'matlab'\n  | 'mel'\n  | 'mizar'\n  | 'monkey'\n  | 'n4js'\n  | 'nasm'\n  | 'nginx'\n  | 'nim'\n  | 'nix'\n  | 'nsis'\n  | 'objectivec'\n  | 'ocaml'\n  | 'opencl'\n  | 'oz'\n  | 'parigp'\n  | 'parser'\n  | 'pascal'\n  | 'perl'\n  | 'phpExtras'\n  | 'php-extras'\n  | 'php'\n  | 'plsql'\n  | 'powershell'\n  | 'processing'\n  | 'prolog'\n  | 'properties'\n  | 'protobuf'\n  | 'pug'\n  | 'puppet'\n  | 'pure'\n  | 'python'\n  | 'q'\n  | 'qore'\n  | 'r'\n  | 'reason'\n  | 'renpy'\n  | 'rest'\n  | 'rip'\n  | 'roboconf'\n  | 'ruby'\n  | 'rust'\n  | 'sas'\n  | 'sass'\n  | 'scala'\n  | 'scheme'\n  | 'scss'\n  | 'smalltalk'\n  | 'smarty'\n  | 'soy'\n  | 'sql'\n  | 'stylus'\n  | 'swift'\n  | 'tap'\n  | 'tcl'\n  | 'textile'\n  | 'tsx'\n  | 'tt2'\n  | 'twig'\n  | 'typescript'\n  | 'vbnet'\n  | 'velocity'\n  | 'verilog'\n  | 'vhdl'\n  | 'vim'\n  | 'visualBasic'\n  | 'visual-basic'\n  | 'wasm'\n  | 'wiki'\n  | 'xeora'\n  | 'xojo'\n  | 'xquery'\n  | 'yaml';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"styles_Code__2Axvp\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonBase\":\"styles_ButtonBase__1j16v\",\"FileInput\":\"styles_FileInput__3nuRI\",\"Button\":\"styles_Button__2K3co\",\"dragging\":\"styles_dragging__3qn2o\",\"Input\":\"styles_Input__3FuUr\",\"displayNone\":\"styles_displayNone__U6JcU\",\"visuallyHidden\":\"styles_visuallyHidden__22EBJ\",\"Filename\":\"styles_Filename__jpDkf\",\"ImagePreview\":\"styles_ImagePreview__2UTX3\",\"Image\":\"styles_Image__LYl5C\",\"Error\":\"styles_Error__1k_b3\",\"PdfPreview\":\"styles_PdfPreview__1QIL-\",\"Pdf\":\"styles_Pdf__bbHsK\"};"],"sourceRoot":""}