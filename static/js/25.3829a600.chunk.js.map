{"version":3,"sources":["questions/css/index.tsx","components/QuestionGroup/index.tsx","components/QuestionGroup/styles.module.scss"],"names":["routes","name","path","component","lazy","CssTricksImpl","url","match","title","basePath","CssTricks","memo","displayName","QuestionGroup","children","className","classes","Container","Title","module","exports"],"mappings":"2GAAA,+EAKMA,EAAsB,CAC1B,CACEC,KAAM,UACNC,KAAM,UACNC,UAAWC,eAAK,kBAAM,kCAExB,CACEH,KAAM,gBACNC,KAAM,gBACNC,UAAWC,eAAK,kBAAM,wDAExB,CACEH,KAAM,gBACNC,KAAM,gBACNC,UAAWC,eAAK,kBAAM,wDAExB,CACEH,KAAM,WACNC,KAAM,WACNC,UAAWC,eAAK,kBAAM,wDAExB,CACEH,KAAM,kBACNC,KAAM,kBACNC,UAAWC,eAAK,kBAAM,wDAExB,CACEH,KAAM,SACNC,KAAM,SACNC,UAAWC,eAAK,kBAAM,yDAIbC,EAAoC,SAAC,GAAD,IAAYC,EAAZ,EAAGC,MAASD,IAAZ,OAC/C,kBAAC,IAAD,CAAeE,MAAM,aAAaC,SAAUH,EAAKN,OAAQA,KAGrDU,EAAYC,eAAKN,GACvBK,EAAUE,YAAc,YACTF,a,gCC5Cf,qDAoBMG,EAAgBF,eAdmC,SAAC,GAAD,IACvDH,EADuD,EACvDA,MADuD,IAEvDC,gBAFuD,MAE5C,GAF4C,EAGvDT,EAHuD,EAGvDA,OACAc,EAJuD,EAIvDA,SAJuD,OAMvD,yBAAKC,UAAWC,IAAQC,WACtB,wBAAIF,UAAWC,IAAQE,OAAQV,GAC/B,kBAAC,IAAD,CAAKO,UAAU,OAAON,SAAUA,EAAUT,OAAQA,IAClD,kBAAC,IAAD,CAAQS,SAAUA,EAAUT,OAAQA,IACnCc,KAKLD,EAAcD,YAAc,gBACbC,O,mBCrBfM,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,IAAM","file":"static/js/25.3829a600.chunk.js","sourcesContent":["import React, { FC, memo, lazy } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport QuestionGroup from 'components/QuestionGroup';\nimport { RouteInfo } from 'helpers/routes';\n\nconst routes: RouteInfo[] = [\n  {\n    name: 'Newline',\n    path: 'newline',\n    component: lazy(() => import('questions/css/Newline1')),\n  },\n  {\n    name: 'Text Ellipsis',\n    path: 'text-ellipsis',\n    component: lazy(() => import('questions/css/TextEllipsis1')),\n  },\n  {\n    name: 'Flex Overflow',\n    path: 'flex-overflow',\n    component: lazy(() => import('questions/css/FlexOverflow1')),\n  },\n  {\n    name: 'Clipping',\n    path: 'clipping',\n    component: lazy(() => import('questions/css/Clipping1')),\n  },\n  {\n    name: 'Text Background',\n    path: 'text-background',\n    component: lazy(() => import('questions/css/TextBackground1')),\n  },\n  {\n    name: 'Shapes',\n    path: 'shapes',\n    component: lazy(() => import('questions/css/Shapes1')),\n  },\n];\n\nexport const CssTricksImpl: FC<CssTricksProps> = ({ match: { url } }) => (\n  <QuestionGroup title=\"CSS Tricks\" basePath={url} routes={routes} />\n);\n\nconst CssTricks = memo(CssTricksImpl);\nCssTricks.displayName = 'CssTricks';\nexport default CssTricks;\n\nexport type CssTricksProps = RouteComponentProps;\n","import React, { FC, memo, ReactNode } from 'react';\nimport Nav from 'components/Nav';\nimport Routes from 'components/Routes';\nimport { RouteInfo } from 'helpers/routes';\nimport classes from './styles.module.scss';\n\nexport const QuestionGroupImpl: FC<QuestionGroupProps> = ({\n  title,\n  basePath = '',\n  routes,\n  children,\n}) => (\n  <div className={classes.Container}>\n    <h1 className={classes.Title}>{title}</h1>\n    <Nav className=\"mb-5\" basePath={basePath} routes={routes} />\n    <Routes basePath={basePath} routes={routes} />\n    {children}\n  </div>\n);\n\nconst QuestionGroup = memo(QuestionGroupImpl);\nQuestionGroup.displayName = 'QuestionGroup';\nexport default QuestionGroup;\n\nexport interface QuestionGroupProps {\n  title: string;\n  basePath?: string;\n  routes: RouteInfo[];\n  children?: ReactNode;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__uonKl\",\"Title\":\"styles_Title__3nkm5\",\"Nav\":\"styles_Nav__Sbh1D\"};"],"sourceRoot":""}