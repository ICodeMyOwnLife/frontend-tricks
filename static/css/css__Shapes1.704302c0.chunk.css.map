{"version":3,"sources":["styles.module.scss"],"names":[],"mappings":"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","file":"css__Shapes1.704302c0.chunk.css","sourcesContent":["$colorPrimary: rgb(235, 222, 43);\n$colorSecondary: #fff;\n$dimension: 100px;\n$pixelWidth: 18px;\n$cos18deg: 0.9510565162951535;\n$cos30deg: 0.8660254037844386;\n$cos36deg: 0.8090169943749475;\n$cos45deg: 0.7071067811865476;\n$cos54deg: 0.5877852522924731;\n$sin18deg: 0.3090169943749474;\n$sin36deg: 0.5877852522924731;\n$tan10deg: 0.17632698070846498;\n$tan20deg: 0.36397023426620234;\n$tan36deg: 0.7265425280053608;\n$sqrt5: 2.23606797749979;\n\n.StyleEditor {\n  display: block;\n  color: rgb(246, 255, 235);\n  background-color: black;\n  white-space: pre;\n  caret-color: rgb(142, 255, 176);\n}\n\n.ShapeContainer {\n  padding: 20px;\n  margin-bottom: 20px;\n  border: 1px solid lightgray;\n}\n\n.Title {\n  margin: 0 0 16px;\n  font-size: 24px;\n  font-weight: bold;\n}\n\n@mixin rotateAnimations {\n  @each $axis in [X Y Z] {\n    @keyframes rotate#{$axis} {\n      0% {\n        transform: rotate#{$axis}#{'(0)'};\n      }\n\n      100% {\n        transform: rotate#{$axis}#{'(360deg)'};\n      }\n    }\n  }\n}\n\n@mixin rotateAnimation($axis) {\n  opacity: 0.7;\n  animation: rotate#{$axis} 6s linear infinite;\n}\n\n@include rotateAnimations();\n\n@mixin shape($color) {\n  display: inline-block;\n  background-color: $color;\n}\n\n@mixin emptyShape {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  background-color: transparent;\n}\n\n@mixin rectangle($width, $height, $color) {\n  @include shape($color);\n  width: $width;\n  height: $height;\n}\n\n@mixin square($sideDimension, $color) {\n  @include rectangle($sideDimension, $sideDimension, $color);\n}\n\n@mixin oval($width, $height, $color) {\n  @include rectangle($width, $height, $color);\n  border-radius: 100%;\n}\n\n@mixin circle($diameter, $color) {\n  @include oval($diameter, $diameter, $color);\n}\n\n@mixin isoscelesTriangle($height, $width, $apex, $color) {\n  $adjacentSides: (\n    top: left right,\n    bottom: left right,\n    left: top bottom,\n    right: top bottom,\n  );\n  @include emptyShape();\n  border-#{$apex}: $height solid $color;\n  @each $side in map-get($map: $adjacentSides, $key: $apex) {\n    border-#{$side}: $width/2 solid transparent;\n  }\n}\n\n@mixin equilateralTriangle($height, $apex, $color) {\n  $width: $height / $cos30deg;\n  $radius: $height / (2 * $cos30deg * $cos30deg);\n  @include isoscelesTriangle($height, $width, $apex, $color);\n  @if $apex == top {\n    transform-origin: $width / 2 $height - $radius;\n  } @else if $apex == bottom {\n    transform-origin: $width / 2 $radius;\n  } @else if $apex == right {\n    transform-origin: $radius $width / 2;\n  } @else if $apex == left {\n    transform-origin: $height - $radius $width / 2;\n  }\n}\n\n@mixin rightAngledTriangle($height, $shownSide, $hiddenSide, $color) {\n  @include emptyShape();\n  border-#{$shownSide}: $height solid $color;\n  border-#{$hiddenSide}: $height solid transparent;\n}\n\n@mixin curvedTailArrow($length, $color) {\n  $dimension: $length / 2;\n  @include emptyShape();\n  margin-left: $dimension;\n  border-right: $dimension solid $color;\n  border-top: $dimension solid transparent;\n  transform: rotate(12deg);\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: $dimension;\n    height: $dimension;\n    left: -$dimension * 0.7;\n    top: -$dimension * 1.2;\n    background: transparent;\n    border: 0 solid transparent;\n    border-top: $dimension * 0.4 solid $color;\n    border-radius: 100% 0 0 0;\n    transform: rotate(45deg);\n  }\n}\n\n@mixin trapezoid($upperWidth, $lowerWidth, $height, $color) {\n  $borderWidth: abs(\n      $number: $upperWidth - $lowerWidth,\n    ) / 2;\n  @include shape($color);\n  @if $upperWidth < $lowerWidth {\n    width: $upperWidth;\n    border-bottom: $height solid $color;\n  } @else {\n    width: $lowerWidth;\n    border-top: $height solid $color;\n  }\n  background-color: transparent;\n  border-left: $borderWidth solid transparent;\n  border-right: $borderWidth solid transparent;\n}\n\n@mixin parallelogram($width, $height, $color) {\n  $skewWidth: ($height * $tan20deg) / 2;\n  @include emptyShape();\n  position: relative;\n  margin: 0 $width + $skewWidth $height $skewWidth;\n  transform-origin: $width / 2 $height / 2;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: $width;\n    height: $height;\n    background-color: $color;\n    transform: skew(-20deg);\n  }\n}\n\n@mixin sixPointsStar($sideDimension, $color) {\n  $height: $sideDimension * $cos30deg;\n  $radius: $sideDimension / $cos30deg / 2;\n  @include equilateralTriangle($height, bottom, $color);\n  position: relative;\n  margin-bottom: $height / 3;\n  transform-origin: 50% $radius;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: $height / 3;\n    left: -$sideDimension / 2;\n    @include equilateralTriangle($height, top, $color);\n  }\n}\n\n@mixin fivePointsStar($sideDimension, $color) {\n  $upperThird: $sideDimension * $tan36deg / 2;\n  $middleThird: $upperThird;\n  $lowerThird: $sideDimension * $cos18deg - $middleThird - $upperThird;\n  $radius: $sideDimension / $sin36deg / 2;\n  @include isoscelesTriangle($middleThird, $sideDimension, top, $color);\n  position: relative;\n  margin: $upperThird 0 $lowerThird;\n  transform-origin: 50% $radius - ($upperThird + $middleThird);\n\n  &::before,\n  &::after {\n    top: -$middleThird - $upperThird;\n    content: '';\n    position: absolute;\n  }\n\n  &::before {\n    left: 0;\n    @include isoscelesTriangle($middleThird, $sideDimension, left, $color);\n    transform: rotate(18deg);\n    transform-origin: 0 0;\n  }\n\n  &::after {\n    left: -$middleThird;\n    @include isoscelesTriangle($middleThird, $sideDimension, right, $color);\n    transform: rotate(-18deg);\n    transform-origin: 100% 0;\n  }\n}\n\n@mixin pentagon($sideDimension, $color) {\n  $width: $sideDimension + 2 * $sideDimension * $sin18deg;\n  $height: $sideDimension * $cos18deg;\n  $top: $sideDimension * $sin36deg;\n  $radius: $sideDimension / 2 / $sin36deg;\n  @include isoscelesTriangle($top, $width, bottom, $color);\n  position: relative;\n  margin-bottom: $height;\n  transform-origin: 50% $radius;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: $top;\n    left: -$width / 2;\n    @include trapezoid($width, $sideDimension, $height, $color);\n  }\n}\n\n@mixin hexagon($sideDimension, $color) {\n  $width: $sideDimension * $cos30deg * 2;\n  @include rectangle($width, $sideDimension, $color);\n  position: relative;\n  margin: $sideDimension / 2 0;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n  }\n\n  &::before {\n    top: -$sideDimension/2;\n    @include isoscelesTriangle($sideDimension / 2, $width, bottom, $color);\n  }\n\n  &::after {\n    top: $sideDimension;\n    @include isoscelesTriangle($sideDimension / 2, $width, top, $color);\n  }\n}\n\n@mixin octagon($sideDimension, $color) {\n  $sideBorder: $sideDimension * $cos45deg;\n  $width: $sideDimension + 2 * $sideBorder;\n  @include rectangle($width, $sideDimension, $color);\n  position: relative;\n  margin: $sideBorder 0;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n  }\n\n  &::before {\n    top: -$sideBorder;\n    @include trapezoid($sideDimension, $width, $sideBorder, $color);\n  }\n\n  &::after {\n    top: $sideDimension;\n    @include trapezoid($width, $sideDimension, $sideBorder, $color);\n  }\n}\n\n@mixin heart($height, $color) {\n  $halfWidth: $height * 5/8;\n  @include emptyShape();\n  position: relative;\n  display: inline-block;\n  margin: $height * 0.0375 $height * 1.25 $height * 1.0375 0;\n  transform-origin: $halfWidth;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: $halfWidth;\n    height: $height;\n    top: 0;\n    background-color: $color;\n    border-radius: $halfWidth $halfWidth 0 0;\n  }\n\n  &::before {\n    left: $halfWidth;\n    transform-origin: 0 100%;\n    transform: rotate(-45deg);\n  }\n\n  &::after {\n    left: 0;\n    transform-origin: 100% 100%;\n    transform: rotate(45deg);\n  }\n}\n\n@mixin infinity($diameter, $color) {\n  @include emptyShape();\n  position: relative;\n  margin: 0 $diameter * 3.6 $diameter * 5/3 0;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: $diameter;\n    height: $diameter;\n    border: $diameter/3 solid $colorPrimary;\n    transform: rotate(-45deg);\n  }\n\n  &::before {\n    left: 0;\n    border-radius: 100% 100% 0;\n  }\n\n  &::after {\n    left: $diameter * 1.9;\n    border-radius: 0 100% 100%;\n  }\n}\n\n@mixin diamondSquare($sideDimension, $color) {\n  $width: $sideDimension / $cos45deg;\n  @include emptyShape();\n  position: relative;\n  margin: ($width - $sideDimension) / 2 ($width + $sideDimension) / 2\n    ($width + $sideDimension) / 2 ($width - $sideDimension) / 2;\n  transform-origin: $sideDimension / 2 $sideDimension / 2;\n\n  &::after {\n    content: '';\n    position: absolute;\n    @include square($sideDimension, $color);\n    transform: rotate(45deg);\n  }\n}\n\n@mixin diamondShield($height, $color) {\n  $width: $height * 4/5 / $cos30deg;\n  @include isoscelesTriangle($height/5, $width, bottom, $color);\n  position: relative;\n  margin-bottom: $height * 4/5;\n  transform-origin: 50% $height / 2;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: -$width / 2;\n    top: $height/5;\n    @include isoscelesTriangle($height * 4/5, $width, top, $color);\n  }\n}\n\n@mixin diamondNarrow($sideDimension, $color) {\n  $height: $sideDimension * $cos30deg;\n  @include equilateralTriangle($height, bottom, $color);\n  position: relative;\n  margin-bottom: $height;\n  transform-origin: 50% $height;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: $height;\n    left: -$sideDimension / 2;\n    @include equilateralTriangle($height, top, $color);\n  }\n}\n\n@mixin cutDiamond($sideDimension, $color) {\n  $lowerHeight: $sideDimension * $cos30deg;\n  $upperHeight: $lowerHeight / 3.2;\n  $upperWidth: $sideDimension * 2 / 3;\n  @include trapezoid($upperWidth, $sideDimension, $upperHeight, $color);\n  position: relative;\n  margin-bottom: $lowerHeight;\n  transform-origin: 50% ($upperHeight + $lowerHeight) / 2;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: $upperHeight;\n    left: ($upperWidth - $sideDimension) / 2;\n    @include equilateralTriangle($lowerHeight, top, $color);\n  }\n}\n\n@mixin egg($height, $isUpward, $color) {\n  $width: $height * 0.8;\n  @include shape($color);\n  width: $width;\n  height: $height;\n  @if $isUpward {\n    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;\n  } @else {\n    border-radius: 50% 50% 50% 50% / 40% 40% 60% 60%;\n  }\n}\n\n@mixin pacman($diameter, $direction, $color) {\n  @include emptyShape();\n  border: $diameter / 2 solid $color;\n  border-#{$direction}-color: transparent;\n  border-radius: 50%;\n}\n\n@mixin talkBubble($width, $height, $color) {\n  $arrowHeight: 20px;\n  $borderRadius: 12px;\n  @include shape($color);\n  position: relative;\n  width: $width;\n  height: $height;\n  border-radius: $borderRadius;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: $height;\n    right: $width / 4;\n    @include equilateralTriangle($arrowHeight, top, $color);\n  }\n}\n\n@mixin twelvePointsBurst($sideDimension, $color) {\n  $margin: $sideDimension * $sqrt5 / (3 + $sqrt5) / 2;\n  @include square($sideDimension, $color);\n  position: relative;\n  margin: $margin;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    @include square($sideDimension, $color);\n  }\n\n  &::before {\n    transform: rotate(-30deg);\n  }\n\n  &::after {\n    transform: rotate(30deg);\n  }\n}\n\n@mixin eightPointsBurst($sideDimension, $color) {\n  $margin: $sideDimension / (2 + 2 / $cos45deg);\n  @include square($sideDimension, $color);\n  position: relative;\n  margin: $margin;\n\n  &::after {\n    content: '';\n    position: absolute;\n    @include square($sideDimension, $color);\n    transform: rotate(45deg);\n  }\n}\n\n@mixin yinYang($diameter, $color1, $color2) {\n  $borderWidth: 2px;\n  $innerDiameter: $diameter / 8;\n  $innerBorderWidth: ($diameter / 2 - $innerDiameter) / 2;\n  $top: ($diameter - ($innerDiameter + 2 * $innerBorderWidth)) / 2;\n  @include shape($color1);\n  position: relative;\n  width: $diameter;\n  height: $diameter / 2;\n  background-color: $color2;\n  border: $borderWidth solid $color1;\n  border-bottom-width: $diameter / 2 + $borderWidth;\n  border-radius: 50%;\n  box-sizing: content-box;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n  }\n\n  &::before {\n    @include circle($innerDiameter, $color2);\n    top: $top;\n    left: 0;\n    border: $innerBorderWidth solid $color1;\n  }\n\n  &::after {\n    @include circle($innerDiameter, $color1);\n    top: $top;\n    right: 0;\n    border: $innerBorderWidth solid $color2;\n  }\n}\n\n@mixin badgeRibbon($diameter, $color) {\n  $triangleHeight: $diameter * 0.7;\n  $triangleWidth: $diameter * 0.8;\n  $bottom: $diameter * 0.28;\n  @include circle($diameter, $color);\n  position: relative;\n  margin-bottom: $bottom;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    top: $diameter / 2;\n  }\n\n  &::before {\n    @include isoscelesTriangle($triangleHeight, $triangleWidth, left, $color);\n    left: $diameter / 4;\n    transform: rotate(12deg);\n    transform-origin: 0 0;\n  }\n\n  &::after {\n    @include isoscelesTriangle($triangleHeight, $triangleWidth, right, $color);\n    right: $diameter / 4;\n    transform: rotate(-12deg);\n    transform-origin: 100% 0;\n  }\n}\n\n@mixin spaceInvader($pixel, $color) {\n  @include shape($color);\n  margin: $pixel * 3 $pixel * 5 $pixel * 4;\n  box-shadow: 0 0 0 1 * $pixel $color, 0 1 * $pixel 0 1 * $pixel $color,\n    -2.5 * $pixel 1.5 * $pixel 0 0.5 * $pixel $color,\n    2.5 * $pixel 1.5 * $pixel 0 0.5 * $pixel $color,\n    -3 * $pixel -3 * $pixel 0 0 $color, 3 * $pixel -3 * $pixel 0 0 $color,\n    -2 * $pixel -2 * $pixel 0 0 $color, 2 * $pixel -2 * $pixel 0 0 $color,\n    -3 * $pixel -1 * $pixel 0 0 $color, -2 * $pixel -1 * $pixel 0 0 $color,\n    2 * $pixel -1 * $pixel 0 0 $color, 3 * $pixel -1 * $pixel 0 0 $color,\n    -4 * $pixel 0 0 0 $color, -3 * $pixel 0 0 0 $color, 3 * $pixel 0 0 0 $color,\n    4 * $pixel 0 0 0 $color, -5 * $pixel 1 * $pixel 0 0 $color,\n    -4 * $pixel 1 * $pixel 0 0 $color, 4 * $pixel 1 * $pixel 0 0 $color,\n    5 * $pixel 1 * $pixel 0 0 $color, -5 * $pixel 2 * $pixel 0 0 $color,\n    5 * $pixel 2 * $pixel 0 0 $color, -5 * $pixel 3 * $pixel 0 0 $color,\n    -3 * $pixel 3 * $pixel 0 0 $color, 3 * $pixel 3 * $pixel 0 0 $color,\n    5 * $pixel 3 * $pixel 0 0 $color, -2 * $pixel 4 * $pixel 0 0 $color,\n    -1 * $pixel 4 * $pixel 0 0 $color, 1 * $pixel 4 * $pixel 0 0 $color,\n    2 * $pixel 4 * $pixel 0 0 $color;\n  width: 1 * $pixel;\n  height: 1 * $pixel;\n}\n\n@mixin tvScreen($height, $color) {\n  $width: $height * 4/3;\n  @include shape($color);\n  position: relative;\n  margin: 0 $height / 15;\n  width: $width;\n  height: $height;\n  border-radius: 50% / 10%;\n\n  &::after {\n    @include shape($color);\n    content: '';\n    position: absolute;\n    top: 10%;\n    bottom: 10%;\n    left: -5%;\n    right: -5%;\n    border-radius: 5% / 50%;\n  }\n}\n\n@mixin chevron($height, $color) {\n  $width: $height * 1.3;\n  $skewAngle: 10deg;\n  $skewHeight: $width * $tan10deg / 2;\n  @include emptyShape();\n  position: relative;\n  margin: $skewHeight $width * 2 $height + $skewHeight 0;\n  transform-origin: $width 0;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: $width;\n    height: $height;\n    top: $skewHeight;\n    background-color: $color;\n  }\n\n  &::before {\n    left: 0;\n    transform-origin: 100% 0;\n    transform: skewY($skewAngle);\n  }\n\n  &::after {\n    left: $width;\n    transform-origin: 0 0;\n    transform: skewY(-$skewAngle);\n  }\n}\n\n@mixin magnifyingGlass($diameter, $color) {\n  $thickness: $diameter / 5;\n  $innerDiameter: $diameter - 2 * $thickness;\n  $handleLength: $diameter / 2 + $thickness;\n  $margin: $diameter * 0.275;\n  @include emptyShape();\n  position: relative;\n  width: $innerDiameter;\n  height: $innerDiameter;\n  margin: 0 $margin $margin 0;\n  border: $thickness solid $color;\n  border-radius: 50%;\n\n  &::after {\n    @include rectangle($handleLength, $thickness, $color);\n    content: '';\n    position: absolute;\n    left: $diameter - 2 * $thickness;\n    top: ($diameter - 3 * $thickness) / 2;\n    transform-origin: -($diameter / 2 - $thickness) $thickness / 2;\n    transform: rotateZ(45deg);\n  }\n}\n\n@mixin moon($diameter, $color) {\n  $thickness: $diameter * 0.1875;\n  $innerDiameter: $diameter - $thickness;\n  @include emptyShape();\n  width: $innerDiameter;\n  height: $innerDiameter;\n  margin: $thickness * -1 $thickness $thickness $thickness * -1;\n  border-radius: 50%;\n  box-shadow: $thickness $thickness 0 0 $color;\n}\n\n@mixin flag($width, $color) {\n  $top: $width / 2;\n  $bottom: $width / 4;\n  @include emptyShape();\n  border-width: $top $width / 2 $bottom;\n  border-style: solid;\n  border-color: $color $color transparent;\n}\n\n@mixin cone($width, $height, $color) {\n  @include emptyShape();\n  border-width: $height $width / 2 0;\n  border-style: solid;\n  border-color: $color transparent transparent;\n  border-radius: 50%;\n}\n\n@mixin cross($length, $color) {\n  $thickness: $length / 5;\n  $side: ($length - $thickness) / 2;\n  @include rectangle($thickness, $length, $color);\n  position: relative;\n  margin: 0 $side;\n\n  &::after {\n    @include rectangle($length, $thickness, $color);\n    content: '';\n    position: absolute;\n    left: -$side;\n    top: $side;\n  }\n}\n\n@mixin base($width, $color) {\n  $height: $width * 0.5;\n  $top: $width * 0.3;\n  @include rectangle($width, $height, $color);\n  position: relative;\n  margin-top: $top;\n\n  &::before {\n    @include isoscelesTriangle($top, $width, bottom, $color);\n    content: '';\n    position: absolute;\n    top: -$top;\n    left: 0;\n  }\n}\n\n@mixin pointer($width, $height, $color) {\n  @include emptyShape();\n  position: relative;\n  width: $width;\n  border-top: $height solid $color;\n  border-bottom: $height solid $color;\n  border-left: $height solid transparent;\n\n  &::after {\n    @include isoscelesTriangle($height, $height * 2, left, $color);\n    content: '';\n    position: absolute;\n    top: -$height;\n    right: -$height;\n  }\n}\n\n@mixin lock($width, $color) {\n  $holeWidth: $width / 6;\n  $holeHeight: $width / 2.8;\n  $loopWidth: $width / 2.2;\n  $loopHeight: $width / 2.5;\n  $thickness: $width / 6;\n  @include emptyShape();\n  position: relative;\n  width: $holeWidth;\n  height: $holeHeight;\n  margin-top: $loopHeight + $thickness;\n  border-style: solid;\n  border-color: $color;\n  border-width: $thickness ($width - $holeWidth) / 2;\n  border-radius: 16%;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n  }\n\n  &::before {\n    @include emptyShape();\n    top: -($loopHeight + 2 * $thickness);\n    left: -(($loopWidth - $holeWidth) / 2 + $thickness);\n    width: $loopWidth;\n    height: $loopHeight;\n    border: $thickness solid $color;\n    border-radius: 50% 50% 0 0;\n  }\n\n  &::after {\n    top: -$thickness;\n    left: -$thickness;\n    width: $holeWidth;\n    height: $holeHeight;\n    border: $thickness solid $color;\n    border-radius: 50%/36%;\n  }\n}\n\n.rectangle {\n  @include rotateAnimation(Y);\n  @include rectangle($dimension * 1.4, $dimension, $colorPrimary);\n}\n\n.square {\n  @include rotateAnimation(Z);\n  @include square($dimension, $colorPrimary);\n}\n\n.oval {\n  @include rotateAnimation(Y);\n  @include oval($dimension * 1.6, $dimension, $colorPrimary);\n}\n\n.circle {\n  @include rotateAnimation(Z);\n  @include circle($dimension, $colorPrimary);\n}\n\n.triangleUp {\n  @include rotateAnimation(Z);\n  @include equilateralTriangle($dimension, bottom, $colorPrimary);\n}\n\n.triangleDown {\n  @include rotateAnimation(Z);\n  @include equilateralTriangle($dimension, top, $colorPrimary);\n}\n\n.triangleLeft {\n  @include rotateAnimation(Z);\n  @include equilateralTriangle($dimension, right, $colorPrimary);\n}\n\n.triangleRight {\n  @include rotateAnimation(Z);\n  @include equilateralTriangle($dimension, left, $colorPrimary);\n}\n\n.triangleTopLeft {\n  @include rightAngledTriangle($dimension, top, right, $colorPrimary);\n}\n\n.triangleTopRight {\n  @include rightAngledTriangle($dimension, top, left, $colorPrimary);\n}\n\n.triangleBottomLeft {\n  @include rightAngledTriangle($dimension, bottom, right, $colorPrimary);\n}\n\n.triangleBottomRight {\n  @include rightAngledTriangle($dimension, bottom, left, $colorPrimary);\n}\n\n.curvedTailArrow {\n  @include curvedTailArrow($dimension, $colorPrimary);\n}\n\n.trapezoid {\n  @include rotateAnimation(Y);\n  @include trapezoid($dimension, $dimension * 1.4, $dimension, $colorPrimary);\n}\n\n.parallelogram {\n  @include rotateAnimation(Y);\n  @include parallelogram($dimension, $dimension, $colorPrimary);\n}\n\n.sixPointsStar {\n  @include rotateAnimation(Z);\n  @include sixPointsStar($dimension, $colorPrimary);\n}\n\n.fivePointsStar {\n  @include rotateAnimation(Z);\n  @include fivePointsStar($dimension, $colorPrimary);\n}\n\n.pentagon {\n  @include rotateAnimation(Z);\n  @include pentagon($dimension, $colorPrimary);\n}\n\n.hexagon {\n  @include rotateAnimation(Z);\n  @include hexagon($dimension, $colorPrimary);\n}\n\n.octagon {\n  @include rotateAnimation(Z);\n  @include octagon($dimension, $colorPrimary);\n}\n\n.heart {\n  @include rotateAnimation(Y);\n  @include heart($dimension, $colorPrimary);\n}\n\n.infinity {\n  @include infinity($dimension, $colorPrimary);\n}\n\n.diamondSquare {\n  @include rotateAnimation(Y);\n  @include diamondSquare($dimension, $colorPrimary);\n}\n\n.diamondShield {\n  @include rotateAnimation(Y);\n  @include diamondShield($dimension, $colorPrimary);\n}\n\n.diamondNarrow {\n  @include rotateAnimation(Y);\n  @include diamondNarrow($dimension, $colorPrimary);\n}\n\n.cutDiamond {\n  @include rotateAnimation(Y);\n  @include cutDiamond($dimension, $colorPrimary);\n}\n\n.egg {\n  @include rotateAnimation(Y);\n  @include egg($dimension, true, $colorPrimary);\n}\n\n.pacman {\n  @include rotateAnimation(Z);\n  @include pacman($dimension, right, $colorPrimary);\n}\n\n.talkBubble {\n  @include rotateAnimation(Y);\n  @include talkBubble($dimension * 1.4, $dimension, $colorPrimary);\n}\n\n.twelvePointsBurst {\n  @include rotateAnimation(Z);\n  @include twelvePointsBurst($dimension, $colorPrimary);\n}\n\n.eightPointsBurst {\n  @include rotateAnimation(Z);\n  @include eightPointsBurst($dimension, $colorPrimary);\n}\n\n.yinYang {\n  @include rotateAnimation(Z);\n  @include yinYang($dimension, $colorPrimary, $colorSecondary);\n}\n\n.badgeRibbon {\n  @include rotateAnimation(Y);\n  @include badgeRibbon($dimension, $colorPrimary);\n}\n\n.spaceInvader {\n  @include rotateAnimation(Y);\n  @include spaceInvader($pixelWidth, $colorPrimary);\n}\n\n.tvScreen {\n  @include rotateAnimation(Y);\n  @include tvScreen($dimension, $colorPrimary);\n}\n\n.chevron {\n  @include rotateAnimation(Y);\n  @include chevron($dimension, $colorPrimary);\n}\n\n.magnifyingGlass {\n  @include magnifyingGlass($dimension, $colorPrimary);\n}\n\n.moon {\n  @include moon($dimension, $colorPrimary);\n}\n\n.flag {\n  @include rotateAnimation(Y);\n  @include flag($dimension, $colorPrimary);\n}\n\n.cone {\n  @include rotateAnimation(Y);\n  @include cone($dimension, $dimension * 0.8, $colorPrimary);\n}\n\n.cross {\n  @include rotateAnimation(Z);\n  @include cross($dimension, $colorPrimary);\n}\n\n.base {\n  @include rotateAnimation(Y);\n  @include base($dimension, $colorPrimary);\n}\n\n.pointer {\n  @include pointer($dimension, $dimension / 10, $colorPrimary);\n}\n\n.lock {\n  @include rotateAnimation(Y);\n  @include lock($dimension, $colorPrimary);\n}\n"]}